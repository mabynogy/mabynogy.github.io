{"add":{"id":"add","name":"add","branch":"prg-compile","path":"prg-compile/level-a/add.js","sloc":7,"content":"function add(x,y,...z)\n{\n const n=x+y\n \n if(is_empty(z))\n  return n\n \n return add(n,...z)\n}"},"and":{"id":"and","name":"and","branch":"prg-compile","path":"prg-compile/level-c/and.cs","sloc":6,"content":"fn and x y z:spread\n let r inline \"x&&y\"\n \n if is_empty z\n  ret r\n \n ret add c z:spread\nend"},"angle":{"id":"angle","name":"angle","branch":"prg-compile","path":"prg-compile/level-b/angle.js","sloc":5,"content":"function angle(x)\n{\n check(is_str,x)\n \n return concat(\"<\",x,\">\")\n}"},"api-db-init":{"id":"api-db-init","name":"api-db-init","branch":"lib-vps","path":"lib-vps/api-db-init.cs","sloc":14,"content":"gn api_db_init x\n let id \"int\"\n let parent \"int\"\n let _order \"int\" \n let title \"text\"\n let content \"text\" \n let structure obj id parent _order title content\n \n run api_table_init \"page\" structure\n\n let id \"int\"\n let mail \"text\"\n let password \"text\"\n let structure obj id mail password\n\n run api_table_init \"user\" structure\nend"},"api-is-id":{"id":"api-is-id","name":"api-is-id","branch":"lib-vps","path":"lib-vps/api-is-id.cs","sloc":9,"content":"gn api_is_id x y\n check is_str x\n check is_int y\n\n let response run api_post \"is-id\" x  y\n \n if is_true response.result\n  ret is_full response.data\n\n run api_report \"api-is-id\" response\n stop\nend"},"api-is-table":{"id":"api-is-table","name":"api-is-table","branch":"lib-vps","path":"lib-vps/api-is-table.cs","sloc":5,"content":"gn api_is_table x\n check is_str x\n\n let response run api_post \"is-table\" x \n  \n ret is_true response.result\nend"},"api-login":{"id":"api-login","name":"api-login","branch":"lib-vps","path":"lib-vps/api-login.cs","sloc":6,"content":"gn api_login x y\n check is_str x\n check is_str y\n\n let response run api_post \"login\" x y\n \n ret is_true response\nend"},"api-post":{"id":"api-post","name":"api-post","branch":"lib-vps","path":"lib-vps/api-post.cs","sloc":13,"content":"gn api_post x y:spread\n check is_str x\n check is_arr y\n \n let url concat \"https://pimaastore.com/\" x \".php\"\n let payload to_json y\n let response run xhr_post url payload\n\n if not is_json response\n  let context obj response\n  \n  run api_report x context\n  stop\n end\n\n ret from_json response\nend"},"api-report":{"id":"api-report","name":"api-report","branch":"lib-gui","path":"lib-gui/api-report.cs","sloc":20,"content":"gn api_report x y\n check is_str x\n check is_def y\n \n if not is_obj y\n  let value y\n  let o obj value\n  \n  ret api_report x o\n end\n \n check is_obj y\n\n let endpoint \"report\"\n let url concat \"https://pimaastore.com/\" endpoint \".php\"\n let payload flatten y \n let tbl tbl_init payload\n let tbl tbl_render tbl\n \n log \"report\" x\n log tbl\n \n let payload arr x payload\n let payload to_json payload\n \n run xhr_post url payload\nend"},"api-table-count":{"id":"api-table-count","name":"api-table-count","branch":"lib-vps","path":"lib-vps/api-table-count.cs","sloc":13,"content":"gn api_table_count x\n check is_str x\n\n let response run api_post \"table-count\" x\n\n if is_true response.result\n  let r response.data\n  let r front r\n  let r r.result\n  \n  if is_uint r\n   ret r\n end\n \n run api_report \"api-table-count\" response\n stop\nend"},"api-table-create":{"id":"api-table-create","name":"api-table-create","branch":"lib-vps","path":"lib-vps/api-table-create.cs","sloc":9,"content":"gn api_table_create x y\n check is_str x\n check is_obj y\n\n let response run api_post \"table-create\" x y\n \n if is_true response.result\n  ret\n \n run api_report \"api-table-create\" response\n stop\nend"},"api-table-delete":{"id":"api-table-delete","name":"api-table-delete","branch":"lib-vps","path":"lib-vps/api-table-delete.cs","sloc":10,"content":"gn api_table_delete x y\n check is_str x\n check is_int y\n \n let login call login_init\n let response run api_post \"table-delete\" login.mail login.password x y\n \n if is_true response.result   \n  ret\n   \n run api_report \"api-table-delete\" response\n stop\nend"},"api-table-id":{"id":"api-table-id","name":"api-table-id","branch":"lib-vps","path":"lib-vps/api-table-id.cs","sloc":11,"content":"gn api_table_id x\n check is_str x\n\n var r run api_table_count x\n \n while true\n  let b run api_is_id x r\n  \n  if b\n   assign r inc r\n  else\n   ret r   \n end\nend"},"api-table-init":{"id":"api-table-init","name":"api-table-init","branch":"lib-vps","path":"lib-vps/api-table-init.cs","sloc":7,"content":"gn api_table_init x y\n check is_str x\n check is_obj y\n\n if run api_is_table x\n  ret\n \n run api_table_create x y\nend"},"api-table-insert":{"id":"api-table-insert","name":"api-table-insert","branch":"lib-vps","path":"lib-vps/api-table-insert.cs","sloc":27,"content":"gn api_table_insert x y\n check is_str x\n check is_obj y\n check same y.id -1\n \n let o db_page_escape y\n \n assign o.id run api_table_id x\n  \n while true\n  let login call login_init\n  let response run api_post \"table-insert\" login.mail login.password x o\n\n  if is_true response.result   \n   ret db_page_unescape o\n   \n  let error response.error\n  \n  if is_obj error\n   let error error.errorInfo\n   \n   if is_arr error\n    if gt error.length 1\n     let error at error 1\n     \n     if same error 1062\n      assign o.id inc o.id\n      \n      cont\n    end\n   end\n  end\n   \n  run api_report \"api-table-insert\" response\n  stop\n end\nend"},"api-table-select":{"id":"api-table-select","name":"api-table-select","branch":"lib-vps","path":"lib-vps/api-table-select.cs","sloc":17,"content":"gn api_table_select x\n check is_str x\n\n let response run api_post \"table-select\" x\n \n if is_true response.result\n  let data response.data\n  \n  if is_arr data\n   let r arr\n   \n   forof data\n    let o db_page_unescape v\n    \n    push r o\n   end\n   \n   ret r\n  end\n end\n \n run api_report \"api-table-select\" response\n stop\nend"},"api-table-update":{"id":"api-table-update","name":"api-table-update","branch":"lib-vps","path":"lib-vps/api-table-update.cs","sloc":12,"content":"gn api_table_update x y\n check is_str x\n check is_obj y\n check gte y.id 0\n \n let login call login_init\n let o db_page_escape y\n let response run api_post \"table-update\" login.mail login.password x o\n \n if is_true response.result\n  ret dup y\n   \n run api_report \"api-table-update\" response\n stop\nend"},"app-name":{"id":"app-name","name":"app-name","branch":"prg-compile","path":"prg-compile/level-a/app-name.js","sloc":5,"content":"function app_name()\n{\n const script=argv_script()\n \n return path_name(script)\n}"},"append":{"id":"append","name":"append","branch":"prg-compile","path":"prg-compile/level-a/append.js","sloc":9,"content":"function append(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n \n for(const v of y)\n {\n  push(x,v)\n }\n}"},"argv-arguments":{"id":"argv-arguments","name":"argv-arguments","branch":"prg-compile","path":"prg-compile/level-a/argv-arguments.js","sloc":4,"content":"function argv_arguments()\n{\n return slice(process.argv,2)\n}"},"argv-binary":{"id":"argv-binary","name":"argv-binary","branch":"prg-compile","path":"prg-compile/level-a/argv-binary.js","sloc":4,"content":"function argv_binary()\n{\n return front(process.argv)\n}"},"argv-params":{"id":"argv-params","name":"argv-params","branch":"lib-gui","path":"lib-gui/argv-params.cs","sloc":3,"content":"fn argv_params\n ret new URLSearchParams location.search\nend"},"argv-script":{"id":"argv-script","name":"argv-script","branch":"prg-compile","path":"prg-compile/level-a/argv-script.js","sloc":4,"content":"function argv_script()\n{\n return at(process.argv,1)\n}"},"arr":{"id":"arr","name":"arr","branch":"prg-compile","path":"prg-compile/level-a/arr.js","sloc":4,"content":"function arr(...x)\n{\n return [...x]\n}"},"asc":{"id":"asc","name":"asc","branch":"prg-compile","path":"prg-compile/level-c/asc.cs","sloc":4,"content":"fn asc x\n check is_char x\n\n ret x.charCodeAt 0\nend"},"ast-assign":{"id":"ast-assign","name":"ast-assign","branch":"prg-compile","path":"prg-compile/src/ast/ast-assign.js","sloc":11,"content":"function ast_assign(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n check(is_empty,y)\n\n const left=front(x)\n \n check(is_name,left)\n \n const right=slice(x,1)\n const rvalue=expr_rvalue(...right)\n \n return concat(left,\"=\",rvalue)\n}"},"ast-begin":{"id":"ast-begin","name":"ast-begin","branch":"prg-compile","path":"prg-compile/src/ast/ast-begin.js","sloc":12,"content":"function ast_begin(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n check(is_empty,x)\n \n const s=ast_block(y)\n \n if(is_cs())\n  return s\n \n if(is_cu())\n  return concat(\"do\\n\",s)\n  \n stop()\n}"},"ast-block":{"id":"ast-block","name":"ast-block","branch":"prg-compile","path":"prg-compile/src/ast/ast-block.js","sloc":21,"content":"//let level=\"global\"\n\nfunction ast_block(x)\n{\n check(is_arr,x)\n \n let s=x\n \n s=pass_block(s)\n s=indent(s)\n \n if(is_cs())\n { \n  if(is_empty(s))\n   return \"{\\n}\"\n  \n  return concat(\"{\\n\",s,\"\\n}\")\n }\n else if(is_cu())\n { \n  if(is_empty(s))\n   return \"end\"\n  \n  return concat(s,\"\\nend\")\n }\n else\n  stop()\n}"},"ast-brk":{"id":"ast-brk","name":"ast-brk","branch":"prg-compile","path":"prg-compile/src/ast/ast-brk.js","sloc":8,"content":"function ast_brk(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n check(is_empty,x)\n check(is_empty,y)\n \n return \"break\"\n}"},"ast-call":{"id":"ast-call","name":"ast-call","branch":"prg-compile","path":"prg-compile/src/ast/ast-call.js","sloc":8,"content":"function ast_call(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n check(is_full,x)\n check(is_empty,y)\n  \n return expr_call(...x)\n}"},"ast-catch":{"id":"ast-catch","name":"ast-catch","branch":"prg-compile","path":"prg-compile/src/ast/ast-catch.js","sloc":13,"content":"function ast_catch(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n\n const block=ast_block(y)\n \n if(is_empty(x))\n  return concat(\"catch\\n\",block)\n \n check(is_single,x)\n \n const identifier=front(x)\n \n check(is_identifier,identifier)\n \n const list=paren(identifier)\n \n return concat(\"catch\",list,\"\\n\",block)\n}"},"ast-check":{"id":"ast-check","name":"ast-check","branch":"prg-compile","path":"prg-compile/src/ast/ast-check.js","sloc":11,"content":"function ast_check(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n check(is_empty,y)\n  \n let r=x\n \n r=join(r,\",\")\n r=paren(r)\n r=concat(\"check\",r)\n \n return r\n}"},"ast-cont":{"id":"ast-cont","name":"ast-cont","branch":"prg-compile","path":"prg-compile/src/ast/ast-cont.js","sloc":8,"content":"function ast_cont(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n check(is_empty,x)\n check(is_empty,y)\n \n return \"continue\"\n}"},"ast-declare":{"id":"ast-declare","name":"ast-declare","branch":"prg-compile","path":"prg-compile/src/ast/ast-declare.js","sloc":10,"content":"function ast_declare(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n check(is_empty,y)\n\n const left=front(x)\n const right=slice(x,1) \n const rvalue=expr_rvalue(...right)\n \n return concat(left,\"=\",rvalue)\n}"},"ast-else":{"id":"ast-else","name":"ast-else","branch":"prg-compile","path":"prg-compile/src/ast/ast-else.js","sloc":8,"content":"function ast_else(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n \n check(is_empty,x)\n \n const block=ast_block(y)\n \n return concat(\"else\\n\",block)\n}"},"ast-elseif":{"id":"ast-elseif","name":"ast-elseif","branch":"prg-compile","path":"prg-compile/src/ast/ast-elseif.js","sloc":9,"content":"function ast_elseif(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n \n const rvalue=expr_rvalue(...x)\n const list=paren(rvalue)\n const block=ast_block(y)\n \n return concat(\"else if\",list,\"\\n\",block)\n}"},"ast-fn":{"id":"ast-fn","name":"ast-fn","branch":"prg-compile","path":"prg-compile/src/ast/ast-fn.js","sloc":10,"content":"function ast_fn(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n\n if(is_cs()) \n  return ast_xn(x,y,\"function\")\n\n if(is_cu()) \n  return ast_xn(x,y,\"local function\")\n \n stop()\n}"},"ast-forin":{"id":"ast-forin","name":"ast-forin","branch":"prg-compile","path":"prg-compile/src/ast/ast-forin.js","sloc":10,"content":"function ast_forin(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n \n const rvalue=expr_rvalue(...x)\n const s=space(\"const k in\",rvalue)\n const list=paren(s)\n const block=ast_block(y)\n \n return concat(\"for\",list,\"\\n\",block)\n}"},"ast-fornum":{"id":"ast-fornum","name":"ast-fornum","branch":"prg-compile","path":"prg-compile/src/ast/ast-fornum.js","sloc":10,"content":"function ast_fornum(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n \n const rvalue=expr_rvalue(...x)\n const s=concat(\"let i=0;i<\",rvalue,\";i++\")\n const list=paren(s)\n const block=ast_block(y)\n \n return concat(\"for\",list,\"\\n\",block)\n}"},"ast-forof":{"id":"ast-forof","name":"ast-forof","branch":"prg-compile","path":"prg-compile/src/ast/ast-forof.js","sloc":10,"content":"function ast_forof(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n \n const rvalue=expr_rvalue(...x)\n const s=space(\"const v of\",rvalue)\n const list=paren(s)\n const block=ast_block(y)\n \n return concat(\"for\",list,\"\\n\",block)\n}"},"ast-gn":{"id":"ast-gn","name":"ast-gn","branch":"prg-compile","path":"prg-compile/src/ast/ast-gn.js","sloc":6,"content":"function ast_gn(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n \n return ast_xn(x,y,\"function*\")\n}"},"ast-if":{"id":"ast-if","name":"ast-if","branch":"prg-compile","path":"prg-compile/src/ast/ast-if.js","sloc":18,"content":"function ast_if(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n \n const rvalue=expr_rvalue(...x)\n \n if(is_cs())\n {\n  const list=paren(rvalue)\n  const block=ast_block(y)\n \n  return concat(\"if\",list,\"\\n\",block)\n }\n \n if(is_cu())\n {\n  const block=ast_block(y)\n\n  return space(\"if\",rvalue,\"then\\n\",block)\n }\n \n stop()\n}"},"ast-include":{"id":"ast-include","name":"ast-include","branch":"prg-compile","path":"prg-compile/src/ast/ast-include.js","sloc":16,"content":"function ast_include(x,y)\n{\n check(is_obj,x)\n check(is_str,y)\n\n const parameters=x.parameters\n const children=x.children\n\n check(is_single,parameters)\n check(is_empty,children)\n \n const s=front(parameters)\n \n check(is_lit,s)\n \n const include=unwrap(s)\n \n if(match_l(include,\"/\"))\n  return pass_parse(include)\n\n const path=path_concat(y,include)\n \n return pass_parse(path)\n}"},"ast-inline":{"id":"ast-inline","name":"ast-inline","branch":"prg-compile","path":"prg-compile/src/ast/ast-inline.js","sloc":10,"content":"function ast_inline(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n check(is_single,x)\n check(is_empty,y)\n \n const first=front(x)\n \n check(is_lit,first)\n \n return unwrap(first)\n}"},"ast-let":{"id":"ast-let","name":"ast-let","branch":"prg-compile","path":"prg-compile/src/ast/ast-let.js","sloc":11,"content":"function ast_let(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n check(is_many,x)\n check(is_empty,y)\n\n const s=ast_declare(x,y)\n \n if(is_cs())\n  return space(\"const\",s)\n\n stop()\n}"},"ast-ret":{"id":"ast-ret","name":"ast-ret","branch":"prg-compile","path":"prg-compile/src/ast/ast-ret.js","sloc":10,"content":"function ast_ret(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n check(is_empty,y)\n \n if(is_empty(x))\n  return \"return\"\n \n const rvalue=expr_rvalue(...x)\n \n return space(\"return\",rvalue)\n}"},"ast-run":{"id":"ast-run","name":"ast-run","branch":"prg-compile","path":"prg-compile/src/ast/ast-run.js","sloc":9,"content":"function ast_run(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n check(is_full,x)\n check(is_empty,y)\n \n const call=expr_call(...x)\n \n return space(\"yield*\",call)\n}"},"ast-throw":{"id":"ast-throw","name":"ast-throw","branch":"prg-compile","path":"prg-compile/src/ast/ast-throw.js","sloc":8,"content":"function ast_throw(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n check(is_empty,y)\n \n const rvalue=expr_rvalue(...x)\n  \n return space(\"throw\",rvalue)\n}"},"ast-translate":{"id":"ast-translate","name":"ast-translate","branch":"prg-compile","path":"prg-compile/src/ast/ast-translate.js","sloc":77,"content":"function ast_translate(x)\n{\n check(is_obj,x)\n \n function translate(x,y,z)\n {\n  check(is_str,x)\n  check(is_arr,y)\n  check(is_arr,z)\n  \n  if(same(x,\"begin\"))\n   return ast_begin(y,z)\n  else if(same(x,\"let\"))\n   return ast_let(y,z)\n  else if(same(x,\"var\"))\n   return ast_var(y,z)\n  else if(same(x,\"fn\"))\n   return ast_fn(y,z)\n  else if(same(x,\"gn\"))\n   return ast_gn(y,z)\n  else if(same(x,\"ret\"))\n   return ast_ret(y,z)\n  else if(same(x,\"if\"))\n   return ast_if(y,z)\n  else if(same(x,\"elseif\"))\n   return ast_elseif(y,z)\n  else if(same(x,\"else\"))\n   return ast_else(y,z)\n  else if(same(x,\"while\"))\n   return ast_while(y,z)\n  else if(same(x,\"brk\"))\n   return ast_brk(y,z)\n  else if(same(x,\"cont\"))\n   return ast_cont(y,z)\n  else if(same(x,\"throw\"))\n   return ast_throw(y,z)\n  else if(same(x,\"try\"))\n   return ast_try(y,z)\n  else if(same(x,\"catch\"))\n   return ast_catch(y,z)\n  else if(same(x,\"check\"))\n   return ast_check(y,z)\n  else if(same(x,\"assign\"))\n   return ast_assign(y,z)\n  else if(same(x,\"inline\"))\n   return ast_inline(y,z)\n  else if(same(x,\"forof\"))\n   return ast_forof(y,z)\n  else if(same(x,\"forin\"))\n   return ast_forin(y,z)\n  else if(same(x,\"fornum\"))\n   return ast_fornum(y,z)\n  else if(same(x,\"call\"))\n   return ast_call(y,z)\n  else if(same(x,\"yield\"))\n   return ast_yield(y,z)\n  else if(same(x,\"run\"))\n   return ast_run(y,z)\n  else\n  {\n   const call=arr(x,...y)\n   \n   return ast_call(call,z)\n  }\n }\n\n const operator=x.operator\n const parameters=x.parameters\n const children=x.children\n \n try\n {\n  return translate(operator,parameters,children)\n }\n catch(e)\n {\n  log(\"operator\",to_lit(operator))\n  \n  if(is_full(parameters))\n   log(\" parameters\",...parameters)\n  \n  throw e\n }\n}"},"ast-try":{"id":"ast-try","name":"ast-try","branch":"prg-compile","path":"prg-compile/src/ast/ast-try.js","sloc":8,"content":"function ast_try(x,y)\n{\n check(is_arr,x)\n check(is_arr,y) \n check(is_empty,x)\n \n const block=ast_block(y)\n \n return concat(\"try\\n\",block)\n}"},"ast-var":{"id":"ast-var","name":"ast-var","branch":"prg-compile","path":"prg-compile/src/ast/ast-var.js","sloc":13,"content":"function ast_var(x,y)\n{\n check(is_arr,x)\n check(is_arr,y) \n check(is_many,x)\n check(is_empty,y)\n \n const s=ast_declare(x,y)\n\n if(is_cs())\n  return space(\"let\",s)\n\n if(is_cu())\n  return space(\"local\",s) \n  \n stop()\n}"},"ast-while":{"id":"ast-while","name":"ast-while","branch":"prg-compile","path":"prg-compile/src/ast/ast-while.js","sloc":9,"content":"function ast_while(x,y)\n{\n check(is_arr,x)\n check(is_arr,y)\n \n const rvalue=expr_rvalue(...x)\n const list=paren(rvalue)\n const block=ast_block(y)\n \n return concat(\"while\",list,\"\\n\",block)\n}"},"ast-xn":{"id":"ast-xn","name":"ast-xn","branch":"prg-compile","path":"prg-compile/src/ast/ast-xn.js","sloc":38,"content":"function ast_xn(x,y,z)\n{\n check(is_arr,x)\n check(is_arr,y)\n check(is_str,z)\n \n function get_argument(x)\n {\n  check(is_str,x)\n  \n  if(same(x,\"spread\"))\n  {\n   if(is_cu())   \n    return \"...\"\n  }\n  \n  if(is_identifier(x))\n   return x\n  \n  if(is_tuple(x))\n  {\n   const a=unwrap(x)\n   \n   check(is_pair,a)\n   \n   const name=front(a)\n   const spread=back(a)\n   \n   check(is_identifier,name)\n   check(same,spread,\"spread\")\n   \n   return concat(\"...\",name)\n  }\n  \n  stop()\n }\n\n const name=front(x)\n \n check(is_name,name)\n \n const a=slice(x,1)\n const arguments=map(a,get_argument)\n const s=join(arguments,\",\")\n const list=paren(s)\n const call=concat(name,list)\n const xn=space(z,call)\n const block=ast_block(y)\n \n return concat(xn,\"\\n\",block)\n}"},"ast-yield":{"id":"ast-yield","name":"ast-yield","branch":"prg-compile","path":"prg-compile/src/ast/ast-yield.js","sloc":10,"content":"function ast_yield(x,y)\n{\n check(is_arr,x)\n check(is_arr,y) \n check(is_empty,y)\n \n if(is_empty(x))\n  return \"yield\"\n\n const rvalue=expr_rvalue(...x)\n \n return space(\"yield\",rvalue)\n}"},"at":{"id":"at","name":"at","branch":"prg-compile","path":"prg-compile/level-a/at.js","sloc":9,"content":"function at(x,y,z)\n{\n check(is_def,x)\n check(is_int,y)\n \n if(is_def(z))\n  x[y]=z\n else\n  return x[y]\n}"},"back":{"id":"back","name":"back","branch":"prg-compile","path":"prg-compile/level-b/back.js","sloc":10,"content":"function back(x,y,z)\n{\n check(is_def,x)\n \n if(is_undef(y))\n  return back(x,0,z)\n  \n check(is_uint,y)\n check(lt,y,x.length)\n \n const n=sub(x.length,1,y) \n  \n return at(x,n,z)\n}"},"base36-decode":{"id":"base36-decode","name":"base36-decode","branch":"prg-compile","path":"prg-compile/level-c/base36-decode.cs","sloc":25,"content":"fn base36_decode x\n check is_str x\n \n let n mod x.length 4\n \n check same n 0\n \n let input explode x\n let output arr\n \n while is_full input\n  let b arr\n  \n  fornum 4\n   let s shift input\n   \n   if same s \"0\"\n    if is_empty b\n     cont\n   end\n   \n   push b s\n  end\n  \n  if is_empty b\n   push b \"0\"\n   \n  let s implode b\n  let n from_base36 s\n  let c chr n\n  \n  push output c\n end\n\n ret implode output\nend"},"base36-encode":{"id":"base36-encode","name":"base36-encode","branch":"prg-compile","path":"prg-compile/level-c/base36-encode.cs","sloc":12,"content":"fn base36_encode x\n check is_str x\n  \n let a arr\n \n fornum x.length\n  let v at x i\n  let n asc v\n  let s to_base36 n\n  let s pad_l s \"0\" 4\n  \n  push a s\n end\n \n ret implode a\nend"},"base36-salt":{"id":"base36-salt","name":"base36-salt","branch":"prg-compile","path":"prg-compile/level-c/base36-salt.cs","sloc":7,"content":"fn base36_salt x y\n check is_str x\n check is_str y\n \n let r salt x y\n let r base36_encode r\n \n ret r\nend"},"base36-unsalt":{"id":"base36-unsalt","name":"base36-unsalt","branch":"prg-compile","path":"prg-compile/level-c/base36-unsalt.cs","sloc":7,"content":"fn base36_unsalt x y\n check is_str x\n check is_str y\n \n let r base36_decode x\n let r salt r y\n \n ret r\nend"},"baserow-cache":{"id":"baserow-cache","name":"baserow-cache","branch":"lib-baserow","path":"lib-baserow/baserow-cache.cs","sloc":79,"content":"gn baserow_cache x y:spread\n check is_xn x\n\n let url \"https://mabynogy.org/\"\n \n fn local_set x y\n  check is_str x\n  check is_def x\n  \n  if is_null y\n   stop\n\n  let time call time_get\n  let payload y\n  let entry obj time payload\n  let entry to_json entry\n\n  storage_set x entry\n end\n \n fn local_get x\n  check is_str x\n  \n  let entry storage_get x\n  \n  if is_empty entry\n   ret null\n   \n  let entry from_json entry\n   \n  ret entry.payload\n end\n\n gn remote_set x y\n  check is_str x\n  check is_def y\n\n  if is_null y\n   stop\n  \n  let url concat url \"cache-set.php\"\n  let method \"post\"\n  let headers obj\n  let key x\n  let payload y\n  let body obj key payload\n\n  set headers \"content-type\" \"application/json\" \n\n  let o obj url method headers body  \n  let result run fetch_url o\n  \n  if is_empty result\n   ret\n   \n  api_report \"remote-set\" result\n end\n \n gn remote_get x\n  check is_str x\n  \n  let u encodeURIComponent x\n  let u concat \"u=\" u\n  let url concat url \"cache-get.php?\" u  \n  let r run fetch_url url\n\n  if is_null r\n   ret r\n\n  //api_report \"remote-get\" r\n  \n  ret r\n end\n\n gn cache_set x y\n  check is_str x\n  check is_def y\n  \n  //log \"cache-set\" x y\n  \n  gn_run local_set nop x y\n  gn_run remote_set nop x y\n end\n \n gn cache_get x\n  check is_str x\n  \n  let r local_get x\n  \n  if not is_null r\n   ret r\n  \n  let r run remote_get x\n\n  if not is_null r\n   local_set x r\n   \n  ret r\n end\n \n let key to_json y\n let key concat key x.name \n let key run digest key\n let key head key 16\n let key concat \"baserow_cache_\" key\n \n let r run cache_get key\n \n if not is_null r\n  ret r\n \n let baserow run baserow_init\n let r run xn_call x baserow y:spread\n \n run cache_set key r\n \n ret r\nend"},"baserow-database-table":{"id":"baserow-database-table","name":"baserow-database-table","branch":"lib-baserow","path":"lib-baserow/baserow-database-table.cs","sloc":10,"content":"gn baserow_database_table x y\n check is_obj x\n check is_uint y\n\n let tables run baserow_database_tables x\n \n forof tables\n  if same v.id y\n   ret v\n end\n \n stop\nend"},"baserow-database-tables":{"id":"baserow-database-tables","name":"baserow-database-tables","branch":"lib-baserow","path":"lib-baserow/baserow-database-tables.cs","sloc":29,"content":"gn baserow_database_tables x y\n check is_obj x\n \n fn compare_name x y\n  check is_obj x\n  check is_obj y\n  \n  ret compare x.name y.name\n end\n \n if is_undef y\n  let r arr\n  let a run baserow_databases x\n  \n  forof a\n   let id v.id\n   let database_name v.name\n   \n   forof run baserow_database_tables x id\n    let value unset v \"order\"\n    \n    assign value.database_name database_name\n    push r value\n   end\n  end\n\n  sort r compare_name\n  \n  ret r\n end\n \n check is_uint y\n \n let url \"/api/database/tables/database/\"\n let url concat url y \"/\"\n let r run baserow_fetch x url \n \n sort r compare_name\n \n ret r\nend"},"baserow-database-tokens":{"id":"baserow-database-tokens","name":"baserow-database-tokens","branch":"lib-baserow","path":"lib-baserow/baserow-database-tokens.cs","sloc":5,"content":"gn baserow_database_tokens x\n check is_obj x\n \n let url \"/api/database/tokens/\"\n \n ret run baserow_fetch x url \nend"},"baserow-databases":{"id":"baserow-databases","name":"baserow-databases","branch":"lib-baserow","path":"lib-baserow/baserow-databases.cs","sloc":5,"content":"gn baserow_databases x\n check is_obj x\n \n //let r arr\n let url \"https://mabynogy.org/database-list.php\"\n //let o obj url\n \n //ret run fetch_url o\n ret run fetch_url url\nend"},"baserow-fetch":{"id":"baserow-fetch","name":"baserow-fetch","branch":"lib-baserow","path":"lib-baserow/baserow-fetch.cs","sloc":11,"content":"gn baserow_fetch x y\n check is_obj x\n check is_str y\n\n let url concat x.url y\n let headers obj\n let token concat \"JWT \" x.token\n \n set headers \"content-type\" \"application/json\" \n set headers \"authorization\" token\n \n let o obj url headers\n \n ret run fetch_url o\nend"},"baserow-init":{"id":"baserow-init","name":"baserow-init","branch":"lib-baserow","path":"lib-baserow/baserow-init.cs","sloc":34,"content":"gn baserow_init x:spread\n if is_empty x\n  let url \"https://mabynogy.org\"\n  let url concat url \"/token-get.php\"\n  let token run fetch_url url\n  let url \"https://br.mabynogy.org\"\n  \n  ret obj url token\n end\n \n let a x\n let x at a 0\n let y at a 1\n let z at a 2\n \n check is_str x\n check is_str y\n check is_str z\n\n gn get_token x y z\n  check is_str x\n  check is_str y\n  check is_str z\n  \n  let url concat z \"/api/user/token-auth/\"\n  let method \"post\"\n  let headers obj\n  let email x\n  let password y\n  let body obj email password\n\n  set headers \"content-type\" \"application/json\" \n\n  let o obj url method headers body\n  let result run fetch_url o\n  \n  ret result.token\n end\n \n let url z\n let token run get_token x y url\n \n ret obj url token\nend"},"baserow-invalidate":{"id":"baserow-invalidate","name":"baserow-invalidate","branch":"lib-baserow","path":"lib-baserow/baserow-invalidate.cs","sloc":26,"content":"gn baserow_invalidate\n fn invalidate_local\n  forof call storage_keys\n   if not match_l v \"baserow_cache_\"\n    cont\n    \n   let value storage_get v\n   let value from_json value\n   let time value.time\n   let now call time_get\n   let delay sub now time\n   let timeout mul 1 60 60\n   \n   if gt delay timeout\n    storage_remove v\n  end\n end\n \n gn invalidate_remote\n  let url \"https://mabynogy.org/\"\n  let url concat url \"/cache-invalidate.php\"  \n  let paths run fetch_url url\n  \n  forof paths\n   log \"invalidate\" v\n  end\n end\n \n invalidate_local \n run invalidate_remote\nend"},"baserow-table":{"id":"baserow-table","name":"baserow-table","branch":"lib-baserow","path":"lib-baserow/baserow-table.cs","sloc":52,"content":"gn baserow_table x y\n check is_obj x\n check is_uint y\n \n fn get_name x y\n  check is_arr x\n  check is_uint y\n  \n  forof x\n   if same v.id y\n    if is_str v.name\n     ret v.name\n  end\n\n  stop\n end\n\n let r arr\n let fields run baserow_table_fields x y\n let rows run baserow_table_rows x y\n \n forof rows\n  let row v\n  let o obj\n  \n  forin row\n   let v get row k\n   \n   if match_l k \"field_\"\n    let n strip_l k \"field_\"\n    let n to_uint n\n    let name get_name fields n\n    \n    set o name v\n   else\n    set o k v \n  end\n  \n  push r o\n end\n \n tbl_column_remove r \"order\"\n \n if is_empty r\n  ret r\n \n forof tbl_columns r\n  let column v\n  var empty true\n  \n  forof r\n   let value get v column\n   \n   if is_composite value\n    if is_full value\n     assign empty false\n     \n     brk\n    end\n   else\n    assign empty false\n  end\n  \n  if empty\n   tbl_column_remove r column\n end\n\n ret r \nend"},"baserow-table-fields":{"id":"baserow-table-fields","name":"baserow-table-fields","branch":"lib-baserow","path":"lib-baserow/baserow-table-fields.cs","sloc":7,"content":"gn baserow_table_fields x y\n check is_obj x\n check is_uint y\n\n let url \"/api/database/fields/table/\"\n let url concat url y \"/\"\n \n ret run baserow_fetch x url \nend"},"baserow-table-row-count":{"id":"baserow-table-row-count","name":"baserow-table-row-count","branch":"lib-baserow","path":"lib-baserow/baserow-table-row-count.cs","sloc":10,"content":"gn baserow_table_row_count x y\n check is_obj x\n check is_uint y\n\n let url \"/api/database/rows/table/\"\n let url concat url y \"/\"\n let data run baserow_fetch x url\n\n let r data.count\n \n check is_uint r \n \n ret r\nend"},"baserow-table-rows":{"id":"baserow-table-rows","name":"baserow-table-rows","branch":"lib-baserow","path":"lib-baserow/baserow-table-rows.cs","sloc":18,"content":"gn baserow_table_rows x y\n check is_obj x\n check is_uint y\n\n let r arr\n let url \"/api/database/rows/table/\"\n let url concat url y \"/\"\n\n var page 1\n  \n while true\n  let query concat url \"?page=\" page  \n  let data run baserow_fetch x query\n  let results data.results\n\n  append r results\n  \n  if is_null data.next\n   brk\n     \n  assign page inc page\n end\n  \n ret r\nend"},"baserow-tables":{"id":"baserow-tables","name":"baserow-tables","branch":"lib-baserow","path":"lib-baserow/baserow-tables.cs","sloc":10,"content":"gn baserow_tables x\n check is_obj x\n\n let r obj \n\n forof run baserow_database_tables x\n  let name v.name\n  let table run baserow_table x v.id\n  \n  set r name table\n end\n\n ret r \nend"},"baserow-workspaces":{"id":"baserow-workspaces","name":"baserow-workspaces","branch":"lib-baserow","path":"lib-baserow/baserow-workspaces.cs","sloc":5,"content":"gn baserow_workspaces x\n check is_obj x\n \n let url \"/api/workspaces/\"\n \n ret run baserow_fetch x url \nend"},"beep":{"id":"beep","name":"beep","branch":"prg-compile","path":"prg-compile/level-c/beep.cs","sloc":5,"content":"fn beep\n let play os_execute \"which\" \"play\"\n \n if is_full play\n  os_detach play \"-n\" \"synth\" 0.1 \"sine\" 880 \"vol\" 0.5\nend"},"brace":{"id":"brace","name":"brace","branch":"prg-compile","path":"prg-compile/level-b/brace.js","sloc":5,"content":"function brace(x)\n{\n check(is_str,x)\n \n return concat(\"{\",x,\"}\")\n}"},"bracket":{"id":"bracket","name":"bracket","branch":"prg-compile","path":"prg-compile/level-b/bracket.js","sloc":5,"content":"function bracket(x)\n{\n check(is_str,x)\n \n return concat(\"[\",x,\"]\")\n}"},"cell-file":{"id":"cell-file","name":"cell-file","branch":"spa-coglab","path":"spa-coglab/src/cell-file.cs","sloc":14,"content":"fn cell_file x\n check is_def x\n \n if not is_obj x\n  ret null \n  \n if not has x \"is_image\"\n  ret null\n  \n let is_image x.is_image\n  \n if is_image\n  ret null\n\n let name x.visible_name\n let url x.url   \n let r dom_a null name url true\n\n ret r\nend"},"cell-image":{"id":"cell-image","name":"cell-image","branch":"spa-coglab","path":"spa-coglab/src/cell-image.cs","sloc":18,"content":"fn cell_image x\n check is_def x\n \n if not is_obj x\n  ret null \n  \n if not has x \"is_image\"\n  ret null\n  \n let is_image x.is_image\n  \n if not is_image\n  ret null\n  \n let url x.url       \n let name x.visible_name\n let r dom_a null \"\" url true\n let img dom_img r url\n \n dom_class r \"image-link\"\n \n if is_str name\n  assign img.title name\n \n ret r\nend"},"cell-image-resize":{"id":"cell-image-resize","name":"cell-image-resize","branch":"spa-coglab","path":"spa-coglab/src/cell-image-resize.cs","sloc":8,"content":"fn cell_image_resize x y\n check is_obj x\n check is_str y\n \n forof dom_by_tag x \"img\"\n  dom_max_width v y\n  dom_max_height v y\n end\nend"},"cell-init":{"id":"cell-init","name":"cell-init","branch":"spa-coglab","path":"spa-coglab/src/cell-init.cs","sloc":46,"content":"fn cell_init x\n check is_def x\n \n if is_str x\n  let s trim_r x\n  \n  if different s x\n   ret cell_init s\n end\n\n if is_str x\n  let s trim x\n  \n  if different s x\n   if is_date s\n    ret cell_init s\n  end\n end\n\n if is_null x\n  ret \"\"\n\n if is_num x\n  ret to_fixed x\n  \n if is_url x\n  ret cell_url x\n\n if is_date x\n  ret cell_time x\n \n if is_str x\n  ret x\n  \n if is_arr x\n  if is_empty x\n   ret \"\"\n   \n  let r dom_table null\n  let tr dom_tr r\n  \n  forof x\n   let td dom_td tr\n   let cell cell_node v\n   \n   if is_obj cell    \n    dom_push td cell\n    \n    cont\n   end\n   \n   let s to_json v\n   \n   dom_text td s\n  end\n\n  ret r\n end\n \n let r cell_node x\n \n if not is_null r\n  ret r\n \n ret to_json x \nend"},"cell-node":{"id":"cell-node","name":"cell-node","branch":"spa-coglab","path":"spa-coglab/src/cell-node.cs","sloc":13,"content":"fn cell_node x\n check is_def x\n \n let r cell_image x\n \n if not is_null r\n  ret r\n \n let r cell_tag x\n \n if not is_null r\n  ret r\n\n let r cell_file x\n\n if not is_null r\n  ret r\n\n ret null\nend"},"cell-tag":{"id":"cell-tag","name":"cell-tag","branch":"spa-coglab","path":"spa-coglab/src/cell-tag.cs","sloc":27,"content":"fn cell_tag x\n check is_def x\n \n if not is_obj x\n  ret null\n  \n if not has x \"id\"\n  ret null\n  \n if not has x \"value\"\n  ret null\n \n var color null\n \n if has x \"color\"\n  assign color color_translate x.color\n else\n  assign color color_make x.id\n\n let value x.value\n let r call dom_span null\n \n dom_display r \"inline-block\"\n dom_width r field_width_small\n dom_text r value\n dom_align r \"center\"\n dom_padding r \"0.1vw\"\n dom_border_radius r border_radius\n dom_border r border\n dom_color r \"white\"\n dom_color_background r color\n dom_bold r\n     \n ret r\nend"},"cell-time":{"id":"cell-time","name":"cell-time","branch":"spa-coglab","path":"spa-coglab/src/cell-time.cs","sloc":6,"content":"fn cell_time x\n check is_str x\n \n let n time_parse x  \n let r time_string n\n \n ret r\nend"},"cell-url":{"id":"cell-url","name":"cell-url","branch":"spa-coglab","path":"spa-coglab/src/cell-url.cs","sloc":5,"content":"fn cell_url x\n check is_str x\n\n let title url_excerpt x\n \n ret dom_a null title x true\nend"},"check":{"id":"check","name":"check","branch":"prg-compile","path":"prg-compile/level-a/check.js","sloc":14,"content":"function check(x,...y)\n{\n if(is_fn(x))\n {\n  const b=x(...y)\n  \n  return check(b)\n }\n \n if(is_true(x))\n {\n  if(is_empty(y))\n   return\n }\n\n stop()\n}"},"chr":{"id":"chr","name":"chr","branch":"prg-compile","path":"prg-compile/level-b/chr.js","sloc":5,"content":"function chr(x)\n{\n check(is_uint,x)\n \n return String.fromCharCode(x)\n}"},"clear":{"id":"clear","name":"clear","branch":"prg-compile","path":"prg-compile/level-b/clear.js","sloc":5,"content":"function clear(x)\n{\n check(is_arr,x)\n \n x.splice(0)\n}"},"clone":{"id":"clone","name":"clone","branch":"prg-compile","path":"prg-compile/level-b/clone.js","sloc":5,"content":"function clone(x)\n{\n check(is_def,x)\n \n return structuredClone(x)\n}"},"coglab-init":{"id":"coglab-init","name":"coglab-init","branch":"lib-deploy","path":"lib-deploy/src/coglab-init.cs","sloc":7,"content":"fn coglab_init\n let r call env_init\n\n assign r.server \"mabynogy.org\"\n assign r.login concat r.user \"@\" r.server\n assign r.mnt path_concat r.mnt \"coglab\"\n \n ret r\nend"},"collate":{"id":"collate","name":"collate","branch":"prg-compile","path":"prg-compile/level-b/collate.js","sloc":32,"content":"function collate(x)\n{\n check(is_arr,x)\n \n const a=arr()\n \n for(const v of x)\n {\n  if(is_empty(a))\n  {\n   push(a,v)\n   \n   continue\n  }\n  \n  const left1=back(a)\n  const left2=back(left1)\n  const right1=v\n  const right2=front(v)\n  \n  if(is_punct(left2))\n  {\n  }\n  else if(is_punct(right2))\n  {\n  }\n  else\n  {\n   push(a,right1)\n   \n   continue\n  }\n\n  const s=concat(left1,right1)\n  \n  drop(a)   \n  push(a,s)\n }\n \n return join(a,\" \")\n}"},"color-make":{"id":"color-make","name":"color-make","branch":"spa-coglab","path":"spa-coglab/src/color-make.cs","sloc":12,"content":"fn color_make x\n check is_uint x\n\n var hue x\n  \n while gte hue 100\n  assign hue mul hue 0.9\n end\n \n let r trunc hue\n let r concat r \" 50% 50%\"\n let r paren r\n let r concat \"hsl\" r\n \n ret r  \nend"},"color-translate":{"id":"color-translate","name":"color-translate","branch":"spa-coglab","path":"spa-coglab/src/color-translate.cs","sloc":10,"content":"fn color_translate x\n check is_str x\n \n let r replace x \"-\" \"\"\n \n if same r \"lightorange\"\n  ret \"orange\"\n elseif same r \"lightred\"\n  ret \"red\"\n else \n  ret r\nend"},"compare":{"id":"compare","name":"compare","branch":"prg-compile","path":"prg-compile/level-a/compare.js","sloc":78,"content":"function compare(x,y)\n{\n check(is_def,x)\n check(is_def,y)\n \n function cmp(x,y)\n {\n  check(is_def,x)\n  check(is_def,y)\n\n  if(x<y)\n   return -1\n\n  if(x>y)\n   return 1\n\n  return 0\n }\n\n if(is_null(x))\n {\n  if(is_null(y))\n   return cmp(x,y)\n }\n else if(is_bool(x))\n {\n  if(is_bool(y))\n   return cmp(x,y)\n }\n else if(is_num(x))\n {\n  if(is_num(y))\n   return cmp(x,y)\n }\n else if(is_str(x))\n {\n  if(is_str(y))\n   return cmp(x,y)\n }\n else if(is_arr(x))\n {\n  if(is_arr(y))\n  {\n   const n=min(x.length,y.length)\n   \n   for(let i=0;i<n;i++)\n   {\n    const vx=at(x,i)\n    const vy=at(y,i)\n    const n=compare(vx,vy)\n\n    if(different(n,0))\n     return n\n   }\n   \n   return compare(x.length,y.length)\n  }\n }\n else if(is_obj(x))\n {\n  if(is_obj(y))\n  {\n   const kx=get_keys(x)\n   const ky=get_keys(y)\n   \n   while(is_full(kx))\n   {\n    if(is_empty(ky))\n     break\n    \n    const kvx=shift(kx)\n    const kvy=shift(ky)\n    const kn=compare(kvx,kvy)\n    \n    if(different(kn,0))\n     return kn\n    \n    const vvx=get(x,kvx)\n    const vvy=get(y,kvy)\n    const vn=compare(vvx,vvy)\n    \n    if(different(vn,0))\n     return vn\n   }\n   \n   return compare(kx.length,ky.length)\n  }\n }\n\n const xs=to_json(x)\n const ys=to_json(y)\n\n return cmp(xs,ys)\n}"},"concat":{"id":"concat","name":"concat","branch":"prg-compile","path":"prg-compile/level-a/concat.js","sloc":35,"content":"function concat(x,...y)\n{\n if(is_num(x))\n {\n  const s=to_str(x)\n  \n  return concat(s,...y)  \n }\n \n if(is_str(x))\n {\n  if(is_empty(y))\n   return x\n  \n  const first=front(y)\n  const rest=slice(y,1)\n  \n  if(is_num(first))\n  {\n   const s=to_str(first)\n   \n   return concat(x,s,...rest)\n  }\n  \n  check(is_str,first)\n  \n  const s=x+first\n  \n  return concat(s,...rest)\n }\n \n if(is_arr(x))\n {\n  if(is_empty(y))\n   return x\n  \n  const first=front(y)\n  const rest=slice(y,1)\n  \n  check(is_arr,first)\n  \n  const a=dup(x)\n  \n  append(a,first)\n  \n  return concat(a,...rest)\n }\n \n stop()\n}"},"contain":{"id":"contain","name":"contain","branch":"prg-compile","path":"prg-compile/level-a/contain.js","sloc":10,"content":"function contain(x,y)\n{\n check(is_vec,x)\n \n if(is_str(x))\n {\n  check(is_str,y)\n  \n  return x.includes(y)\n }\n\n return x.includes(y) \n}"},"count":{"id":"count","name":"count","branch":"prg-compile","path":"prg-compile/src/count.js","sloc":9,"content":"function count(x,y)\n{\n check(is_str,x)\n check(is_str,y)\n \n if(is_empty(y))\n  return 0\n \n const a=split(x,y)\n \n return dec(a.length)\n}"},"count-sloc":{"id":"count-sloc","name":"count-sloc","branch":"prg-deploy-doc","path":"prg-deploy-doc/src/count-sloc.cs","sloc":7,"content":"fn count_sloc x\n check is_str x\n \n let r untrivia x\n let r split r\n let r r.length\n \n ret r\nend"},"crc":{"id":"crc","name":"crc","branch":"prg-compile","path":"prg-compile/level-c/crc.cs","sloc":12,"content":"fn crc x\n check is_str x\n \n var r 0\n \n forin x\n  let i to_i k\n  let v at x i\n  let n asc v\n  \n  assign r mul r i\n  assign r add r n\n end\n \n ret r\nend"},"css-init":{"id":"css-init","name":"css-init","branch":"lib-gui","path":"lib-gui/css-init.cs","sloc":94,"content":"fn css_init x\n if is_undef x\n  ret css_init \"indigo\"\n  \n assign global.thickness from_mw \"0.1mw\"\n assign global.border concat thickness \" solid gray\"\n assign global.font_family \"monospace\"\n assign global.font_size from_mw \"1.4mw\"\n assign global.padding from_mw \"0.4mw\"\n assign global.button from_mw \"9mw\"\n assign global.border concat thickness \" solid gainsboro\"\n assign global.line from_mw \"1.8mw\"\n\n let s from_mw \"0.4mw\"\n \n assign global.shadow concat s \" \" s \" \" s \" gray\" \n \n if mobile\n  assign global.border_radius from_mw \"0.5mw\"\n  assign global.border_radius_medium from_mw \"0.4mw\"\n  assign global.border_radius_small from_mw \"0.2mw\"\n\n  assign global.field_width from_mw \"19mw\"\n  assign global.field_width_medium from_mw \"17mw\"\n  assign global.field_width_small from_mw \"8mw\"\n  assign global.field_height from_mw \"8mw\"\n else\n  assign global.border_radius from_mw \"0.9mw\"\n  assign global.border_radius_medium from_mw \"0.7mw\"\n  assign global.border_radius_small from_mw \"0.4mw\"\n  \n  assign global.field_width from_mw \"33mw\"\n  assign global.field_width_medium from_mw \"24mw\"\n  assign global.field_width_small from_mw \"13mw\"\n  assign global.field_height from_mw \"20mw\"\n end\n \n dom_style_tag body\n\n //dom_css \"*\" \"outline\" \"thin solid red\"\n\n dom_css \"html\" \"text-size-adjust\" \"none\"\n\n dom_css \"body\" \"font-family\" font_family\n dom_css \"body\" \"font-size\" font_size\n \n dom_css \"h1\" \"font-family\" font_family\n dom_css \"h2\" \"font-family\" font_family\n dom_css \"h3\" \"font-family\" font_family\n dom_css \"h4\" \"font-family\" font_family\n dom_css \"h5\" \"font-family\" font_family\n dom_css \"h6\" \"font-family\" font_family\n dom_css \"h1\" \"font-size\" font_size\n dom_css \"h2\" \"font-size\" font_size\n dom_css \"h3\" \"font-size\" font_size\n dom_css \"h4\" \"font-size\" font_size\n dom_css \"h5\" \"font-size\" font_size\n dom_css \"h6\" \"font-size\" font_size\n dom_css \"h1\" \"padding-bottom\" line\n dom_css \"h2\" \"padding-bottom\" line\n dom_css \"h3\" \"padding-bottom\" line\n dom_css \"h4\" \"padding-bottom\" line\n dom_css \"h5\" \"padding-bottom\" line\n dom_css \"h6\" \"padding-bottom\" line\n dom_css \"h1\" \"margin\" 0\n dom_css \"h2\" \"margin\" 0\n dom_css \"h3\" \"margin\" 0\n dom_css \"h4\" \"margin\" 0\n dom_css \"h5\" \"margin\" 0\n dom_css \"h6\" \"margin\" 0\n\n dom_css \"ul\" \"margin\" 0\n\n dom_css \"br\" \"height\" line\n\n dom_css \"pre\" \"margin\" 0\n\n dom_css \"p\" \"margin\" 0\n dom_css \"p\" \"padding-bottom\" line\n\n dom_css \"td\" \"padding-top\" 0\n dom_css \"td\" \"padding-bottom\" padding\n dom_css \"td\" \"padding-left\" 0\n dom_css \"td\" \"padding-right\" padding\n dom_css \"td\" \"text-align\" \"left\"\n dom_css \"tr td:last-child\" \"padding-right\" 0\n dom_css \"table tr:last-child td\" \"padding-bottom\" 0\n //dom_css \"td\" \"border\" \"1px solid black\"\n\n dom_css \"a\" \"text-decoration-line\" \"none\"\n dom_css \"a\" \"color\" x\n\n dom_css \"a:hover\" \"color\" \"white\" \"background-color\" x\n\n dom_css \"a.image-link\" \"background-color\" \"transparent\"\n dom_css \"a.image-link\" \"display\" \"block\"\n dom_css \"a.image-link img\" \"display\" \"block\"\n\n dom_css \"button\" \"font-family\" font_family\n dom_css \"button\" \"font-size\" font_size\n dom_css \"button\" \"padding\" padding\n dom_css \"button\" \"width\" button\n\n dom_css \"input\" \"padding\" 0\n dom_css \"input\" \"font-family\" font_family\n dom_css \"input\" \"font-size\" font_size\n dom_css \"input\" \"width\" field_width\n\n dom_css \"textarea\" \"padding\" 0\n dom_css \"textarea\" \"font-family\" font_family\n dom_css \"textarea\" \"font-size\" font_size\n dom_css \"textarea\" \"width\" field_width\n dom_css \"textarea\" \"height\" field_height\n\n dom_css \"select\" \"font-family\" font_family\n dom_css \"select\" \"font-size\" font_size\n\n dom_css \"dialog\" \"border\" border\n dom_css \"dialog\" \"max-width\" \"80%\"\nend"},"dataset-load":{"id":"dataset-load","name":"dataset-load","branch":"prg-edf","path":"prg-edf/src/dataset-load.cs","sloc":12,"content":"fn dataset_load\n let r arr\n let env call env_init\n let data path_concat env.dir_user \"data\"\n let dataset path_concat data \"eeg-during-mental-arithmetic-tasks\"\n //let dataset path_concat data \"eeg-motor-movementimagery-dataset\"\n\n forof dir_read_rec dataset\n  let ext path_ext v\n  \n  if same ext \"edf\"\n   push r v\n end\n \n ret r\nend"},"db-page-escape":{"id":"db-page-escape","name":"db-page-escape","branch":"lib-vps","path":"lib-vps/db-page-escape.cs","sloc":10,"content":"fn db_page_escape x\n check is_obj x\n \n var r dup x\n \n if is_def r.order\n  let order r.order\n  \n  assign r unset r \"order\"\n  assign r._order order\n end\n \n ret r\nend"},"db-page-import":{"id":"db-page-import","name":"db-page-import","branch":"lib-vps","path":"lib-vps/db-page-import.cs","sloc":13,"content":"fn db_page_import x\n check is_obj x\n \n let id x.id\n var parent x.parent\n \n if is_null parent\n  assign parent -1\n else\n  assign parent parent.id\n \n let order x.order\n let title x.title\n let content x.content\n \n ret obj id parent order title content\nend"},"db-page-init":{"id":"db-page-init","name":"db-page-init","branch":"lib-vps","path":"lib-vps/db-page-init.cs","sloc":15,"content":"gn db_page_init x\n check is_uint x\n\n let page run ui_page_init x\n let id x\n var parent page.parent\n \n if is_null parent\n  assign parent -1\n else\n  assign parent parent.id\n \n let order page.order\n let title page.title\n let content page.content\n \n check is_int order\n  \n ret obj id parent order title content\nend"},"db-page-new":{"id":"db-page-new","name":"db-page-new","branch":"lib-vps","path":"lib-vps/db-page-new.cs","sloc":8,"content":"fn db_page_new\n let id -1\n let parent -1\n let order -1\n let title \"\"\n let content \"\"\n \n ret obj id parent order title content\nend"},"db-page-unescape":{"id":"db-page-unescape","name":"db-page-unescape","branch":"lib-vps","path":"lib-vps/db-page-unescape.cs","sloc":10,"content":"fn db_page_unescape x\n check is_obj x\n \n var r dup x\n \n if is_def r._order\n  let order r._order\n  \n  assign r unset r \"_order\"\n  assign r.order order\n end\n \n ret r\nend"},"dbg-backtrace":{"id":"dbg-backtrace","name":"dbg-backtrace","branch":"prg-compile","path":"prg-compile/level-b/dbg-backtrace.js","sloc":41,"content":"function dbg_backtrace(x)\n{\n if(is_undef(x))\n {\n  const o=new Error(\"backtrace\")\n  \n  return dbg_backtrace(o)\n }\n \n check(is_obj,x)\n\n const r=arr()\n const s=to_str(x.stack)\n const lines=split(s)\n \n for(const k in lines)\n {\n  const i=to_i(k)\n  const v=at(lines,i)\n  \n  let s=v\n  \n  s=trim(s)\n  s=strip_l(s,\"at\")\n  s=trim(s)\n  s=replace(s,\"@\",\" \")\n  \n  const parts=split(s,\" \")\n  \n  if(!is_pair(parts))\n   continue\n  \n  const fn=shift(parts)\n  \n  if(!is_name(fn))\n   continue\n  \n  let a=parts\n  \n  a=shift(a)\n  a=unparen(a)\n  a=split(a,\":\")\n  \n  if(lt(a.length,3))\n   continue\n  \n  const column=pop(a)\n  \n  let line=pop(a)\n  \n  line=to_uint(line)\n  \n  const url=join(a,\":\")\n  const o={fn,url,line}\n  \n  push(r,o)\n }\n\n return r \n}"},"dbg-callstack":{"id":"dbg-callstack","name":"dbg-callstack","branch":"prg-compile","path":"prg-compile/level-b/dbg-callstack.js","sloc":38,"content":"function dbg_callstack(x)\n{\n if(is_undef(x))\n {\n  const o=new Error(\"callstack\")\n  \n  return dbg_callstack(o)\n }\n\n function get_trace(x)\n {\n  check(is_obj,x)\n\n  const fn=x.fn\n  const url=x.url\n  const line=x.line\n  \n  if(has(scripts,url))\n  {\n   const index=dec(line)\n   \n   if(gte(index,0))\n   {\n    const script=get(scripts,url)\n    \n    if(lt(index,script.length))\n    {\n     const code=at(script,index)\n     \n     return {fn,code,line}\n    }\n   }\n  }\n  \n  const code=url\n  \n  return {fn,code,line}\n }\n  \n const r=arr()\n\n decompile_sync()\n  \n for(const v of dbg_backtrace(x))\n {\n  const o=get_trace(v)\n  \n  push(r,o)\n }\n\n return r \n}"},"dbg-log":{"id":"dbg-log","name":"dbg-log","branch":"prg-compile","path":"prg-compile/level-b/dbg-log.js","sloc":24,"content":"function dbg_log(x)\n{\n check(is_obj,x)\n\n const stack=dbg_callstack(x)\n const trace=dbg_backtrace(x)\n const origin=dbg_origin(x)\n \n tbl_align_r(stack,\"fn\")\n tbl_align_r(trace,\"fn\")\n \n if(is_full(origin))\n {\n  const s=tbl_render(origin)\n\n  log(s)\n }\n \n if(is_empty(stack))\n {\n  const s=tbl_render(trace)\n  \n  log(s)\n }\n else\n {\n  const s=tbl_render(stack)\n  \n  log(s)\n }\n}"},"dbg-origin":{"id":"dbg-origin","name":"dbg-origin","branch":"prg-compile","path":"prg-compile/level-b/dbg-origin.js","sloc":38,"content":"function dbg_origin(x)\n{\n if(is_undef(x))\n {\n  const o=new Error(\"origin\")\n  \n  return dbg_origin(o)\n }\n \n check(is_obj,x)\n\n decompile_sync()\n\n const trace=dbg_backtrace(x)\n \n while(is_many(trace))\n {\n  const frame=front(trace)\n  const fn=frame.fn\n  const url=frame.url\n  const filter=arr(\"throw\",\"stop\",\"check\")\n  \n  if(contain(filter,fn))\n  {\n   shift(trace)\n   \n   continue\n  }\n  \n  if(has(scripts,url))\n   break\n   \n  shift(trace)\n }\n \n const frame=front(trace)\n const url=frame.url\n const line=frame.line\n\n if(!has(scripts,url))\n  return arr()\n  \n const index=dec(line)\n \n if(lt(index,0))\n  return arr()\n  \n const script=get(scripts,url)\n \n if(gte(index,script.length))\n  return arr()\n  \n return dbg_window(script,line)\n}"},"dbg-window":{"id":"dbg-window","name":"dbg-window","branch":"prg-compile","path":"prg-compile/level-b/dbg-window.js","sloc":53,"content":"function dbg_window(x,y,z)\n{\n check(is_arr,x)\n check(is_uint,y)\n \n if(is_undef(z))\n  return dbg_window(x,y,7)\n \n check(is_uint,z)\n \n const lines=x\n const length=lines.length\n const number=y\n const offset=dec(number)\n \n function get_window(x)\n {\n  check(is_uint,x)\n  \n  let r=arr()\n  let window=x  \n  let half=window\n  \n  half=div(half,2)\n  half=trunc(half)\n  \n  let begin=sub(offset,half)\n  \n  if(lt(begin,0))\n   begin=0\n   \n  let end=add(begin,window)\n\n  if(gt(end,length))\n   window=sub(length,begin)\n\n  for(let i=0;i<window;i++)\n  {\n   const index=add(begin,i)\n   const line=inc(index)\n   \n   let code=lines\n   \n   code=at(code,index)\n   \n   if(is_full(code))\n   {\n    if(same(line,number))\n     code=space(\">\",code)\n    else\n     code=space(\" \",code)\n    \n    const o={code,line}\n    \n    push(r,o)\n   }\n  }\n  \n  return r\n }\n \n let r=arr()\n \n for(let i=0;i<sub(lines.length,z);i++)\n {\n  const n=add(i,z)\n\n  r=get_window(i)\n  \n  if(gte(r.length,z))\n   break\n }\n \n return r\n}"},"dec":{"id":"dec","name":"dec","branch":"prg-compile","path":"prg-compile/level-b/dec.js","sloc":5,"content":"function dec(x)\n{\n check(is_num,x)\n \n return sub(x,1)\n}"},"decompile":{"id":"decompile","name":"decompile","branch":"prg-compile","path":"prg-compile/level-b/decompile.js","sloc":48,"content":"function decompile(x)\n{\n check(is_str,x)\n \n function deep(x)\n {\n  check(is_str,x)\n  \n  let r=x\n  \n  r=scan(r)\n  //r=scan(r,is_token)\n  r=reject(r,is_space)\n  r=replace(r,\"!\",\"not\")\n  r=reject(r,is_punct)\n  r=keywords(r)\n  r=join(r,\" \")\n  \n  return r\n }\n\n function shallow(x)\n {\n  check(is_str,x)\n  \n  let r=x\n  \n  const not=concat(\" \",\"not\",\" \")\n  \n  r=replace(r,\"!\",not)\n  r=delimit(r,\" \")\n\n  const puncts=\"()[]{}<>+-*%=,;\"\n  \n  for(const v of puncts)\n  {\n   r=delimit(r,v)\n  }\n  \n  r=delimit(r,\"...\")\n  r=keywords(r)\n  r=join(r,\" \")\n  \n  return r\n }\n \n function keywords(x)\n {\n  check(is_arr,x)\n  \n  let r=x\n  \n  r=replace(r,\"let\",\"var\")\n  r=replace(r,\"const\",\"let\")\n  r=replace(r,\"function\",\"fn\")\n  r=replace(r,\"return\",\"ret\")\n  r=replace(r,\"continue\",\"cont\")\n  r=replace(r,\"break\",\"brk\")\n  \n  return r\n }\n \n if(contain(x,\"\\\"\"))\n  return deep(x)\n \n return shallow(x)\n}"},"decompile-stop":{"id":"decompile-stop","name":"decompile-stop","branch":"prg-compile","path":"prg-compile/level-b/decompile-stop.js","sloc":7,"content":"function decompile_stop()\n{\n if(is_null(decompiler))\n  return\n \n decompiler.return()\n decompiler=null\n}"},"decompile-sync":{"id":"decompile-sync","name":"decompile-sync","branch":"prg-compile","path":"prg-compile/level-b/decompile-sync.js","sloc":14,"content":"function decompile_sync()\n{\n if(is_null(decompiler))\n  return\n  \n while(true)\n {\n  const o=decompiler.next()\n   \n  if(o.done)\n  {\n   decompiler=null\n   \n   return o.value\n  }\n }\n}"},"delimit":{"id":"delimit","name":"delimit","branch":"prg-compile","path":"prg-compile/level-a/delimit.js","sloc":21,"content":"function delimit(x,y)\n{\n check(is_vec,x)\n check(is_str,y)\n \n if(is_str(x))\n {\n  const a=arr(x)\n  \n  return delimit(a,y)\n }\n \n const r=arr()\n \n for(const v of x)\n {\n  const a=split(v,y)\n\n  for(const v of a)\n  {\n   if(is_full(v))\n    push(r,v)\n  }\n }\n \n return r\n}"},"different":{"id":"different","name":"different","branch":"prg-compile","path":"prg-compile/level-a/different.js","sloc":4,"content":"function different(x,y)\n{\n return !same(x,y)\n}"},"digest":{"id":"digest","name":"digest","branch":"lib-gui","path":"lib-gui/digest.cs","sloc":19,"content":"gn digest x\n check is_str x\n \n var r null\n \n fn on_data x\n  check is_obj x\n  \n  assign r x\n end\n\n let encoder new TextEncoder\n let data encoder.encode x\n let promise crypto.subtle.digest \"sha-256\" data\n \n promise.then on_data\n \n while is_null r\n  yield\n end\n \n let decoder new TextDecoder\n let r decoder.decode r \n let r to_base36 r \n \n ret r\nend"},"dir-copy":{"id":"dir-copy","name":"dir-copy","branch":"lib-cli","path":"lib-cli/src/dir-copy.cs","sloc":18,"content":"fn dir_copy x y\n check is_str x\n check is_str x\n \n check is_dir x\n check is_dir y\n \n let source path_real x\n let target path_real y\n \n forof dir_read_rec source\n  let relative path_fix source\n  let relative strip_l v relative\n  \n  let left v\n  let right path_concat target relative\n  let directory path_dir right\n  \n  if not is_dir directory   \n   dir_make directory\n   \n  file_copy left right\n end\nend"},"dir-make":{"id":"dir-make","name":"dir-make","branch":"prg-compile","path":"prg-compile/level-a/dir-make.js","sloc":7,"content":"function dir_make(x)\n{\n check(is_str,x)\n \n const recursive=true\n const option={recursive}\n \n fs.mkdirSync(x,option)\n}"},"dir-read":{"id":"dir-read","name":"dir-read","branch":"prg-compile","path":"prg-compile/level-a/dir-read.js","sloc":19,"content":"function dir_read(x,y)\n{\n check(is_str,x)\n \n if(is_undef(y))\n  return dir_read(x,is_file)\n  \n check(is_fn,y)\n \n const r=arr()\n const dir=path_real(x)\n \n for(const v of fs.readdirSync(dir))\n {\n  const path=path_concat(dir,v)\n  const b=y(path)\n  \n  if(is_true(b))\n   push(r,path)\n  else\n   check(is_false,b)\n }\n \n return r\n}"},"dir-read-rec":{"id":"dir-read-rec","name":"dir-read-rec","branch":"prg-compile","path":"prg-compile/level-a/dir-read-rec.js","sloc":21,"content":"function dir_read_rec(x,y)\n{\n check(is_str,x)\n \n if(is_undef(y))\n  return dir_read_rec(x,is_file)\n  \n check(is_fn,y)\n \n const r=arr()\n const dir=path_real(x)\n const recursive=true\n const option={recursive}\n \n for(const v of fs.readdirSync(dir,option))\n {\n  const path=path_concat(dir,v)\n  const b=y(path)\n  \n  if(is_true(b))\n   push(r,path)\n  else\n   check(is_false,b)  \n }\n \n return r\n}"},"div":{"id":"div","name":"div","branch":"prg-compile","path":"prg-compile/level-a/div.js","sloc":8,"content":"function div(x,y,...z)\n{\n check(different,y,0)\n \n const n=x/y\n \n if(is_empty(z))\n  return n\n \n return div(n,...z)\n}"},"dlg-alert":{"id":"dlg-alert","name":"dlg-alert","branch":"lib-gui","path":"lib-gui/dlg-alert.cs","sloc":16,"content":"gn dlg_alert x y\n check is_str x\n\n if is_undef y\n  ret run dlg_alert x \"OK\"\n  \n fn on_click x\n  check is_obj x\n  \n  x.close\n end\n\n let dlg dlg_init x\n \n dom_bold_no dlg.title\n \n let button dlg_button dlg y \n let on_click partial on_click dlg.dialog\n \n assign dlg.dialog.onenter on_click\n assign button.onclick on_click\n\n run dlg_modal dlg\nend"},"dlg-button":{"id":"dlg-button","name":"dlg-button","branch":"lib-gui","path":"lib-gui/dlg-button.cs","sloc":20,"content":"fn dlg_button x y\n check is_obj x\n check is_str y\n \n let container x.container\n let buttons x.buttons\n var parent null\n\n if is_empty buttons\n  if is_full x.fields\n   dom_br container\n    \n  assign parent dom_div container\n else\n  let button back buttons\n  \n  assign parent dom_parent button\n  dom_spacer parent\n end\n\n let r dom_button parent\n \n dom_text r y\n\n push buttons r\n \n ret r\nend"},"dlg-close":{"id":"dlg-close","name":"dlg-close","branch":"lib-gui","path":"lib-gui/dlg-close.cs","sloc":4,"content":"fn dlg_close x\n check is_obj x\n \n x.dialog.close\nend"},"dlg-confirm":{"id":"dlg-confirm","name":"dlg-confirm","branch":"lib-gui","path":"lib-gui/dlg-confirm.cs","sloc":27,"content":"gn dlg_confirm x\n if is_undef x\n  ret run dlg_confirm \"Do you confirm your action?\"\n \n check is_str x\n \n var r false\n \n fn on_ok x\n  check is_obj x\n  \n  assign r true\n  \n  x.close\n end\n\n fn on_cancel x\n  check is_obj x\n  \n  assign r false\n  \n  x.close\n end\n\n let dlg dlg_init x\n \n dom_bold_no dlg.title\n \n let ok dlg_button dlg \"OK\"\n let cancel dlg_button dlg \"Cancel\"\n let on_ok partial on_ok dlg.dialog\n let on_cancel partial on_cancel dlg.dialog\n \n assign dlg.dialog.onenter on_ok\n assign ok.onclick on_ok\n assign cancel.onclick on_cancel\n\n run dlg_modal dlg\n \n ret r\nend"},"dlg-init":{"id":"dlg-init","name":"dlg-init","branch":"lib-gui","path":"lib-gui/dlg-init.cs","sloc":15,"content":"fn dlg_init x\n if is_undef x\n  ret dlg_init \"\"\n \n check is_str x\n\n let dialog dom_dialog body\n let title dom_div dialog x\n\n dom_align dialog \"center\"\n dom_bold title\n dom_br dialog\n \n let container dom_div dialog\n \n dom_display container \"inline-block\"  \n \n let fields arr\n let buttons arr\n \n ret obj dialog title container fields buttons\nend"},"dlg-loading":{"id":"dlg-loading","name":"dlg-loading","branch":"lib-gui","path":"lib-gui/dlg-loading.cs","sloc":44,"content":"fn dlg_loading x\n if is_undef x\n  ret dlg_loading 10\n\n let divide div\n let result call dom_dialog body\n let container dom_div result \"Loading...\"\n let div2 dom_div result\n let progress dom_div div2\n let frequency 0.4\n let begin call time_now\n \n dom_height progress \"1vw\"\n dom_padding_top div2 spacing\n dom_color_background progress \"lightgray\"\n \n fn on_timer\n  let visibity dom_visible container\n  \n  if is_empty visibity\n   dom_visible container \"hidden\"\n  elseif same visibity \"visible\"\n   dom_visible container \"hidden\"\n  elseif same visibity \"hidden\"\n   dom_visible container \"visible\"\n  else\n   stop\n  \n  let now call time_now\n  var delay sub now begin  \n  \n  if gte delay x\n   assign delay x\n   \n  let ratio div delay x\n  let width mul div2.offsetWidth ratio\n  let width to_vw width\n  \n  dom_width progress width\n  \n  if result.open\n   timer_timeout on_timer frequency\n end\n \n dom_visible container \"visible\"\n \n result.show\n\n let y call dom_window_height \n let y sub y result.offsetHeight\n let y div y 2\n let y to_vw y\n \n dom_top result y\n timer_timeout on_timer frequency\n   \n ret result\nend"},"dlg-modal":{"id":"dlg-modal","name":"dlg-modal","branch":"lib-gui","path":"lib-gui/dlg-modal.cs","sloc":4,"content":"gn dlg_modal x\n check is_obj x\n \n run dom_modal x.dialog\nend"},"dlg-push":{"id":"dlg-push","name":"dlg-push","branch":"lib-gui","path":"lib-gui/dlg-push.cs","sloc":18,"content":"fn dlg_push x y z\n check is_obj x\n check is_str y\n \n if is_undef z\n  ret dlg_push x y \"input\"\n  \n check is_str z\n\n let div1 dom_div x.container\n let div2 dom_div x.container\n let label dom_label div1 y\n let init concat \"dom_\" z\n let init eval init\n let r init div2\n\n dom_align div1 \"left\"\n \n if is_full x.fields\n  dom_padding_top div1 spacing\n  \n push x.fields r\n \n ret r\nend"},"dom-a":{"id":"dom-a","name":"dom-a","branch":"lib-gui","path":"lib-gui/dom/dom-a.cs","sloc":17,"content":"fn dom_a x y z a\n check is_nullable x\n\n let r dom_init \"a\" x\n \n if is_def y\n  dom_text r y\n  \n if is_def z\n  check is_str z\n  \n  assign r.href z\n else\n  dom_over r \"cursor\" \"pointer\"\n \n if is_def a\n  check is_bool a\n  \n  if a\n   assign r.target \"_blank\"\n end  \n \n ret r\nend"},"dom-align":{"id":"dom-align","name":"dom-align","branch":"lib-gui","path":"lib-gui/dom/dom-align.cs","sloc":5,"content":"fn dom_align x y\n check is_obj x\n check is_str y\n \n assign x.style.textAlign y\nend"},"dom-attr":{"id":"dom-attr","name":"dom-attr","branch":"lib-gui","path":"lib-gui/dom/dom-attr.cs","sloc":9,"content":"fn dom_attr x y z\n check is_obj x\n check is_str y\n \n if is_def z\n  check is_cool z\n\n  x.setAttribute y z\n else\n  ret x.getAttribute y\nend"},"dom-b":{"id":"dom-b","name":"dom-b","branch":"lib-gui","path":"lib-gui/dom/dom-b.cs","sloc":7,"content":"fn dom_b x y\n check is_nullable x\n \n let r dom_init \"b\" x\n\n if is_def y\n  dom_text r y\n  \n ret r\nend"},"dom-bold":{"id":"dom-bold","name":"dom-bold","branch":"lib-gui","path":"lib-gui/dom/dom-bold.cs","sloc":4,"content":"fn dom_bold x\n check is_obj x\n \n dom_font_weight x \"bold\"\nend"},"dom-bold-no":{"id":"dom-bold-no","name":"dom-bold-no","branch":"lib-gui","path":"lib-gui/dom/dom-bold-no.cs","sloc":4,"content":"fn dom_bold_no x\n check is_obj x\n \n dom_font_weight x \"normal\"\nend"},"dom-border":{"id":"dom-border","name":"dom-border","branch":"lib-gui","path":"lib-gui/dom/dom-border.cs","sloc":5,"content":"fn dom_border x y\n check is_obj x\n check is_str y\n \n assign x.style.border y\nend"},"dom-border-bottom":{"id":"dom-border-bottom","name":"dom-border-bottom","branch":"lib-gui","path":"lib-gui/dom/dom-border-bottom.cs","sloc":5,"content":"fn dom_border_bottom x y\n check is_obj x\n check is_str y\n \n assign x.style.borderBottom y\nend"},"dom-border-left":{"id":"dom-border-left","name":"dom-border-left","branch":"lib-gui","path":"lib-gui/dom/dom-border-left.cs","sloc":5,"content":"fn dom_border_left x y\n check is_obj x\n check is_str y\n \n assign x.style.borderLeft y\nend"},"dom-border-radius":{"id":"dom-border-radius","name":"dom-border-radius","branch":"lib-gui","path":"lib-gui/dom/dom-border-radius.cs","sloc":6,"content":"fn dom_border_radius x y\n check is_obj x\n check is_str y\n\n let s from_mw y\n  \n assign x.style.borderRadius s\nend"},"dom-border-right":{"id":"dom-border-right","name":"dom-border-right","branch":"lib-gui","path":"lib-gui/dom/dom-border-right.cs","sloc":5,"content":"fn dom_border_right x y\n check is_obj x\n check is_str y\n \n assign x.style.borderRight y\nend"},"dom-border-top":{"id":"dom-border-top","name":"dom-border-top","branch":"lib-gui","path":"lib-gui/dom/dom-border-top.cs","sloc":5,"content":"fn dom_border_top x y\n check is_obj x\n check is_str y\n \n assign x.style.borderTop y\nend"},"dom-bottom":{"id":"dom-bottom","name":"dom-bottom","branch":"lib-gui","path":"lib-gui/dom/dom-bottom.cs","sloc":10,"content":"fn dom_bottom x y\n check is_obj x\n check is_cool y\n \n if is_num y\n  let s to_px y\n  \n  ret dom_bottom x s\n end\n\n let s from_mw y\n \n assign x.style.bottom s\nend"},"dom-br":{"id":"dom-br","name":"dom-br","branch":"lib-gui","path":"lib-gui/dom/dom-br.cs","sloc":4,"content":"fn dom_br x\n check is_obj x\n\n ret dom_init \"br\" x\nend"},"dom-button":{"id":"dom-button","name":"dom-button","branch":"lib-gui","path":"lib-gui/dom/dom-button.cs","sloc":4,"content":"fn dom_button x\n check is_nullable x\n\n ret dom_init \"button\" x\nend"},"dom-by-class":{"id":"dom-by-class","name":"dom-by-class","branch":"lib-gui","path":"lib-gui/dom/dom-by-class.cs","sloc":11,"content":"fn dom_by_class x y\n check is_obj x\n check is_str y\n\n let r arr\n let collection x.getElementsByClassName y\n \n fornum collection.length\n  let node collection.item i\n  \n  push r node\n end\n\n ret r \nend"},"dom-by-id":{"id":"dom-by-id","name":"dom-by-id","branch":"lib-gui","path":"lib-gui/dom/dom-by-id.cs","sloc":4,"content":"fn dom_by_id x\n check is_str x\n\n ret document.getElementById x\nend"},"dom-by-tag":{"id":"dom-by-tag","name":"dom-by-tag","branch":"lib-gui","path":"lib-gui/dom/dom-by-tag.cs","sloc":11,"content":"fn dom_by_tag x y\n check is_obj x\n check is_str y\n\n let r arr\n let collection x.getElementsByTagName y\n \n fornum collection.length\n  let node collection.item i\n  \n  push r node\n end\n\n ret r \nend"},"dom-class":{"id":"dom-class","name":"dom-class","branch":"lib-gui","path":"lib-gui/dom/dom-class.cs","sloc":5,"content":"fn dom_class x y\n check is_obj x\n check is_str y\n \n assign x.className y\nend"},"dom-clear":{"id":"dom-clear","name":"dom-clear","branch":"lib-gui","path":"lib-gui/dom/dom-clear.cs","sloc":4,"content":"fn dom_clear x\n check is_obj x\n \n x.replaceChildren\nend"},"dom-clone":{"id":"dom-clone","name":"dom-clone","branch":"lib-gui","path":"lib-gui/dom/dom-clone.cs","sloc":4,"content":"fn dom_clone x\n check is_obj x\n \n ret x.cloneNode true\nend"},"dom-collapse":{"id":"dom-collapse","name":"dom-collapse","branch":"lib-gui","path":"lib-gui/dom/dom-collapse.cs","sloc":7,"content":"fn dom_collapse x y\n check is_obj x\n \n if is_undef y\n  ret dom_collapse x \"collapse\"\n  \n check is_str y\n \n assign x.style.borderCollapse y\nend"},"dom-color":{"id":"dom-color","name":"dom-color","branch":"lib-gui","path":"lib-gui/dom/dom-color.cs","sloc":24,"content":"fn dom_color x y\n check is_obj x\n \n fn on_enter x y\n  check is_obj x\n  check is_str y\n  \n  assign x.style.color \"white\"  \n end\n\n fn on_leave x y\n  check is_obj x\n  check is_str y\n\n  assign x.style.color y\n end\n \n if is_undef y\n  ret x.style.color\n\n check is_str y\n\n assign x.style.color y\n \n let tag dom_tag x\n \n if same tag \"a\"\n  let enter partial on_enter x y\n  let leave partial on_leave x y\n  \n  x.addEventListener \"mouseenter\" enter\n  x.addEventListener \"mouseleave\" leave\n end\nend"},"dom-color-background":{"id":"dom-color-background","name":"dom-color-background","branch":"lib-gui","path":"lib-gui/dom/dom-color-background.cs","sloc":7,"content":"fn dom_color_background x y\n check is_obj x\n \n if is_undef y\n  ret x.style.backgroundColor\n \n check is_str y\n \n assign x.style.backgroundColor y\nend"},"dom-colspan":{"id":"dom-colspan","name":"dom-colspan","branch":"lib-gui","path":"lib-gui/dom/dom-colspan.cs","sloc":5,"content":"fn dom_colspan x y\n check is_obj x\n check is_uint y\n \n dom_attr x \"colspan\" y\nend"},"dom-compute-size":{"id":"dom-compute-size","name":"dom-compute-size","branch":"lib-gui","path":"lib-gui/dom/dom-compute-size.cs","sloc":12,"content":"fn dom_compute_size x\n check is_obj x\n \n let div dom_div body\n let html dom_html x\n\n dom_display div \"inline-block\" \n dom_html div html\n \n let r dom_rect div\n \n dom_remove div\n \n let width r.width\n let height r.height\n \n ret obj width height\nend"},"dom-css":{"id":"dom-css","name":"dom-css","branch":"lib-gui","path":"lib-gui/dom/dom-css.cs","sloc":19,"content":"fn dom_css x y z a:spread\n check is_str x\n check is_str y\n \n if is_num z\n  let s to_str z\n  \n  ret dom_css x y s a:spread\n end\n\n check is_str z\n \n let style dom_by_tag document \"style\"\n let style front style\n \n let content dom_text style\n let css concat y \":\" z \";\"\n let css brace css\n let css concat x css \"\\n\"\n let css concat content css\n \n dom_text style css\n \n if is_full a\n  dom_css x a:spread\nend"},"dom-cursor":{"id":"dom-cursor","name":"dom-cursor","branch":"lib-gui","path":"lib-gui/dom/dom-cursor.cs","sloc":5,"content":"fn dom_cursor x y\n check is_obj x\n check is_str y\n \n assign x.style.cursor y\nend"},"dom-descendants":{"id":"dom-descendants","name":"dom-descendants","branch":"lib-gui","path":"lib-gui/dom/dom-descendants.cs","sloc":10,"content":"fn dom_descendants x\n check is_obj x\n \n let r arr\n \n forof x.children\n  push r v\n  \n  let a dom_descendants v\n  \n  append r a\n end\n \n ret r\nend"},"dom-dialog":{"id":"dom-dialog","name":"dom-dialog","branch":"lib-gui","path":"lib-gui/dom/dom-dialog.cs","sloc":19,"content":"fn dom_dialog\n fn on_key_press x y\n  check is_obj x\n  check is_obj y\n  \n  let key to_lower y.key\n  \n  if same key \"enter\"\n   let onenter x.onenter\n   \n   if is_fn onenter\n    let focus document.activeElement\n    let focus dom_tag focus\n    \n    if different focus \"textarea\"\n     onenter x\n   end\n  end\n end\n \n let r dom_init \"dialog\"\n\n assign r.onkeypress partial on_key_press r\n \n ret r\nend"},"dom-display":{"id":"dom-display","name":"dom-display","branch":"lib-gui","path":"lib-gui/dom/dom-display.cs","sloc":5,"content":"fn dom_display x y\n check is_obj x\n check is_str y\n \n assign x.style.display y\nend"},"dom-div":{"id":"dom-div","name":"dom-div","branch":"lib-gui","path":"lib-gui/dom/dom-div.cs","sloc":7,"content":"fn dom_div x y\n check is_nullable x\n\n let r dom_init \"div\" x\n \n if is_def y\n  dom_text r y\n \n ret r\nend"},"dom-filter":{"id":"dom-filter","name":"dom-filter","branch":"lib-gui","path":"lib-gui/dom/dom-filter.cs","sloc":5,"content":"fn dom_filter x y\n check is_obj x\n check is_str y\n \n assign x.style.filter y\nend"},"dom-font-weight":{"id":"dom-font-weight","name":"dom-font-weight","branch":"lib-gui","path":"lib-gui/dom/dom-font-weight.cs","sloc":7,"content":"fn dom_font_weight x y\n check is_obj x\n \n if is_undef y\n  ret x.style.fontWeight\n\n check is_str y\n \n assign x.style.fontWeight y\nend"},"dom-form":{"id":"dom-form","name":"dom-form","branch":"lib-gui","path":"lib-gui/dom/dom-form.cs","sloc":4,"content":"fn dom_form x\n check is_nullable x\n\n ret dom_init \"form\" x\nend"},"dom-height":{"id":"dom-height","name":"dom-height","branch":"lib-gui","path":"lib-gui/dom/dom-height.cs","sloc":10,"content":"fn dom_height x y\n check is_obj x\n check is_cool y\n \n if is_num y\n  let s to_px y\n  \n  ret dom_height x s\n end\n\n let v from_mw y\n \n assign x.style.height v\nend"},"dom-hr":{"id":"dom-hr","name":"dom-hr","branch":"lib-gui","path":"lib-gui/dom/dom-hr.cs","sloc":8,"content":"fn dom_hr x\n check is_nullable x\n\n let r dom_init \"div\" x\n \n dom_margin_top r padding\n dom_margin_bottom r padding\n dom_border_top r border\n \n ret r\nend"},"dom-html":{"id":"dom-html","name":"dom-html","branch":"lib-gui","path":"lib-gui/dom/dom-html.cs","sloc":7,"content":"fn dom_html x y\n check is_obj x\n \n if is_undef y\n  ret to_str x.innerHTML\n  \n check is_str y\n \n assign x.innerHTML y\nend"},"dom-html-outer":{"id":"dom-html-outer","name":"dom-html-outer","branch":"lib-gui","path":"lib-gui/dom/dom-html-outer.cs","sloc":7,"content":"fn dom_html_outer x y\n check is_obj x\n \n if is_undef y\n  ret to_str x.outerHTML\n  \n check is_str y\n \n assign x.outerHTML y\nend"},"dom-id":{"id":"dom-id","name":"dom-id","branch":"lib-gui","path":"lib-gui/dom/dom-id.cs","sloc":5,"content":"fn dom_id x y\n check is_obj x\n check is_str y\n \n assign x.id y\nend"},"dom-img":{"id":"dom-img","name":"dom-img","branch":"lib-gui","path":"lib-gui/dom/dom-img.cs","sloc":10,"content":"fn dom_img x y\n check is_nullable x\n check is_def x\n \n let r dom_init \"img\" x\n \n if is_def y\n  check is_str y\n  \n  assign r.src y\n end\n  \n ret r\nend"},"dom-init":{"id":"dom-init","name":"dom-init","branch":"lib-gui","path":"lib-gui/dom/dom-init.cs","sloc":13,"content":"fn dom_init x y\n check is_str x\n \n if is_undef y\n  ret dom_init x body\n elseif is_null y\n  ret document.createElement x\n else \n  check is_obj y\n  \n  let r document.createElement x\n\n  dom_push y r \n  \n  ret r\n end\nend"},"dom-input":{"id":"dom-input","name":"dom-input","branch":"lib-gui","path":"lib-gui/dom/dom-input.cs","sloc":4,"content":"fn dom_input x\n check is_nullable x\n\n ret dom_init \"input\" x\nend"},"dom-label":{"id":"dom-label","name":"dom-label","branch":"lib-gui","path":"lib-gui/dom/dom-label.cs","sloc":7,"content":"fn dom_label x y\n check is_nullable x\n\n let r dom_init \"label\" x\n\n if is_def y \n  dom_text r y\n \n ret r\nend"},"dom-left":{"id":"dom-left","name":"dom-left","branch":"lib-gui","path":"lib-gui/dom/dom-left.cs","sloc":10,"content":"fn dom_left x y\n check is_obj x\n check is_cool y\n \n if is_num y\n  let s to_px y\n  \n  ret dom_left x s\n end\n\n let s from_mw y\n \n assign x.style.left s\nend"},"dom-li":{"id":"dom-li","name":"dom-li","branch":"lib-gui","path":"lib-gui/dom/dom-li.cs","sloc":4,"content":"fn dom_li x \n check is_nullable x\n\n ret dom_init \"li\" x\nend"},"dom-line-height":{"id":"dom-line-height","name":"dom-line-height","branch":"lib-gui","path":"lib-gui/dom/dom-line-height.cs","sloc":6,"content":"fn dom_line_height\n let div dom_div body \"M\"\n let r div.offsetHeight\n \n dom_remove div\n \n ret r\nend"},"dom-margin":{"id":"dom-margin","name":"dom-margin","branch":"lib-gui","path":"lib-gui/dom/dom-margin.cs","sloc":10,"content":"fn dom_margin x y\n check is_obj x\n check is_cool y\n\n if is_num y\n  let s to_px y\n  \n  ret dom_margin x s\n end\n\n let v from_mw y\n \n assign x.style.margin v\nend"},"dom-margin-bottom":{"id":"dom-margin-bottom","name":"dom-margin-bottom","branch":"lib-gui","path":"lib-gui/dom/dom-margin-bottom.cs","sloc":10,"content":"fn dom_margin_bottom x y\n check is_obj x\n check is_cool y\n \n if is_num y\n  let s to_px y\n  \n  ret dom_margin_bottom x s\n end\n\n let v from_mw y\n\n assign x.style.marginBottom v\nend"},"dom-margin-left":{"id":"dom-margin-left","name":"dom-margin-left","branch":"lib-gui","path":"lib-gui/dom/dom-margin-left.cs","sloc":10,"content":"fn dom_margin_left x y\n check is_obj x\n check is_cool y\n \n if is_num y\n  let s to_px y\n  \n  ret dom_margin_left x s\n end\n\n let v from_mw y\n\n assign x.style.marginLeft v\nend"},"dom-margin-right":{"id":"dom-margin-right","name":"dom-margin-right","branch":"lib-gui","path":"lib-gui/dom/dom-margin-right.cs","sloc":10,"content":"fn dom_margin_right x y\n check is_obj x\n check is_cool y\n \n if is_num y\n  let s to_px y\n  \n  ret dom_margin_right x s\n end\n\n let v from_mw y\n\n assign x.style.marginRight v\nend"},"dom-margin-top":{"id":"dom-margin-top","name":"dom-margin-top","branch":"lib-gui","path":"lib-gui/dom/dom-margin-top.cs","sloc":10,"content":"fn dom_margin_top x y\n check is_obj x\n check is_cool y\n\n if is_num y\n  let s to_px y\n  \n  ret dom_margin_top x s\n end\n\n let v from_mw y\n \n assign x.style.marginTop v\nend"},"dom-max-height":{"id":"dom-max-height","name":"dom-max-height","branch":"lib-gui","path":"lib-gui/dom/dom-max-height.cs","sloc":9,"content":"fn dom_max_height x y\n check is_obj x\n check is_cool y\n \n if is_num y\n  let s to_px y\n  \n  ret dom_max_height x s\n end\n \n assign x.style.maxHeight y\nend"},"dom-max-width":{"id":"dom-max-width","name":"dom-max-width","branch":"lib-gui","path":"lib-gui/dom/dom-max-width.cs","sloc":9,"content":"fn dom_max_width x y\n check is_obj x\n check is_cool y\n \n if is_num y\n  let s to_px y\n  \n  ret dom_max_width x s\n end\n \n assign x.style.maxWidth y\nend"},"dom-min-height":{"id":"dom-min-height","name":"dom-min-height","branch":"lib-gui","path":"lib-gui/dom/dom-min-height.cs","sloc":9,"content":"fn dom_min_height x y\n check is_obj x\n check is_cool y\n \n if is_num y\n  let s to_px y\n  \n  ret dom_min_height x s\n end\n \n assign x.style.minHeight y\nend"},"dom-min-width":{"id":"dom-min-width","name":"dom-min-width","branch":"lib-gui","path":"lib-gui/dom/dom-min-width.cs","sloc":9,"content":"fn dom_min_width x y\n check is_obj x\n check is_cool y\n \n if is_num y\n  let s to_px y\n  \n  ret dom_min_width x s\n end\n \n assign x.style.minWidth y\nend"},"dom-modal":{"id":"dom-modal","name":"dom-modal","branch":"lib-gui","path":"lib-gui/dom/dom-modal.cs","sloc":11,"content":"gn dom_modal x y\n check is_obj x\n \n if is_undef y\n  ret run dom_modal x nop\n\n x.showModal \n y\n \n while x.open\n  yield\n end\n \n dom_remove x\nend"},"dom-object-fit":{"id":"dom-object-fit","name":"dom-object-fit","branch":"lib-gui","path":"lib-gui/dom/dom-object-fit.cs","sloc":5,"content":"fn dom_object_fit x y\n check is_obj x\n check is_str y\n\n assign x.style.objectFit y \nend"},"dom-option":{"id":"dom-option","name":"dom-option","branch":"lib-gui","path":"lib-gui/dom/dom-option.cs","sloc":4,"content":"fn dom_option x\n check is_nullable x\n\n ret dom_init \"option\" x\nend"},"dom-over":{"id":"dom-over","name":"dom-over","branch":"lib-gui","path":"lib-gui/dom/dom-over.cs","sloc":24,"content":"fn dom_over x y z\n check is_obj x\n check is_str y\n check is_cool z\n \n var previous null\n \n fn on_enter x y z\n  check is_obj x\n  check is_str y\n  check is_cool z\n  \n  if is_null previous\n   assign previous get x.style y\n  \n  set x.style y z\n end\n\n fn on_leave x y\n  check is_obj x\n  check is_str y\n  \n  if not is_null previous  \n   set x.style y previous\n end\n \n let enter partial on_enter x y z\n let leave partial on_leave x y\n\n x.addEventListener \"mouseenter\" enter\n x.addEventListener \"mouseleave\" leave\nend"},"dom-overflow":{"id":"dom-overflow","name":"dom-overflow","branch":"lib-gui","path":"lib-gui/dom/dom-overflow.cs","sloc":4,"content":"fn dom_overflow x y\n check is_obj x\n\n assign x.style.overflow y\nend"},"dom-overflow-wrap":{"id":"dom-overflow-wrap","name":"dom-overflow-wrap","branch":"lib-gui","path":"lib-gui/dom/dom-overflow-wrap.cs","sloc":5,"content":"fn dom_overflow_wrap x y\n check is_obj x\n check is_str y\n \n assign x.style.overflowWrap y\nend"},"dom-overflow-x":{"id":"dom-overflow-x","name":"dom-overflow-x","branch":"lib-gui","path":"lib-gui/dom/dom-overflow-x.cs","sloc":4,"content":"fn dom_overflow_x x y\n check is_obj x\n\n assign x.style.overflowX y\nend"},"dom-overflow-y":{"id":"dom-overflow-y","name":"dom-overflow-y","branch":"lib-gui","path":"lib-gui/dom/dom-overflow-y.cs","sloc":4,"content":"fn dom_overflow_y x y\n check is_obj x\n\n assign x.style.overflowY y\nend"},"dom-overflown":{"id":"dom-overflown","name":"dom-overflown","branch":"lib-gui","path":"lib-gui/dom/dom-overflown.cs","sloc":8,"content":"//https://stackoverflow.com/questions/9333379/check-if-an-elements-content-is-overflowing\n//https://stackoverflow.com/questions/7738117/html-text-overflow-ellipsis-detection\n\nfn dom_overflown x\n check is_obj x\n \n if gt x.scrollHeight x.clientHeight\n  ret true\n \n if gt x.scrollWidth x.clientWidth\n  ret true\n \n ret false\nend"},"dom-padding":{"id":"dom-padding","name":"dom-padding","branch":"lib-gui","path":"lib-gui/dom/dom-padding.cs","sloc":10,"content":"fn dom_padding x y\n check is_obj x\n check is_cool y\n\n if is_num y\n  let s to_px y\n  \n  ret dom_padding x s\n end\n\n let v from_mw y\n \n assign x.style.padding v\nend"},"dom-padding-bottom":{"id":"dom-padding-bottom","name":"dom-padding-bottom","branch":"lib-gui","path":"lib-gui/dom/dom-padding-bottom.cs","sloc":10,"content":"fn dom_padding_bottom x y\n check is_obj x\n check is_cool y\n \n if is_num y\n  let s to_px y\n  \n  ret dom_padding_bottom x s\n end\n\n let v from_mw y\n\n assign x.style.paddingBottom v\nend"},"dom-padding-left":{"id":"dom-padding-left","name":"dom-padding-left","branch":"lib-gui","path":"lib-gui/dom/dom-padding-left.cs","sloc":10,"content":"fn dom_padding_left x y\n check is_obj x\n check is_cool y\n\n if is_num y\n  let s to_px y\n  \n  ret dom_padding_left x s\n end\n\n let v from_mw y\n \n assign x.style.paddingLeft v\nend"},"dom-padding-right":{"id":"dom-padding-right","name":"dom-padding-right","branch":"lib-gui","path":"lib-gui/dom/dom-padding-right.cs","sloc":10,"content":"fn dom_padding_right x y\n check is_obj x\n check is_cool y\n\n if is_num y\n  let s to_px y\n  \n  ret dom_padding_right x s\n end\n\n let v from_mw y\n \n assign x.style.paddingRight v\nend"},"dom-padding-top":{"id":"dom-padding-top","name":"dom-padding-top","branch":"lib-gui","path":"lib-gui/dom/dom-padding-top.cs","sloc":10,"content":"fn dom_padding_top x y\n check is_obj x\n check is_cool y\n \n if is_num y\n  let s to_px y\n  \n  ret dom_padding_top x s\n end\n\n let v from_mw y\n\n assign x.style.paddingTop v\nend"},"dom-parent":{"id":"dom-parent","name":"dom-parent","branch":"lib-gui","path":"lib-gui/dom/dom-parent.cs","sloc":4,"content":"fn dom_parent x\n check is_obj x\n\n ret x.parentElement\nend"},"dom-position":{"id":"dom-position","name":"dom-position","branch":"lib-gui","path":"lib-gui/dom/dom-position.cs","sloc":5,"content":"fn dom_position x y\n check is_obj x\n check is_str y\n \n assign x.style.position y\nend"},"dom-pre":{"id":"dom-pre","name":"dom-pre","branch":"lib-gui","path":"lib-gui/dom/dom-pre.cs","sloc":7,"content":"fn dom_pre x y\n check is_nullable x\n\n let r dom_init \"pre\" x\n\n if is_def y \n  dom_text r y\n \n ret r\nend"},"dom-push":{"id":"dom-push","name":"dom-push","branch":"lib-gui","path":"lib-gui/dom/dom-push.cs","sloc":5,"content":"fn dom_push x y\n check is_obj x\n check is_obj y\n \n x.append y\nend"},"dom-rect":{"id":"dom-rect","name":"dom-rect","branch":"lib-gui","path":"lib-gui/dom/dom-rect.cs","sloc":9,"content":"fn dom_rect x\n check is_obj x\n \n let o call x.getBoundingClientRect \n let x o.x\n let y o.y\n let width o.width\n let height o.height\n \n ret obj x y width height\nend"},"dom-reflow":{"id":"dom-reflow","name":"dom-reflow","branch":"lib-gui","path":"lib-gui/dom/dom-reflow.cs","sloc":8,"content":"fn dom_reflow x\n check is_obj x\n \n fn f x\n  let s x\n end\n \n let s x.outerHTML\n \n f s\nend"},"dom-remove":{"id":"dom-remove","name":"dom-remove","branch":"lib-gui","path":"lib-gui/dom/dom-remove.cs","sloc":4,"content":"fn dom_remove x\n check is_obj x\n \n x.remove\nend"},"dom-right":{"id":"dom-right","name":"dom-right","branch":"lib-gui","path":"lib-gui/dom/dom-right.cs","sloc":10,"content":"fn dom_right x y\n check is_obj x\n check is_cool y\n \n if is_num y\n  let s to_px y\n  \n  ret dom_right x s\n end\n \n let s from_mw y\n \n assign x.style.right s\nend"},"dom-rowspan":{"id":"dom-rowspan","name":"dom-rowspan","branch":"lib-gui","path":"lib-gui/dom/dom-rowspan.cs","sloc":5,"content":"fn dom_rowspan x y\n check is_obj x\n check is_uint y\n \n dom_attr x \"rowspan\" y\nend"},"dom-select":{"id":"dom-select","name":"dom-select","branch":"lib-gui","path":"lib-gui/dom/dom-select.cs","sloc":12,"content":"fn dom_select x y\n check is_nullable x\n check is_obj y\n \n let r dom_init \"select\" x\n \n forin y\n  let v get y k\n  let option dom_option r\n\n  assign option.value k\n  \n  dom_text option v\n end\n \n ret r\nend"},"dom-separator":{"id":"dom-separator","name":"dom-separator","branch":"lib-gui","path":"lib-gui/dom/dom-separator.cs","sloc":11,"content":"fn dom_separator x y\n check is_nullable x\n \n if is_undef y\n  ret dom_separator x \"|\"\n \n check is_str y\n \n let s concat \" \" y \" \"\n let r dom_init \"span\" x\n \n dom_text r s\n dom_color r \"gray\"\n \n ret r\nend"},"dom-shadow":{"id":"dom-shadow","name":"dom-shadow","branch":"lib-gui","path":"lib-gui/dom/dom-shadow.cs","sloc":5,"content":"fn dom_shadow x y\n check is_obj x\n check is_str y\n \n assign x.style.boxShadow y\nend"},"dom-small-caps":{"id":"dom-small-caps","name":"dom-small-caps","branch":"lib-gui","path":"lib-gui/dom/dom-small-caps.cs","sloc":4,"content":"fn dom_small_caps x\n check is_obj x\n \n assign x.style.fontVariantCaps \"small-caps\"\nend"},"dom-spacer":{"id":"dom-spacer","name":"dom-spacer","branch":"lib-gui","path":"lib-gui/dom/dom-spacer.cs","sloc":10,"content":"fn dom_spacer x y\n check is_nullable x\n\n if is_undef y\n  ret dom_spacer x line\n  \n check is_cool y\n  \n let r dom_span x\n \n dom_display r \"inline-block\"\n dom_width r y\n \n ret r\nend"},"dom-span":{"id":"dom-span","name":"dom-span","branch":"lib-gui","path":"lib-gui/dom/dom-span.cs","sloc":7,"content":"fn dom_span x y\n check is_nullable x\n\n let r dom_init \"span\" x\n\n if is_def y \n  dom_text r y\n \n ret r\nend"},"dom-style":{"id":"dom-style","name":"dom-style","branch":"lib-gui","path":"lib-gui/dom/dom-style.cs","sloc":5,"content":"fn dom_style x y\n check is_obj x\n check is_str y\n \n ret get x.style y\nend"},"dom-style-computed":{"id":"dom-style-computed","name":"dom-style-computed","branch":"lib-gui","path":"lib-gui/dom/dom-style-computed.cs","sloc":6,"content":"fn dom_style_computed x y\n check is_obj x\n check is_str y\n \n let o getComputedStyle x\n \n ret get o y\nend"},"dom-style-remove":{"id":"dom-style-remove","name":"dom-style-remove","branch":"lib-gui","path":"lib-gui/dom/dom-style-remove.cs","sloc":5,"content":"fn dom_style_remove x y\n check is_obj x\n check is_str y\n \n x.style.removeProperty y\nend"},"dom-style-tag":{"id":"dom-style-tag","name":"dom-style-tag","branch":"lib-gui","path":"lib-gui/dom/dom-style-tag.cs","sloc":4,"content":"fn dom_style_tag x\n check is_nullable x\n\n ret dom_init \"style\" x\nend"},"dom-table":{"id":"dom-table","name":"dom-table","branch":"lib-gui","path":"lib-gui/dom/dom-table.cs","sloc":6,"content":"fn dom_table x\n check is_nullable x\n\n let r dom_init \"table\" x\n \n dom_collapse r\n \n ret r\nend"},"dom-table-layout":{"id":"dom-table-layout","name":"dom-table-layout","branch":"lib-gui","path":"lib-gui/dom/dom-table-layout.cs","sloc":5,"content":"fn dom_table_layout x y\n check is_obj x\n check is_str y\n\n assign x.style.tableLayout y\nend"},"dom-tag":{"id":"dom-tag","name":"dom-tag","branch":"lib-gui","path":"lib-gui/dom/dom-tag.cs","sloc":4,"content":"fn dom_tag x\n check is_obj x\n \n ret to_lower x.tagName\nend"},"dom-target":{"id":"dom-target","name":"dom-target","branch":"lib-gui","path":"lib-gui/dom/dom-target.cs","sloc":5,"content":"fn dom_target x y\n check is_obj x\n check is_str y\n \n dom_attr x \"target\" y\nend"},"dom-td":{"id":"dom-td","name":"dom-td","branch":"lib-gui","path":"lib-gui/dom/dom-td.cs","sloc":7,"content":"fn dom_td x y\n check is_nullable x\n\n let r dom_init \"td\" x\n\n if is_def y \n  dom_text r y\n \n ret r\nend"},"dom-text":{"id":"dom-text","name":"dom-text","branch":"lib-gui","path":"lib-gui/dom/dom-text.cs","sloc":11,"content":"fn dom_text x y\n check is_obj x\n \n if is_undef y\n  ret x.textContent\n  \n if is_num y\n  let s to_str y\n  \n  ret dom_text x s\n end\n  \n check is_str y\n\n assign x.textContent y\nend"},"dom-text-overflow":{"id":"dom-text-overflow","name":"dom-text-overflow","branch":"lib-gui","path":"lib-gui/dom/dom-text-overflow.cs","sloc":5,"content":"fn dom_text_overflow x y\n check is_obj x\n check is_str y\n \n assign x.style.textOverflow y\nend"},"dom-text-width":{"id":"dom-text-width","name":"dom-text-width","branch":"lib-gui","path":"lib-gui/dom/dom-text-width.cs","sloc":8,"content":"fn dom_text_width x\n check is_str x\n \n let span dom_span body x\n \n dom_display span \"inline-block\"\n \n let r span.offsetWidth\n \n dom_remove span\n \n ret r\nend"},"dom-textarea":{"id":"dom-textarea","name":"dom-textarea","branch":"lib-gui","path":"lib-gui/dom/dom-textarea.cs","sloc":4,"content":"fn dom_textarea x\n check is_nullable x\n\n ret dom_init \"textarea\" x\nend"},"dom-th":{"id":"dom-th","name":"dom-th","branch":"lib-gui","path":"lib-gui/dom/dom-th.cs","sloc":7,"content":"fn dom_th x y\n check is_nullable x\n\n let r dom_init \"th\" x\n \n if is_def y\n  dom_text r y\n \n ret r\nend"},"dom-top":{"id":"dom-top","name":"dom-top","branch":"lib-gui","path":"lib-gui/dom/dom-top.cs","sloc":10,"content":"fn dom_top x y\n check is_obj x\n check is_cool y\n \n if is_num y\n  let s to_px y\n  \n  ret dom_top x s\n end\n\n let s from_mw y\n \n assign x.style.top s\nend"},"dom-tr":{"id":"dom-tr","name":"dom-tr","branch":"lib-gui","path":"lib-gui/dom/dom-tr.cs","sloc":4,"content":"fn dom_tr x\n check is_nullable x\n\n ret dom_init \"tr\" x\nend"},"dom-ul":{"id":"dom-ul","name":"dom-ul","branch":"lib-gui","path":"lib-gui/dom/dom-ul.cs","sloc":4,"content":"fn dom_ul x \n check is_nullable x\n \n ret dom_init \"ul\" x\nend"},"dom-underline-no":{"id":"dom-underline-no","name":"dom-underline-no","branch":"lib-gui","path":"lib-gui/dom/dom-underline-no.cs","sloc":4,"content":"fn dom_underline_no x\n check is_obj x\n\n assign x.style.textDecorationLine \"none\"\nend"},"dom-unshift":{"id":"dom-unshift","name":"dom-unshift","branch":"lib-gui","path":"lib-gui/dom/dom-unshift.cs","sloc":5,"content":"fn dom_unshift x y\n check is_obj x\n check is_obj y\n \n x.prepend y\nend"},"dom-valign":{"id":"dom-valign","name":"dom-valign","branch":"lib-gui","path":"lib-gui/dom/dom-valign.cs","sloc":5,"content":"fn dom_valign x y\n check is_obj x\n check is_str y\n \n assign x.style.verticalAlign y\nend"},"dom-visible":{"id":"dom-visible","name":"dom-visible","branch":"lib-gui","path":"lib-gui/dom/dom-visible.cs","sloc":7,"content":"fn dom_visible x y\n check is_obj x\n \n if is_undef y\n  ret x.style.visibility\n \n check is_str y\n\n assign x.style.visibility y\nend"},"dom-white-space":{"id":"dom-white-space","name":"dom-white-space","branch":"lib-gui","path":"lib-gui/dom/dom-white-space.cs","sloc":5,"content":"fn dom_white_space x y\n check is_obj x\n check is_str y\n \n assign x.style.whiteSpace y\nend"},"dom-width":{"id":"dom-width","name":"dom-width","branch":"lib-gui","path":"lib-gui/dom/dom-width.cs","sloc":10,"content":"fn dom_width x y\n check is_obj x\n check is_cool y\n \n if is_num y\n  let s to_px y\n  \n  ret dom_width x s\n end\n \n let v from_mw y\n \n assign x.style.width v\nend"},"dom-window-height":{"id":"dom-window-height","name":"dom-window-height","branch":"lib-gui","path":"lib-gui/dom/dom-window-height.cs","sloc":3,"content":"fn dom_window_height\n ret innerHeight\nend"},"dom-window-width":{"id":"dom-window-width","name":"dom-window-width","branch":"lib-gui","path":"lib-gui/dom/dom-window-width.cs","sloc":3,"content":"fn dom_window_width\n ret innerWidth\nend"},"dom-word-break":{"id":"dom-word-break","name":"dom-word-break","branch":"lib-gui","path":"lib-gui/dom/dom-word-break.cs","sloc":5,"content":"fn dom_word_break x y\n check is_obj x\n check is_str y\n \n assign x.style.wordBreak y\nend"},"drop":{"id":"drop","name":"drop","branch":"prg-compile","path":"prg-compile/level-b/drop.js","sloc":5,"content":"function drop(x)\n{\n check(is_arr,x)\n \n pop(x)\n}"},"dump":{"id":"dump","name":"dump","branch":"prg-compile","path":"prg-compile/level-c/dump.cs","sloc":7,"content":"fn dump x\n if is_str x\n  let s to_json x\n  \n  log s\n else\n  log x\nend"},"dup":{"id":"dup","name":"dup","branch":"prg-compile","path":"prg-compile/level-b/dup.js","sloc":17,"content":"function dup(x)\n{\n check(is_container,x)\n \n if(is_arr(x))\n  return slice(x,0)\n \n if(is_obj(x))\n {\n  const r=obj()\n  \n  for(const k in x)\n  {\n   const v=get(x,k)\n   \n   put(r,k,v)\n  }\n  \n  return r   \n }\n \n stop()\n}"},"edf-load":{"id":"edf-load","name":"edf-load","branch":"prg-edf","path":"prg-edf/src/edf-load.cs","sloc":94,"content":"fn edf_load x\n check is_file x\n \n let a file_read x \"binary\"\n let a explode a\n\n let version shift a 8\n let version implode version\n let version trim version\n\n let patient shift a 80\n let patient implode patient \n\n let recording shift a 80\n let recording implode recording \n\n let date shift a 8\n let date implode date \n\n let time shift a 8\n let time implode time \n\n let header_length shift a 8\n let header_length implode header_length \n let header_length trim header_length \n let header_length to_uint header_length\n \n let reserved shift a 44\n let reserved implode reserved \n \n let data_count shift a 8\n let data_count implode data_count\n let data_count trim data_count\n let data_count to_uint data_count\n\n let data_duration shift a 8\n let data_duration implode data_duration\n let data_duration trim data_duration\n let data_duration to_uint data_duration\n\n let signal_count shift a 4\n let signal_count implode signal_count\n let signal_count trim signal_count\n let signal_count to_uint signal_count\n\n fn shift_signal x\n  check is_uint x\n  \n  let r arr\n  \n  fornum signal_count\n   let v shift a x\n   let v implode v\n   let v trim v\n   \n   if is_numeric v\n    let v to_num v\n    \n    push r v\n   elseif is_empty v\n    push r null\n   else\n    push r v\n   end\n  end\n  \n  ret r\n end\n \n let labels shift_signal 16\n let transducers shift_signal 80\n let physical_dimensions shift_signal 8\n let physical_mins shift_signal 8\n let physical_maxs shift_signal 8\n let digital_mins shift_signal 8\n let digital_maxs shift_signal 8\n let prefilterings shift_signal 80\n let sample_counts shift_signal 8\n let reserveds shift_signal 32\n \n let signals arr\n \n fornum signal_count\n  let label shift labels\n  let transducer shift transducers\n  let physical_dimension shift physical_dimensions\n  let physical_min shift physical_mins\n  let physical_max shift physical_maxs\n  let digital_min shift digital_mins\n  let digital_max shift digital_maxs\n  let prefiltering shift prefilterings\n  let sample_count shift sample_counts\n  let reserved shift reserveds\n  \n  let signal obj label transducer physical_dimension physical_min physical_max digital_min digital_max prefiltering sample_count reserved\n  \n  push signals signal\n end\n \n var index 0\n \n forof signals\n  let count v.sample_count\n  let data arr\n  \n  fornum count\n   let high at a index\n   \n   assign index inc index\n      \n   let low at a index\n\n   assign index inc index\n   \n   let high asc high   \n   let low asc low\n   let n mul high 256\n   let n add n low\n   \n   push data n\n  end\n end\n\n ret obj version patient recording date time header_length reserved data_count data_duration signal_count signals\nend"},"elinks":{"id":"elinks","name":"elinks","branch":"prg-deploy-node","path":"prg-deploy-node/src/elinks.cs","sloc":25,"content":"fn elinks x\n check is_str x\n \n let lines os_execute \"elinks\" \"-no-numbering\" x\n let lines split lines\n let html arr\n \n while is_full lines\n  let line shift lines\n  let line trim_r line\n  \n  if same line \"References\"\n   shift lines 2\n   \n   brk\n  end\n  \n  push html line\n end\n \n let urls arr\n\n forof lines\n  let url trim v\n  let url strip_l url \".\"\n  let url trim url\n  \n  push urls url\n end \n \n let html join html\n let html trim_r html\n \n ret obj html urls\nend"},"env-init":{"id":"env-init","name":"env-init","branch":"lib-deploy","path":"lib-deploy/src/env-init.cs","sloc":8,"content":"fn env_init\n let user \"mabynogy\"\n let home path_concat \"/home\" user\n let mnt path_concat home \"mnt\"\n let tmp path_concat home \"tmp\"\n let prg path_concat home \"place-hdd/room-prg\"\n \n ret obj user home mnt tmp prg\nend"},"env-upload":{"id":"env-upload","name":"env-upload","branch":"lib-deploy","path":"lib-deploy/src/env-upload.cs","sloc":31,"content":"fn env_upload x y\n check is_obj x\n check is_str y\n \n let login x.login\n let home x.home\n let prg x.prg\n let tmp x.tmp\n let install path_concat prg \"prg-install\" \"prg-install\"\n let hdd path_drop prg\n \n forof dir_read y is_fs\n  let base path_base v\n  let source v\n  let target path_concat home base\n  let login_home concat login \":\" home\n  let login_target concat login \":\" target\n  \n  ssh login \"rm\" \"--recursive\" \"--force\" target  \n\n  rsync \"--recursive\" \"--perms\" v login_home\n  rsync \"--recursive\" \"--perms\" \"data-php/*\" login_target\n end\n \n let duration call time_now\n let duration to_fixed duration\n let duration concat duration \"s\"\n let duration space \"website\" duration\n \n flower duration\n\n ssh login \"sudo\" \"rm\" \"--recursive\" \"--force\" prg \n ssh login \"mkdir\" \"--parents\" prg\n ssh login \"mkdir\" \"--parents\" tmp\n \n let login_hdd concat login \":\" hdd\n\n rsync \"--recursive\" \"--perms\" prg login_hdd\n\n ssh login install\nend"},"eq":{"id":"eq","name":"eq","branch":"prg-compile","path":"prg-compile/level-b/eq.js","sloc":7,"content":"function eq(x,y)\n{\n check(is_def,x)\n check(is_def,y)\n \n const n=compare(x,y)\n \n return same(n,0)\n}"},"error-process":{"id":"error-process","name":"error-process","branch":"lib-gui","path":"lib-gui/error-process.cs","sloc":12,"content":"gn error_process x\n check is_obj x\n\n let error x.error\n let message to_lit x.message\n let agent x.agent\n \n log \"message\" message\n \n dbg_log error\n \n let subject concat \"error \" agent \" \" message\n   \n if different agent \"googlebot\"\n  run api_report subject x\n  \n run error_show x\nend"},"error-show":{"id":"error-show","name":"error-show","branch":"lib-gui","path":"lib-gui/error-show.cs","sloc":42,"content":"gn error_show x\n check is_obj x\n\n fn on_click x\n  check is_obj x\n  \n  x.close\n end\n\n let pairs flatten x\n let dlg dlg_init \"An error has occured\"\n\n dom_color dlg.title \"red\"\n \n let table dom_table dlg.container\n \n forin pairs\n  let v get pairs k\n  let tr dom_tr table\n  let left dom_td tr\n  let right dom_td tr\n  \n  if not is_str v\n   let s to_json v\n   \n   dom_pre right s\n  elseif is_url v\n   let s url_excerpt v\n   \n   dom_a right s v true\n  else\n   dom_pre right v\n   \n  dom_padding_left right spacing\n  \n  dom_align left \"right\"\n  dom_valign left \"top\"\n  dom_valign right \"top\"\n  dom_text left k\n end\n\n dom_br dlg.container\n\n let div dom_div dlg.container \"This report has been sent to the webmaster.\"\n\n dom_bold div\n dom_align div \"center\"\n dom_color div \"green\"\n\n dom_br dlg.container\n \n let continue_ dlg_button dlg \"Continue\"\n let on_click partial on_click dlg.dialog\n \n assign dlg.dialog.onenter on_click\n assign continue_.onclick on_click\n \n run dlg_modal dlg\n \n location.reload\nend"},"every":{"id":"every","name":"every","branch":"prg-compile","path":"prg-compile/level-a/every.js","sloc":13,"content":"function every(x,y)\n{\n check(is_arr,x)\n check(is_fn,y)\n \n for(const v of x)\n {\n  const b=y(v)\n  \n  if(is_false(b))\n   return false\n\n  check(is_true,b)  \n }\n \n return true\n}"},"explode":{"id":"explode","name":"explode","branch":"prg-compile","path":"prg-compile/level-b/explode.js","sloc":5,"content":"function explode(x)\n{\n check(is_str,x)\n \n return Array.from(x)\n}"},"expr-arr":{"id":"expr-arr","name":"expr-arr","branch":"prg-compile","path":"prg-compile/src/expr/expr-arr.js","sloc":5,"content":"function expr_arr(...x)\n{\n const s=join(x,\",\")\n \n return bracket(s)\n}"},"expr-call":{"id":"expr-call","name":"expr-call","branch":"prg-compile","path":"prg-compile/src/expr/expr-call.js","sloc":39,"content":"function expr_call(x,...y)\n{\n check(is_name,x)\n\n function get_argument(x)\n {\n  check(is_str,x)\n  \n  if(is_numeric(x))\n   return x\n  \n  if(is_lit(x))\n   return x\n  \n  if(is_identifier(x))\n   return x\n\n  if(is_access(x))\n   return x\n  \n  if(is_tuple(x))\n  {\n   const a=unwrap(x)\n   \n   check(is_pair,a)\n   \n   const name=front(a)\n   const spread=back(a)\n   \n   check(is_identifier,name)\n   check(same,spread,\"spread\")\n   \n   if(is_cs())\n    return concat(\"...\",name)\n    \n   if(is_cu())\n   {\n    const s=paren(name)\n    \n    return concat(\"unpack\",s)\n   }\n\n   stop()\n  }\n  \n  log(\"argument\",to_lit(x))\n  \n  stop()\n }\n \n const arguments=map(y,get_argument)\n const s=join(arguments,\",\")\n const list=paren(s)\n \n return concat(x,list)\n}"},"expr-in":{"id":"expr-in","name":"expr-in","branch":"prg-compile","path":"prg-compile/src/expr/expr-in.js","sloc":7,"content":"function expr_in(x,y,...z)\n{\n check(is_identifier,x)\n check(is_identifier,y)\n check(is_empty,z)\n \n return space(y,\"in\",x)\n}"},"expr-inline":{"id":"expr-inline","name":"expr-inline","branch":"prg-compile","path":"prg-compile/src/expr/expr-inline.js","sloc":7,"content":"function expr_inline(...x)\n{\n check(is_single,x)\n \n const s=front(x)\n  \n check(is_lit,s)\n  \n return unwrap(s)\n}"},"expr-instanceof":{"id":"expr-instanceof","name":"expr-instanceof","branch":"prg-compile","path":"prg-compile/src/expr/expr-instanceof.js","sloc":7,"content":"function expr_instanceof(x,y,...z)\n{\n check(is_name,x)\n check(is_identifier,y)\n check(is_empty,z)\n \n return space(x,\"instanceof\",y)\n}"},"expr-new":{"id":"expr-new","name":"expr-new","branch":"prg-compile","path":"prg-compile/src/expr/expr-new.js","sloc":5,"content":"function expr_new(...x)\n{\n const rvalue=expr_rvalue(...x)\n \n return space(\"new\",rvalue)\n}"},"expr-obj":{"id":"expr-obj","name":"expr-obj","branch":"prg-compile","path":"prg-compile/src/expr/expr-obj.js","sloc":6,"content":"function expr_obj(...x)\n{\n check(every,x,is_identifier)\n \n const s=join(x,\",\")\n \n return brace(s)\n}"},"expr-run":{"id":"expr-run","name":"expr-run","branch":"prg-compile","path":"prg-compile/src/expr/expr-run.js","sloc":5,"content":"function expr_run(...x)\n{\n const call=expr_call(...x)\n \n return space(\"yield*\",call)\n}"},"expr-rvalue":{"id":"expr-rvalue","name":"expr-rvalue","branch":"prg-compile","path":"prg-compile/src/expr/expr-rvalue.js","sloc":37,"content":"function expr_rvalue(...x)\n{\n const first=front(x)\n \n if(is_single(x))\n {\n  if(same(first,\"arr\"))\n   return expr_arr()\n  else if(same(first,\"obj\"))\n   return expr_obj()\n  else\n   return first\n }\n\n const arguments=slice(x,1)\n \n if(same(first,\"call\"))\n  return expr_call(...arguments)\n else if(same(first,\"run\"))\n  return expr_run(...arguments)\n else if(same(first,\"arr\"))\n  return expr_arr(...arguments)\n else if(same(first,\"obj\"))\n  return expr_obj(...arguments)\n else if(same(first,\"new\"))\n  return expr_new(...arguments)\n else if(same(first,\"in\"))\n  return expr_in(...arguments)\n else if(same(first,\"instanceof\"))\n  return expr_instanceof(...arguments)\n else if(same(first,\"inline\"))\n  return expr_inline(...arguments)\n else if(same(first,\"not\"))\n {  \n  const rvalue=expr_rvalue(...arguments)\n  \n  return concat(\"!\",rvalue)\n }\n else\n  return expr_call(...x)\n}"},"fetch-url":{"id":"fetch-url","name":"fetch-url","branch":"prg-compile","path":"prg-compile/level-c/fetch-url.cs","sloc":46,"content":"gn fetch_url x\n if is_str x\n  let url x\n  let o obj url\n  \n  ret run fetch_url o\n end\n \n check is_obj x\n \n var result null\n \n fn on_response x\n  check is_obj x\n  \n  ret call x.text\n end\n\n fn on_data x\n  check is_str x\n  \n  assign result x\n end\n \n let timeout 8\n let url x.url\n var headers null\n var method get x \"method\" \"get\"\n var body null\n\n if has x \"headers\"\n  assign headers x.headers\n \n if has x \"body\"\n  assign body x.body\n  \n let option obj\n \n assign option.method method\n \n if not is_null headers\n  assign option.headers headers \n \n if not is_null body\n  assign option.body to_json body\n  \n let promise fetch url option\n let promise promise.then on_response\n \n promise.then on_data\n\n let begin call time_now\n \n while is_null result\n  let end call time_now\n  let time sub end begin\n  \n  if gt time timeout\n   stop\n\n  yield\n end\n \n if is_json result\n  ret from_json result\n \n ret result\nend"},"file-copy":{"id":"file-copy","name":"file-copy","branch":"prg-compile","path":"prg-compile/level-c/file-copy.cs","sloc":10,"content":"fn file_copy x y\n check is_str x\n check is_str y\n \n if is_dir y\n  let base path_base x\n  let path path_concat y base\n  \n  ret file_copy x path\n end\n \n fs.copyFileSync x y\nend"},"file-read":{"id":"file-read","name":"file-read","branch":"prg-compile","path":"prg-compile/level-a/file-read.js","sloc":9,"content":"function file_read(x,y)\n{\n if(is_undef(y))\n  return file_read(x,\"utf8\")\n  \n check(is_str,x)\n check(is_str,y)\n \n const b=fs.readFileSync(x)\n \n return b.toString(y)\n}"},"file-save":{"id":"file-save","name":"file-save","branch":"prg-compile","path":"prg-compile/level-a/file-save.js","sloc":19,"content":"function file_save(x,y)\n{\n check(is_str,x)\n check(is_str,y)\n \n if(is_file(x))\n {\n  const n=file_size(x)\n  \n  if(same(n,y.length))\n  {\n   const s=file_read(x)\n   \n   if(same(s,y))\n    return\n  }\n }\n \n const dir=path_dir(x)\n \n if(!is_dir(dir))\n  dir_make(dir)\n \n file_write(x,y)\n}"},"file-size":{"id":"file-size","name":"file-size","branch":"prg-compile","path":"prg-compile/level-a/file-size.js","sloc":6,"content":"function file_size(x)\n{\n check(is_str,x)\n\n const o=fs.lstatSync(x)\n\n return o.size\n}"},"file-unlink":{"id":"file-unlink","name":"file-unlink","branch":"prg-compile","path":"prg-compile/level-c/file-unlink.cs","sloc":4,"content":"fn file_unlink x\n check is_str x\n \n fs.unlinkSync x\nend"},"file-write":{"id":"file-write","name":"file-write","branch":"prg-compile","path":"prg-compile/level-a/file-write.js","sloc":6,"content":"function file_write(x,y)\n{\n check(is_str,x)\n check(is_str,y)\n \n fs.writeFileSync(x,y)\n}"},"find":{"id":"find","name":"find","branch":"prg-compile","path":"prg-compile/level-a/find.js","sloc":6,"content":"function find(x,y)\n{\n check(is_arr,x)\n check(is_def,y)\n \n return x.indexOf(y)\n}"},"flatten":{"id":"flatten","name":"flatten","branch":"prg-compile","path":"prg-compile/level-c/flatten.cs","sloc":20,"content":"fn flatten x\n check is_container x\n \n let r obj\n let o clone x\n \n forin o\n  let v get o k\n  let key to_str k\n  \n  if is_container v\n   let o flatten v\n   \n   forin o\n    let v get o k\n    let key concat key \".\" k\n    \n    put r key v\n   end\n  else\n   put r key v\n  end  \n end\n \n ret r\nend"},"flower":{"id":"flower","name":"flower","branch":"prg-compile","path":"prg-compile/level-c/flower.cs","sloc":9,"content":"fn flower x\n check is_str x\n\n let left repeat \"*\" 2\n let middle concat \" \" x \" \"\n let right repeat \"*\" terminal_width\n let s concat left middle right\n let s slice_l s terminal_width\n \n log s\nend"},"food-load":{"id":"food-load","name":"food-load","branch":"prg-measure","path":"prg-measure/src/food-load.cs","sloc":48,"content":"fn food_load\n fn decode x\n  check is_arr x\n  \n  let r arr\n  \n  forof x\n   let o obj\n   \n   assign o.date time_parse v.date\n   \n   let weight strip_r v.weight \"g\"\n   let weight to_num weight\n   let weight div weight 100  \n   let energy strip_r v.energy \"kcal\"\n   let energy to_num energy\n   let energy mul weight energy\n   let energy trunc energy\n\n   assign o.energy energy\n   \n   push r o\n  end\n\n  ret r\n end\n \n let r arr\n let path \"/home/mabynogy/place-hdd/room-personal/case-food/log.txt\"\n let content file_read path\n let t arr\n \n tbl_import_wsl t content\n \n let t decode t\n let day mul 24 60 60\n let o obj\n  \n forof t\n  let n div v.date day\n  let n trunc n\n  let key to_str n\n  \n  if has o key\n   let energy get o key\n   let energy add energy v.energy\n   \n   set o key energy\n  else\n   put o key v.energy\n  end\n end\n \n forin o\n  let date to_uint k\n  let date mul date day\n  let energy get o k\n  let o obj date energy\n  \n  push r o\n end\n \n ret r\nend"},"form-button":{"id":"form-button","name":"form-button","branch":"lib-gui","path":"lib-gui/form-button.cs","sloc":5,"content":"fn form_button x y\n check is_obj x\n check is_str y\n\n ret dlg_button x y \nend"},"form-init":{"id":"form-init","name":"form-init","branch":"lib-gui","path":"lib-gui/form-init.cs","sloc":7,"content":"fn form_init x\n check is_obj x\n \n let container dom_div x \n let fields arr\n let buttons arr\n \n ret obj container fields buttons\nend"},"form-push":{"id":"form-push","name":"form-push","branch":"lib-gui","path":"lib-gui/form-push.cs","sloc":20,"content":"fn form_push x y z\n check is_obj x\n check is_str y\n \n if is_undef z\n  ret form_push x y \"input\"\n  \n check is_str z\n\n let div1 dom_div x.container\n let div2 dom_div x.container\n let label dom_label div1 y\n let init concat \"dom_\" z\n let init eval init\n let r init div2\n \n if mobile\n  dom_bold label\n \n if is_full x.fields  \n  dom_padding_top div1 spacing\n\n dom_width r x.container.offsetWidth\n\n push x.fields r\n \n ret r\nend"},"from-base36":{"id":"from-base36","name":"from-base36","branch":"prg-compile","path":"prg-compile/level-c/from-base36.cs","sloc":8,"content":"fn from_base36 x\n check is_str x\n\n let r Number.parseInt x 36\n \n check is_int r\n \n let s to_base36 r\n \n check same s x\n  \n ret r\nend"},"from-json":{"id":"from-json","name":"from-json","branch":"prg-compile","path":"prg-compile/level-b/from-json.js","sloc":5,"content":"function from_json(x)\n{\n check(is_str,x)\n \n return JSON.parse(x)\n}"},"from-mw":{"id":"from-mw","name":"from-mw","branch":"lib-gui","path":"lib-gui/from-mw.cs","sloc":20,"content":"fn from_mw x\n check is_cool x\n \n if is_num x\n  ret x\n  \n check is_str x\n \n if match_r x \"mw\"\n  let r strip_r x \"mw\"\n  let r from_json r\n  \n  if mobile\n   let zoom 4\n   \n   let r mul r zoom\n   let r concat r \"vw\" \n   \n   ret r\n  else\n   let r concat r \"vw\"\n   \n   ret r\n  end\n else\n  ret x\nend"},"from-px":{"id":"from-px","name":"from-px","branch":"lib-gui","path":"lib-gui/from-px.cs","sloc":7,"content":"fn from_px x\n check is_str x \n check match_r x \"px\"\n \n let r strip_r x \"px\"\n let r from_json r\n \n ret r\nend"},"from-vw":{"id":"from-vw","name":"from-vw","branch":"lib-gui","path":"lib-gui/from-vw.cs","sloc":10,"content":"fn from_vw x\n check is_str x\n \n let r from_mw x\n \n check match_r r \"vw\"\n \n let div dom_div body\n \n dom_height div r\n \n let r div.offsetHeight\n \n dom_remove div\n \n ret r\nend"},"front":{"id":"front","name":"front","branch":"prg-compile","path":"prg-compile/level-a/front.js","sloc":5,"content":"function front(x)\n{\n check(is_def,x)\n \n return at(x,0)\n}"},"fs-copy":{"id":"fs-copy","name":"fs-copy","branch":"prg-compile","path":"prg-compile/level-c/fs-copy.cs","sloc":8,"content":"fn fs_copy x y\n check is_str x\n check is_str y\n \n let force true\n let recursive true\n let option obj force recursive\n \n fs.cpSync x y option\nend"},"fs-remove":{"id":"fs-remove","name":"fs-remove","branch":"prg-compile","path":"prg-compile/level-a/fs-remove.js","sloc":8,"content":"function fs_remove(x)\n{\n check(is_str,x)\n \n const force=true\n const recursive=true\n const option={force,recursive}\n \n fs.rmSync(x,option)\n}"},"get":{"id":"get","name":"get","branch":"prg-compile","path":"prg-compile/level-a/get.js","sloc":9,"content":"function get(x,y,z)\n{\n check(is_def,x)\n check(is_str,y)\n \n if(has(x,y))\n  return x[y]\n  \n check(is_def,z)\n\n return z \n}"},"get-css":{"id":"get-css","name":"get-css","branch":"prg-editor","path":"prg-editor/src/get-css.cs","sloc":21,"content":"fn get_css\n let size \"1.3vw\"\n let styles arr\n \n fn set_style x y z\n  check is_str x\n  check is_str y\n  check is_str z\n\n  let s concat x \"{\" y \":\" z \";}\"\n\n  push styles s\n end\n \n fn font_size x\n  check is_str x\n  \n  set_style x \"font-size\" size\n end\n \n set_style \"*\" \"box-sizing\" \"border-box\"\n set_style \"body\" \"font-family\" \"monospace\"\n \n font_size \"body\"\n font_size \"select\"\n font_size \"input\"\n \n ret join styles\nend"},"get-device":{"id":"get-device","name":"get-device","branch":"lib-gui","path":"lib-gui/get-device.cs","sloc":9,"content":"fn get_device\n let agent call get_user_agent\n \n if same agent \"android\"\n  ret \"mobile\"\n elseif same agent \"iphone\"\n  ret \"mobile\"\n else\n  ret \"desktop\"\nend"},"get-keys":{"id":"get-keys","name":"get-keys","branch":"prg-compile","path":"prg-compile/level-a/get-keys.js","sloc":5,"content":"function get_keys(x)\n{\n check(is_obj,x)\n \n return Object.keys(x)\n}"},"get-length":{"id":"get-length","name":"get-length","branch":"prg-compile","path":"prg-compile/level-c/get-length.cs","sloc":10,"content":"fn get_length x\n check is_composite x\n \n if is_vec x\n  ret x.length\n \n if is_obj x\n  let a get_keys x\n  \n  ret get_length a\n end\n \n stop\nend"},"get-user-agent":{"id":"get-user-agent","name":"get-user-agent","branch":"lib-gui","path":"lib-gui/get-user-agent.cs","sloc":20,"content":"fn get_user_agent\n let agent navigator.userAgent\n let agent to_lower agent\n \n if contain agent \"googlebot\"\n  ret \"googlebot\"\n elseif contain agent \"android\"\n  ret \"android\"\n elseif contain agent \"iphone\"\n  ret \"iphone\"\n elseif contain agent \"firefox\"\n  ret \"firefox\"\n elseif contain agent \"edge\"\n  ret \"edge\"\n elseif contain agent \"chrome\"\n  ret \"chrome\"\n elseif contain agent \"safari\"\n  ret \"safari\"\n else\n  ret \"unknown\"\nend"},"get-values":{"id":"get-values","name":"get-values","branch":"prg-compile","path":"prg-compile/level-b/get-values.js","sloc":5,"content":"function get_values(x)\n{\n check(is_obj,x)\n \n return Object.values(x)\n}"},"git-system":{"id":"git-system","name":"git-system","branch":"prg-deploy-doc","path":"prg-deploy-doc/src/git-system.cs","sloc":11,"content":"fn git_system x y z:spread\n let directory call process.cwd\n\n process.chdir x\n \n try\n  os_system \"git\" y z:spread\n catch e\n  process.chdir directory\n  \n  throw e\n end\n\n process.chdir directory\nend"},"gn-forward":{"id":"gn-forward","name":"gn-forward","branch":"prg-compile","path":"prg-compile/level-c/gn-forward.cs","sloc":9,"content":"fn gn_forward x y:spread\n check is_gn x\n \n let gn x\n let parameters y\n \n fn r\n  gn_run gn nop parameters:spread\n end\n  \n ret r\nend"},"gn-run":{"id":"gn-run","name":"gn-run","branch":"prg-compile","path":"prg-compile/level-a/gn-run.js","sloc":50,"content":"function gn_run(x,y,...z)\n{\n check(is_xn,x)\n\n if(is_fn(x))\n {\n  const fn=x\n    \n  function* gn(...x)\n  {\n   yield\n   \n   return fn(...x)\n  }\n  \n  return gn_run(gn,y,...z)\n }\n  \n if(is_undef(y))\n  return gn_run(x,nop,...z)\n\n check(is_fn,y)\n \n const complete=y\n const iterator=x(...z)\n const frequency=div(1,32)\n const threshold=64\n \n let result=null\n \n function cycle()\n {\n  const begin=time_now()\n  \n  for(let i=0;i<threshold;i++)\n  {\n   const o=iterator.next()\n    \n   if(o.done)\n   {\n    result=o.value\n    \n    return true\n   }\n\n   const now=time_now()\n   const duration=sub(now,begin)\n   \n   if(gt(duration,frequency))\n    break\n  }\n\n  return false\n }\n \n function tick()\n {\n  const finished=cycle()\n  \n  if(finished)\n   complete(result)\n  else\n   timer_timeout(tick,frequency)\n }\n \n tick()\n \n return iterator\n}"},"gn-sleep":{"id":"gn-sleep","name":"gn-sleep","branch":"prg-compile","path":"prg-compile/level-c/gn-sleep.cs","sloc":13,"content":"gn gn_sleep x\n if is_undef x\n  ret run gn_sleep 1\n  \n check is_num x\n\n let begin call time_now \n \n while true\n  let now call time_now\n  let delay sub now begin\n  \n  if gte delay x\n   brk\n  \n  yield\n end\nend"},"grid-align":{"id":"grid-align","name":"grid-align","branch":"lib-gui","path":"lib-gui/grid-align.cs","sloc":23,"content":"fn grid_align x y:spread\n check is_obj x\n \n if same y.length 1\n  let y_ front y\n  let y y_\n\n  check is_str y\n  \n  forof x.columns\n   grid_align x v y\n  end\n elseif same y.length 2\n  let y_ at y 0\n  let z at y 1\n  let y y_\n  \n  check is_cool y\n  check is_str z\n \n  let n grid_index x y\n\n  forof x.table.children\n   let td at v.children n\n   \n   dom_align td z\n  end\n else\n  stop\nend"},"grid-at":{"id":"grid-at","name":"grid-at","branch":"lib-gui","path":"lib-gui/grid-at.cs","sloc":15,"content":"fn grid_at x y\n check is_obj x\n check is_uint y\n \n let r obj\n let n inc y\n let tr at x.table.children n\n let columns x.columns\n\n forin columns\n  let i to_i k\n  let v at columns i\n  let td at tr.children i\n  \n  put r v td\n end\n \n ret r\nend"},"grid-column-width":{"id":"grid-column-width","name":"grid-column-width","branch":"lib-gui","path":"lib-gui/grid-column-width.cs","sloc":10,"content":"fn grid_column_width x y z\n check is_obj x\n check is_cool y\n check is_cool z\n \n let n grid_index x y\n\n forof x.table.children\n  let td at v.children n\n  \n  dom_width td z\n end\nend"},"grid-ellipsis":{"id":"grid-ellipsis","name":"grid-ellipsis","branch":"lib-gui","path":"lib-gui/grid-ellipsis.cs","sloc":23,"content":"fn grid_ellipsis x y\n check is_obj x\n \n if is_undef y\n  forof x.columns\n   grid_ellipsis x v\n  end\n  \n  ret\n end\n \n check is_str y\n\n let tweak from_vw \"0.5vw\"\n \n let line from_vw line\n let line add line tweak\n let line to_vw line\n \n let n grid_index x y\n\n forof x.table.children\n  let td at v.children n\n  let div front td.children\n  \n  dom_height div line\n  dom_overflow div \"hidden\"\n  dom_white_space div \"nowrap\"\n  dom_text_overflow div \"ellipsis\"\n end\nend"},"grid-index":{"id":"grid-index","name":"grid-index","branch":"lib-gui","path":"lib-gui/grid-index.cs","sloc":18,"content":"fn grid_index x y\n check is_obj x\n check is_cool y\n \n let columns x.columns\n  \n if is_uint y\n  check lt y columns.length\n  \n  ret y\n elseif is_str y\n  forin columns\n   let i to_i k\n   let v at columns i\n   \n   if same v y\n    ret i\n  end\n  \n  stop\n else\n  stop\nend"},"grid-init":{"id":"grid-init","name":"grid-init","branch":"lib-gui","path":"lib-gui/grid-init.cs","sloc":24,"content":"fn grid_init x y:spread  \n check is_obj x\n \n let columns arr\n let titles y\n let table dom_table x\n let tr dom_tr table\n let headers obj\n let tooltip null\n \n forof y\n  let column to_lower v  \n  var key column\n  let th dom_th tr\n  let div dom_div th v\n  \n  if same key \"#\"\n   assign key \"sharp\"\n\n  push columns key\n  put headers key th\n  \n  dom_padding th padding\n  dom_border th border  \n end\n\n assign r obj columns titles table headers tooltip\n\n grid_init_sort r\n \n ret r\nend"},"grid-init-sort":{"id":"grid-init-sort","name":"grid-init-sort","branch":"lib-gui","path":"lib-gui/grid-init-sort.cs","sloc":124,"content":"fn grid_init_sort x\n check is_obj x\n \n let up \"▲\"\n let down \"▼\"\n let grid x\n let table grid.table\n let children table.children\n let headers grid.headers\n\n let column null\n let order null\n let rows arr\n\n assign grid.sorting obj column order rows  \n \n let sorting grid.sorting\n \n fn reset\n  forin get_keys headers\n   let i to_i k\n   let value get_values headers\n   let value at value i\n   let title at grid.titles i\n   \n   dom_text value title\n  end\n  \n  while gt children.length 1\n   let tr children.item 1\n    \n   dom_remove tr\n  end\n  \n  forof sorting.rows\n   dom_push table v\n  end\n end\n \n fn save\n  let rows sorting.rows\n  \n  if is_full sorting.rows\n   ret\n   \n  fornum children.length\n   if same i 0\n    cont\n   \n   let row children.item i\n   \n   push rows row\n  end\n end\n \n fn compare_node x y z\n  check is_uint x\n  check is_obj y\n  check is_obj z\n  \n  let tdy y.children.item x\n  let tdz z.children.item x\n  let divy tdy.children.item 0\n  let divz tdz.children.item 0\n  \n  var sy dom_text divy\n  var sz dom_text divz\n  \n  if is_empty sy\n   assign sy dom_html divy\n\n  if is_empty sz\n   assign sz dom_html divz\n   \n  let sy to_lower sy  \n  let sz to_lower sz\n  \n  let numericy is_numeric sy\n  let numericz is_numeric sz\n\n  if and numericy numericz\n   let numy to_num sy\n   let numz to_num sz\n   \n   ret compare numy numz\n  end\n  \n  ret compare sy sz\n end\n \n fn on_click x\n  check is_str x\n  \n  //dom_display grid.table \"none\"\n  \n  if is_obj grid.tooltip\n   dom_remove grid.tooltip\n   \n   assign grid.tooltip null\n  end\n  \n  save\n  reset\n  \n  if is_null sorting.column\n   assign sorting.column x\n   assign sorting.order \"descending\"\n  elseif same sorting.column x  \n   if same sorting.order \"descending\"\n    assign sorting.order \"ascending\"\n   elseif same sorting.order \"ascending\"\n    assign sorting.column null\n    assign sorting.order null\n\n    //dom_display grid.table \"block\"\n    \n    ret\n   else\n    stop\n  else\n   assign sorting.column x\n   assign sorting.order \"descending\"\n  end\n   \n  let index get_keys headers\n  let index find index x\n  let header get headers x\n  var title at grid.titles index\n  \n  assign title concat title \" \"\n  \n  if same sorting.order \"descending\"\n   assign title concat title down\n  elseif same sorting.order \"ascending\"\n   assign title concat title up\n  else\n   stop\n  \n  dom_text header title\n  \n  let nodes arr\n  \n  while gt children.length 1\n   let tr children.item 1\n   \n   dom_remove tr\n   push nodes tr\n  end\n  \n  let compare partial compare_node index\n  \n  sort nodes compare\n  \n  if same sorting.order \"descending\"\n   reverse nodes\n  elseif same sorting.order \"ascending\"\n  else\n   stop\n  \n  forof nodes\n   dom_push table v\n  end\n\n  //dom_display grid.table \"block\"\n end\n  \n forin headers\n  let v get headers k\n  \n  dom_over v \"cursor\" \"pointer\"\n  assign v.onclick partial on_click k\n end \nend"},"grid-push":{"id":"grid-push","name":"grid-push","branch":"lib-gui","path":"lib-gui/grid-push.cs","sloc":102,"content":"fn grid_push x\n check is_obj x\n \n let grid x\n \n fn on_tr_enter x\n  check is_obj x\n  \n  forin x\n   let v get x k\n   let td dom_parent v\n   \n   dom_color_background td \"whitesmoke\"\n  end\n end\n \n fn on_tr_leave x\n  check is_obj x\n\n  forin x\n   let v get x k\n   let td dom_parent v   \n   \n   dom_style_remove td \"background-color\"\n  end\n end\n \n fn on_div_enter x\n  check is_obj x\n  \n  if not is_null grid.tooltip\n   dom_remove grid.tooltip\n\n  var html x.on_tooltip\n  \n  if is_null x.on_tooltip\n   if dom_overflown x\n    assign html dom_html x\n   else\n    ret\n  elseif is_fn html\n   assign html html x\n  \n  if is_empty html\n   ret\n\n  assign grid.tooltip dom_div null\n\n  let tooltip grid.tooltip\n  let td dom_parent x\n  \n  dom_html tooltip html\n  dom_unshift td tooltip\n  dom_padding tooltip padding\n  dom_shadow tooltip shadow\n  \n  let div front tooltip.children\n\n  dom_position tooltip \"absolute\"\n  dom_color_background tooltip \"white\"\n  dom_border tooltip border\n  \n  let vgap call dom_line_height  \n  let vgap mul vgap 5\n  \n  let tweak from_vw \"1.3vw\"\n    \n  let rect dom_rect td\n  \n  let x add rect.x scrollX  \n  let y add rect.y scrollY vgap\n  \n  let width tooltip.offsetWidth\n  let height tooltip.offsetHeight\n\n  let window_width call dom_window_width\n  let window_height call dom_window_height\n  \n  var x x\n  var y y\n  \n  let right add x width\n  let bottom add y height\n\n  let scroll_right add scrollX window_width\n  let scroll_right sub scroll_right tweak\n  let scroll_bottom add scrollY window_height\n  let scroll_bottom sub scroll_bottom tweak\n  \n  if gt right scroll_right\n   assign x sub scroll_right width\n   \n   if lt x 0\n    assign x 0\n  end\n\n  if gt bottom scroll_bottom\n   assign y sub scroll_bottom height\n   \n   if lt y 0\n    assign y 0\n  end\n  \n  if lt x scrollX\n   assign x scrollX\n  \n  if lt y scrollY\n   assign y scrollY\n  \n  let x to_vw x\n  let y to_vw y\n  \n  dom_left tooltip x\n  dom_top tooltip y\n  \n  assign tooltip.onmouseleave on_tooltip_leave\n end\n\n fn on_tooltip_leave x\n  check is_obj x\n  \n  dom_remove grid.tooltip\n  \n  assign grid.tooltip null\n end\n \n let r obj\n let tr dom_tr x.table\n \n assign tr.onmouseenter partial on_tr_enter r\n assign tr.onmouseleave partial on_tr_leave r\n\n forof x.columns\n  let td dom_td tr\n  let div dom_div td\n\n  dom_padding td padding\n  dom_border td border\n\n  assign div.onmouseenter partial on_div_enter div\n  assign div.on_tooltip null\n  \n  put r v div\n end\n \n ret r\nend"},"grid-valign":{"id":"grid-valign","name":"grid-valign","branch":"lib-gui","path":"lib-gui/grid-valign.cs","sloc":23,"content":"fn grid_valign x y:spread\n check is_obj x\n \n if same y.length 1\n  let y_ front y\n  let y y_\n  \n  check is_str y\n  \n  forof x.columns\n   grid_valign x v y\n  end\n elseif same y.length 2\n  let y_ at y 0\n  let z at y 1\n  let y y_\n  \n  check is_cool y\n  check is_str z\n \n  let n grid_index x y\n\n  forof x.table.children\n   let td at v.children n\n   \n   dom_valign td z\n  end\n else\n  stop\nend"},"group-line":{"id":"group-line","name":"group-line","branch":"spa-mabynogy","path":"spa-mabynogy/src/group-line.cs","sloc":18,"content":"fn group_line x\n check is_arr x\n \n let r arr\n let a dup x\n let line arr\n \n while is_full a\n  let s shift a\n  \n  if same s \"\\n\"\n   let a dup line\n   \n   push r a\n   clear line\n  else\n   push line s\n end\n \n if is_full line\n  push r line\n \n ret r\nend"},"gt":{"id":"gt","name":"gt","branch":"prg-compile","path":"prg-compile/level-a/gt.js","sloc":7,"content":"function gt(x,y)\n{\n check(is_def,x)\n check(is_def,y)\n \n const n=compare(x,y)\n \n return n>0\n}"},"gte":{"id":"gte","name":"gte","branch":"prg-compile","path":"prg-compile/level-a/gte.js","sloc":7,"content":"function gte(x,y)\n{\n check(is_def,x)\n check(is_def,y)\n \n const n=compare(x,y)\n \n return n>=0\n}"},"has":{"id":"has","name":"has","branch":"prg-compile","path":"prg-compile/level-b/has.js","sloc":6,"content":"function has(x,y)\n{\n check(is_def,x)\n check(is_str,y)\n \n return y in x\n}"},"head":{"id":"head","name":"head","branch":"prg-compile","path":"prg-compile/level-a/head.js","sloc":12,"content":"function head(x,y)\n{\n check(is_vec,x)\n check(is_uint,y)\n \n if(lte(x.length,y))\n {\n  if(is_arr(x))\n   return dup(x)\n   \n  return x\n }\n \n return slice_l(x,y)\n}"},"html-add":{"id":"html-add","name":"html-add","branch":"prg-compile","path":"prg-compile/level-b/html/html-add.js","sloc":7,"content":"function html_add(x,y)\n{\n check(is_obj,x)\n check(is_obj,y)\n \n const o=clone(y)\n \n push(x.children,o)\n}"},"html-attribute":{"id":"html-attribute","name":"html-attribute","branch":"prg-compile","path":"prg-compile/level-b/html/html-attribute.js","sloc":10,"content":"function html_attribute(x,y,z)\n{\n check(is_obj,x)\n check(is_str,y)\n \n const attributes=x.attributes\n \n if(is_undef(z))\n  return get(attributes,y)\n\n check(is_str,z)\n \n set(attributes,y,z)\n}"},"html-init":{"id":"html-init","name":"html-init","branch":"prg-compile","path":"prg-compile/level-b/html/html-init.js","sloc":11,"content":"function html_init(x)\n{\n check(is_str,x)\n check(is_str,x)\n \n const tag=x\n const attributes=obj()\n const styles=obj()\n const children=arr()\n const text=\"\"\n \n return {tag,attributes,styles,children,text}\n}"},"html-render":{"id":"html-render","name":"html-render","branch":"prg-compile","path":"prg-compile/level-b/html/html-render.js","sloc":67,"content":"function html_render(x)\n{\n check(is_obj,x)\n\n function encode_entities(x)\n {\n  check(is_str,x)\n\n  let r=x\n  \n  r=replace(r,\"<\",\"\\u003c\")\n  r=replace(r,\">\",\"\\u003e\")\n  \n  return r\n }\n \n function is_short(x)\n {\n  if(!is_obj(x))\n   return false\n   \n  if(same(x.tag,\"meta\"))\n   return true\n  \n  return false\n }\n \n const tag=x.tag\n const attributes=clone(x.attributes)\n const styles=x.styles\n const children=x.children\n const text=encode_entities(x.text)\n const pattributes=arr()\n const pstyles=arr()\n \n for(const k in styles)\n {\n  const v=get(styles,k)\n  const s=to_str(v)\n  const pair=concat(k,\":\",s)\n  \n  push(pstyles,pair)\n }\n \n if(is_full(pstyles))\n  attributes.style=join(pstyles,\";\")\n \n for(const k in attributes)\n {\n  const v=get(attributes,k)\n  const s=to_lit(v)\n  const pair=concat(k,\"=\",s)\n  \n  push(pattributes,pair)\n }\n\n let open=pattributes\n \n open=join(open,\" \")\n open=concat(tag,\" \",open)\n open=trim_r(open)\n open=angle(open)\n \n if(is_short(x))\n {\n  check(is_empty,text)\n  check(is_empty,children)\n  \n  return open\n }\n \n let close=tag\n \n close=concat(\"/\",close)\n close=angle(close)\n \n let inner=children\n \n inner=map(inner,html_render)\n inner=implode(inner)\n \n const r=concat(open,inner,text,close)\n \n if(same(tag,\"html\"))\n {\n  const doctype=\"<!doctype html>\"\n  \n  return concat(doctype,r)\n }\n \n return r\n}"},"html-reset":{"id":"html-reset","name":"html-reset","branch":"prg-compile","path":"prg-compile/level-b/html/html-reset.js","sloc":8,"content":"function html_reset(x)\n{\n check(is_obj,x)\n \n x.attributes=obj()\n x.styles=obj()\n x.children=arr()\n x.text=\"\"\n}"},"html-special-chars":{"id":"html-special-chars","name":"html-special-chars","branch":"lib-gui","path":"lib-gui/html-special-chars.cs","sloc":10,"content":"fn html_special_chars x\n check is_str x\n \n let r x\n let r replace r \"&amp;\" \"&\"\n let r replace r \"&quot;\" \"\\\"\"\n let r replace r \"&apos;\" \"'\"\n let r replace r \"&lt;\" \"<\"\n let r replace r \"&gt;\" \">\"\n \n ret r\nend"},"html-style":{"id":"html-style","name":"html-style","branch":"prg-compile","path":"prg-compile/level-b/html/html-style.js","sloc":10,"content":"function html_style(x,y,z)\n{\n check(is_obj,x)\n check(is_str,y)\n \n const styles=x.styles\n \n if(is_undef(z))\n  return get(styles,y)\n\n check(is_str,z)\n \n set(styles,y,z)\n}"},"html-text":{"id":"html-text","name":"html-text","branch":"prg-compile","path":"prg-compile/level-b/html/html-text.js","sloc":8,"content":"function html_text(x,y)\n{\n check(is_obj,x)\n \n if(is_undef(y))\n  return x.text\n \n check(is_str,y)\n\n x.text=y\n}"},"iif":{"id":"iif","name":"iif","branch":"prg-compile","path":"prg-compile/level-c/iif.cs","sloc":8,"content":"fn iif x y z\n check is_bool x\n check is_def y\n check is_def z\n \n if x\n  ret y\n \n ret z\nend"},"implode":{"id":"implode","name":"implode","branch":"prg-compile","path":"prg-compile/level-a/implode.js","sloc":5,"content":"function implode(x)\n{\n check(is_arr,x)\n \n return join(x,\"\")\n}"},"inc":{"id":"inc","name":"inc","branch":"prg-compile","path":"prg-compile/level-b/inc.js","sloc":5,"content":"function inc(x)\n{\n check(is_num,x)\n \n return add(x,1)\n}"},"indent":{"id":"indent","name":"indent","branch":"prg-compile","path":"prg-compile/level-b/indent.js","sloc":17,"content":"function indent(x)\n{\n check(is_str,x)\n \n const a=arr()\n \n for(const v of split(x))\n {\n  let s=trim_r(v)\n  \n  if(is_empty(s))\n   push(a,s)\n  else\n  {\n   s=concat(\" \",s)\n   \n   push(a,s)\n  }\n }\n \n return join(a)\n}"},"init":{"id":"init","name":"init","branch":"prg-compile","path":"prg-compile/level-a/init.js","sloc":39,"content":"function init()\n{\n let platform=null\n let scope=null\n \n try\n {\n  scope=global\n }\n catch\n {\n }\n \n if(is_null(scope))\n {\n  platform=\"browser\"\n  \n  scope=window\n  scope.global=window\n }\n else\n  platform=\"node\"\n  \n global.alive=true\n global.platform=platform\n global.startup=time_get() \n global.puncts=\"!\\\"#$%&'()*+,-./:;<=>?@[\\\\]^_`{|}~\"\n\n const parameters=arr()\n \n if(is_node())\n {\n  global.cp=require(\"child_process\")\n  global.fs=require(\"fs\")\n  global.os=require(\"os\")\n  global.path=require(\"path\")\n  global.util=require(\"util\")\n  \n  global.terminal_width=process.stdout.columns\n  \n  const a=argv_arguments()\n  \n  append(parameters,a)\n }\n\n if(is_undef(global.terminal_width))\n  global.terminal_width=144\n  \n gn_run(init_platform,nop,...parameters)\n}"},"init-browser":{"id":"init-browser","name":"init-browser","branch":"prg-compile","path":"prg-compile/level-b/init-browser.js","sloc":109,"content":"function* init_browser()\n{\n let ready=false\n \n function* script_decompile(x)\n {\n  check(is_obj,x)\n  \n  for(const k in x)\n  {\n   const v=get(x,k)\n\n   yield* script_define(k,v)\n  }\n }\n \n function get_urls(x)\n {\n  check(is_str,x)\n  \n  const r=arr()\n  \n  for(const v of dbg_backtrace())\n  {\n   const url=v.url\n   \n   if(same(x,url))\n    continue\n   \n   if(contain(r,url))\n    continue\n    \n   push(r,url)\n  }\n  \n  return r\n }\n\n function on_ready_state_change()\n {\n  if(same(document.readyState,\"complete\"))\n   ready=true\n }\n \n function on_browser_error(x,y,z,a,b)\n {\n  check(is_str,x)\n  check(is_obj,b)\n  \n  on_browser_report(b)\n  \n  window.onerror=null\n  \n  return true\n }\n\n function on_browser_reject(x)\n {\n  check(is_obj,x)\n  \n  const error=new Error(\"reject\")\n  \n  on_browser_report(error,x.reason)\n  \n  window.onunhandledrejection=null\n  \n  return true\n }\n\n function on_browser_report(x,y)\n {\n  check(is_obj,x)\n  \n  if(is_undef(y))\n  {\n   const o=obj()\n   \n   return on_browser_report(x,o)\n  }\n   \n  check(is_obj,y)\n\n  const error=x\n  const reason=y\n  const message=error.message\n  const agent=get_user_agent()\n  const url=to_str(location)\n  const origin1=dbg_origin(error)\n  const origin=tbl_render(origin1)\n  const stack1=dbg_callstack(error)\n  \n  tbl_align_r(stack1,\"fn\")\n  \n  const stack=tbl_render(stack1)\n  const definition=concat(screen.width,\"x\",screen.height)  \n  const signature=navigator.userAgent\n  const raw_stack=trim_r(error.stack)\n  const compile=time_hn(compile_time)\n  const context={error,reason,message,agent,url,origin,stack,definition,signature,raw_stack,compile}\n    \n  gn_run(error_process,on_die,context)\n }\n\n function on_decompile_end()\n {\n  global.decompiler=null\n }\n \n function on_die()\n {\n  global.alive=false\n }\n \n document.onreadystatechange=on_ready_state_change\n \n while(!ready)\n {\n  yield\n }\n\n const device=get_device()\n \n if(same(device,\"mobile\")) \n  global.mobile=true\n else\n  global.mobile=false\n \n global.body=document.body  \n global.spacing=from_mw(\"0.9mw\")\n\n const dom=document.scripts.item(0)\n const url=to_str(location)\n const content=dom_html(dom)\n const urls=get_urls(url)\n const sources=obj()\n \n put(sources,url,content)\n \n for(const v of urls)\n {\n  const s=yield* fetch_url(v)\n  \n  put(sources,v,s)\n }\n \n decompiler=gn_run(script_decompile,on_decompile_end,sources)\n \n window.onerror=on_browser_error\n window.onunhandledrejection=on_browser_reject\n}"},"init-node":{"id":"init-node","name":"init-node","branch":"prg-compile","path":"prg-compile/level-b/init-node.js","sloc":42,"content":"function init_node()\n{\n function on_node_error(x,y)\n {\n  check(is_obj,x)\n  check(is_str,y)\n  \n  on_node_report(x,y)\n }\n\n function on_node_reject(x,y)\n {\n  check(is_obj,x)\n  check(is_def,y)\n  \n  log(\"promise\",y)\n  \n  on_node_report(x,\"reject\")\n }\n\n function on_node_report(x,y)\n {\n  check(is_obj,x)\n  check(is_str,y)\n  \n  const error=x\n  const kind=to_lit(y)\n  const message=to_lit(error.message)\n  \n  log(\"kind\",kind)\n  log(\"message\",message)\n  \n  dbg_log(error)\n  \n  on_die()\n  \n  process.exit(2)\n }\n\n function on_decompile_end()\n {\n  global.decompiler=null\n }\n \n function on_die()\n {\n  global.alive=false\n }\n\n const script=argv_script() \n const code=file_read(script)\n \n decompiler=gn_run(script_define,on_decompile_end,script,code)\n\n process.on(\"uncaughtExceptionMonitor\",on_node_error)\n process.on(\"unhandledRejection\",on_node_reject)\n}"},"init-platform":{"id":"init-platform","name":"init-platform","branch":"prg-compile","path":"prg-compile/level-b/init-platform.js","sloc":21,"content":"function* init_platform(...x)\n{\n global.nbsp=chr(160)\n global.scripts=obj()\n global.decompiler=null\n \n if(is_node())\n  init_node()\n else if(is_browser())\n  yield* init_browser()\n else\n  stop()\n\n if(is_fn(main))\n {\n  main(...x)\n  decompile_stop()\n }\n else if(is_gn(main))\n  yield* main(...x)\n else\n  stop()\n}"},"insert":{"id":"insert","name":"insert","branch":"prg-compile","path":"prg-compile/level-b/insert.js","sloc":9,"content":"function insert(x,y,z)\n{\n check(is_arr,x)\n check(is_uint,y)\n check(is_def,z)\n check(lte,y,x.length)\n\n const n=inc(y)\n\n x.splice(n,0,z)\n}"},"inspect":{"id":"inspect","name":"inspect","branch":"prg-compile","path":"prg-compile/level-a/inspect.js","sloc":10,"content":"function inspect(x)\n{\n const depth=null\n const colors=true\n const maxArrayLength=null\n const maxStringLength=null\n const option={depth,colors,maxArrayLength,maxStringLength}\n const s=util.inspect(x,option)\n \n log(s)\n}"},"ip-domain":{"id":"ip-domain","name":"ip-domain","branch":"lib-cli","path":"lib-cli/src/ip-domain.cs","sloc":19,"content":"fn ip_domain x\n check is_str x\n \n let timeout 2\n let parameters arr \"host\" \"-W\" timeout\n\n if is_ip4 x\n  push parameters \"-4\"\n elseif is_ip6 x\n  push parameters \"-6\"\n else\n  stop\n  \n push parameters x\n   \n let r os_execute parameters:spread\n let r strip_r r \".\"\n let a split r \" \"\n let r back r\n \n if not is_domain r\n  ret null\n \n ret r\nend"},"ip-host":{"id":"ip-host","name":"ip-host","branch":"lib-cli","path":"lib-cli/src/ip-host.cs","sloc":21,"content":"fn ip_host x\n if is_undef x\n  ret call os.hostname\n  \n check is_str x\n \n let domain ip_domain x\n \n if is_str domain\n  ret domain\n  \n let ips call ip_list\n \n forin ips\n  let i to_i k\n  let v at ips i\n  \n  if same x v\n   let host call ip_host\n   let letter asc \"a\"\n   let letter add letter i\n   let letter chr letter\n   \n   ret concat host \"-\" letter\n  end\n end\n \n ret x\nend"},"ip-list":{"id":"ip-list","name":"ip-list","branch":"lib-cli","path":"lib-cli/src/ip-list.cs","sloc":4,"content":"fn ip_list\n let s os_execute \"hostname\" \"--all-ip-addresses\"\n \n ret split s \" \"\nend"},"is-access":{"id":"is-access","name":"is-access","branch":"prg-compile","path":"prg-compile/level-b/is-access.js","sloc":11,"content":"function is_access(x)\n{\n if(!is_str(x))\n  return false\n  \n if(is_empty(x))\n  return false\n  \n const a=split(x,\".\")\n \n if(is_single(a))\n  return false\n \n return every(a,is_identifier)\n}"},"is-alnum":{"id":"is-alnum","name":"is-alnum","branch":"prg-compile","path":"prg-compile/level-a/is-alnum.js","sloc":19,"content":"function is_alnum(x)\n{\n if(!is_str(x))\n  return false\n \n if(is_empty(x))\n  return false\n \n for(const v of x)\n {\n  if(same(v,\"_\"))\n   ;\n  else if(is_alpha(v))\n   ;\n  else if(is_digit(v))\n   ;\n  else\n   return false\n }\n \n return true\n}"},"is-alpha":{"id":"is-alpha","name":"is-alpha","branch":"prg-compile","path":"prg-compile/level-a/is-alpha.js","sloc":19,"content":"function is_alpha(x)\n{\n if(!is_str(x))\n  return false\n \n if(is_empty(x))\n  return false\n \n const low=\"abcdefghijklmnopqrstuvwxyz\"\n const high=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n  \n for(const v of x)\n {\n  if(contain(low,v))\n   ;\n  else if(contain(high,v))\n   ;\n  else\n   return false\n }\n \n return true\n}"},"is-arr":{"id":"is-arr","name":"is-arr","branch":"prg-compile","path":"prg-compile/level-a/is-arr.js","sloc":4,"content":"function is_arr(x)\n{\n return Array.isArray(x)\n}"},"is-bool":{"id":"is-bool","name":"is-bool","branch":"prg-compile","path":"prg-compile/level-a/is-bool.js","sloc":5,"content":"function is_bool(x)\n{\n const s=typeof(x)\n \n return same(s,\"boolean\")\n}"},"is-browser":{"id":"is-browser","name":"is-browser","branch":"prg-compile","path":"prg-compile/level-a/is-browser.js","sloc":4,"content":"function is_browser(x)\n{\n return same(platform,\"browser\")\n}"},"is-cell-image":{"id":"is-cell-image","name":"is-cell-image","branch":"spa-coglab","path":"spa-coglab/src/is-cell-image.cs","sloc":7,"content":"fn is_cell_image x\n let cell cell_init x\n \n if not is_obj cell\n  ret false\n \n let a dom_by_tag cell \"img\"\n \n ret is_full a\nend"},"is-char":{"id":"is-char","name":"is-char","branch":"prg-compile","path":"prg-compile/level-c/is-char.cs","sloc":5,"content":"fn is_char x\n if not is_str x\n  ret false\n\n ret is_single x\nend"},"is-comment":{"id":"is-comment","name":"is-comment","branch":"prg-compile","path":"prg-compile/level-b/is-comment.js","sloc":9,"content":"function is_comment(x)\n{\n if(!is_str(x))\n  return false\n\n if(!is_ln(x))\n  return false\n\n const comment=repeat(\"/\",2)\n \n return match_l(x,comment)\n}"},"is-composite":{"id":"is-composite","name":"is-composite","branch":"prg-compile","path":"prg-compile/level-b/is-composite.js","sloc":10,"content":"function is_composite(x)\n{\n if(is_str(x))\n  return true\n \n if(is_arr(x))\n  return true\n \n if(is_obj(x))\n  return true\n  \n return false\n}"},"is-container":{"id":"is-container","name":"is-container","branch":"prg-compile","path":"prg-compile/level-b/is-container.js","sloc":8,"content":"function is_container(x)\n{\n if(is_arr(x))\n  return true\n \n if(is_obj(x))\n  return true\n  \n return false\n}"},"is-cool":{"id":"is-cool","name":"is-cool","branch":"prg-compile","path":"prg-compile/level-b/is-cool.js","sloc":8,"content":"function is_cool(x)\n{\n if(is_num(x))\n  return true\n  \n if(is_str(x))\n  return true\n\n return false\n}"},"is-cs":{"id":"is-cs","name":"is-cs","branch":"prg-compile","path":"prg-compile/src/is/is-cs.js","sloc":4,"content":"function is_cs()\n{\n return same(target,\"cs\")\n}"},"is-cu":{"id":"is-cu","name":"is-cu","branch":"prg-compile","path":"prg-compile/src/is/is-cu.js","sloc":4,"content":"function is_cu()\n{\n return same(target,\"cu\")\n}"},"is-date":{"id":"is-date","name":"is-date","branch":"prg-compile","path":"prg-compile/level-c/is-date.cs","sloc":6,"content":"fn is_date x\n if not is_str x\n  ret false\n\n let n time_parse x  \n\n ret is_num n\nend"},"is-def":{"id":"is-def","name":"is-def","branch":"prg-compile","path":"prg-compile/level-a/is-def.js","sloc":4,"content":"function is_def(x)\n{\n return !is_undef(x)\n}"},"is-digit":{"id":"is-digit","name":"is-digit","branch":"prg-compile","path":"prg-compile/level-a/is-digit.js","sloc":16,"content":"function is_digit(x)\n{\n if(!is_str(x))\n  return false\n \n if(is_empty(x))\n  return false\n \n const s=\"0123456789\"\n \n for(const v of x)\n {\n  if(contain(s,v))\n   ;\n  else\n   return false\n }\n \n return true\n}"},"is-dir":{"id":"is-dir","name":"is-dir","branch":"prg-compile","path":"prg-compile/level-a/is-dir.js","sloc":18,"content":"function is_dir(x)\n{\n if(!is_str(x))\n  return false\n  \n const throwIfNoEntry=false\n const option={throwIfNoEntry}\n let o\n \n try\n {\n  o=fs.lstatSync(x,option)\n }\n catch\n {\n }\n \n if(is_undef(o))\n  return false\n \n return o.isDirectory()\n}"},"is-domain":{"id":"is-domain","name":"is-domain","branch":"prg-compile","path":"prg-compile/level-c/is-domain.cs","sloc":15,"content":"fn is_domain x\n if not is_str x\n  ret false\n \n let a split x \".\"\n \n if is_single a\n  ret false\n  \n forof a\n  if is_lisp v\n   cont\n  \n  if is_alnum v\n   cont\n   \n  ret false\n end\n  \n ret true\nend"},"is-dot-file":{"id":"is-dot-file","name":"is-dot-file","branch":"prg-compile","path":"prg-compile/level-b/is-dot-file.js","sloc":7,"content":"function is_dot_file(x)\n{\n if(!is_str(x))\n  return false\n  \n const base=path_base(x)\n \n return match_l(base,\".\")\n}"},"is-empty":{"id":"is-empty","name":"is-empty","branch":"prg-compile","path":"prg-compile/level-a/is-empty.js","sloc":14,"content":"function is_empty(x)\n{\n if(is_vec(x))\n  return same(x.length,0)\n \n if(is_obj(x))\n {\n  for(const v in x)\n  {\n   return false\n  }\n  \n  return true\n }\n \n return false\n}"},"is-false":{"id":"is-false","name":"is-false","branch":"prg-compile","path":"prg-compile/level-a/is-false.js","sloc":4,"content":"function is_false(x)\n{\n return same(x,false)\n}"},"is-file":{"id":"is-file","name":"is-file","branch":"prg-compile","path":"prg-compile/level-a/is-file.js","sloc":18,"content":"function is_file(x)\n{\n if(!is_str(x))\n  return false\n  \n const throwIfNoEntry=false\n const option={throwIfNoEntry}\n let o\n \n try\n {\n  o=fs.lstatSync(x,option)\n }\n catch\n {\n }\n \n if(is_undef(o))\n  return false\n \n return o.isFile()\n}"},"is-fn":{"id":"is-fn","name":"is-fn","branch":"prg-compile","path":"prg-compile/level-a/is-fn.js","sloc":9,"content":"function is_fn(x)\n{\n const s=typeof x\n\n if(different(s,\"function\"))\n  return false\n  \n if(is_gn(x))\n  return false\n  \n return true\n}"},"is-fragment":{"id":"is-fragment","name":"is-fragment","branch":"prg-compile","path":"prg-compile/level-b/is-fragment.js","sloc":8,"content":"function is_fragment(x)\n{\n if(is_alnum(x))\n  return true\n\n if(is_space(x))\n  return true\n  \n return false\n}"},"is-fs":{"id":"is-fs","name":"is-fs","branch":"prg-compile","path":"prg-compile/level-a/is-fs.js","sloc":8,"content":"function is_fs(x)\n{\n if(is_file(x))\n  return true\n \n if(is_dir(x))\n  return true\n\n return false\n}"},"is-full":{"id":"is-full","name":"is-full","branch":"prg-compile","path":"prg-compile/level-a/is-full.js","sloc":4,"content":"function is_full(x)\n{\n return !is_empty(x)\n}"},"is-gn":{"id":"is-gn","name":"is-gn","branch":"prg-compile","path":"prg-compile/level-a/is-gn.js","sloc":11,"content":"function is_gn(x)\n{\n if(is_undef(x))\n  return false\n \n if(is_null(x))\n  return false\n  \n const constructor=x.constructor\n \n if(is_def(constructor))\n  return same(constructor.name,\"GeneratorFunction\")\n  \n return false\n}"},"is-identifier":{"id":"is-identifier","name":"is-identifier","branch":"prg-compile","path":"prg-compile/level-a/is-identifier.js","sloc":20,"content":"function is_identifier(x)\n{\n if(!is_str(x))\n  return false\n \n if(is_empty(x))\n  return false\n  \n const c=front(x)\n \n if(same(c,\"_\"))\n  ;\n else if(is_alpha(c))\n  ;\n else\n  return false\n  \n for(const v of x)\n {\n  if(!is_alnum(v))\n   return false\n }\n \n return true\n}"},"is-int":{"id":"is-int","name":"is-int","branch":"prg-compile","path":"prg-compile/level-a/is-int.js","sloc":4,"content":"function is_int(x)\n{\n return Number.isInteger(x)\n}"},"is-ip":{"id":"is-ip","name":"is-ip","branch":"lib-cli","path":"lib-cli/src/is-ip.cs","sloc":7,"content":"fn is_ip x\n if is_ip4 x\n  ret true\n  \n if is_ip6 x\n  ret true\n  \n ret false\nend"},"is-ip4":{"id":"is-ip4","name":"is-ip4","branch":"lib-cli","path":"lib-cli/src/is-ip4.cs","sloc":15,"content":"fn is_ip4 x\n if not is_str x\n  ret false\n  \n let a split x \".\"\n \n if different a.length 4\n  ret false\n  \n forof a\n  if not is_digit v\n   ret false\n   \n  let n to_uint v\n\n  if gt n 255\n   ret false\n end\n\n ret true \nend"},"is-ip6":{"id":"is-ip6","name":"is-ip6","branch":"lib-cli","path":"lib-cli/src/is-ip6.cs","sloc":20,"content":"fn is_ip6 x\n if not is_str x\n  ret false\n  \n let a split x \":\"\n \n if lt a.length 3\n  ret false\n\n if gt a.length 8\n  ret false\n  \n forof a\n  if is_empty v\n   cont\n   \n  if not is_alnum v\n   ret false\n   \n  if contain v \"_\"\n   ret false\n   \n  if gt v.length 4\n   ret false\n end\n\n ret true \nend"},"is-json":{"id":"is-json","name":"is-json","branch":"prg-compile","path":"prg-compile/level-c/is-json.cs","sloc":10,"content":"fn is_json x\n if not is_str x\n  ret false\n \n try\n  from_json x\n catch\n  ret false\n end\n \n ret true\nend"},"is-lisp":{"id":"is-lisp","name":"is-lisp","branch":"prg-compile","path":"prg-compile/level-c/is-lisp.cs","sloc":14,"content":"fn is_lisp x\n if not is_str x\n  ret false\n \n if is_empty x\n  ret false\n  \n let a split x \"-\"\n \n if is_single a\n  ret false\n  \n forof a\n  if not is_alnum v\n   ret false\n end\n \n ret true\nend"},"is-lit":{"id":"is-lit","name":"is-lit","branch":"prg-compile","path":"prg-compile/level-b/is-lit.js","sloc":19,"content":"function is_lit(x)\n{\n if(!is_str(x))\n  return false\n\n if(is_empty(x))\n  return false\n\n const s=trim(x)\n\n if(different(s,x))\n  return false\n    \n let v=null\n \n try\n {\n  v=from_json(s)\n }\n catch\n {\n }\n \n return is_str(v)\n}"},"is-ln":{"id":"is-ln","name":"is-ln","branch":"prg-compile","path":"prg-compile/level-b/is-ln.js","sloc":6,"content":"function is_ln(x)\n{\n if(!is_str(x))\n  return false\n\n return !is_txt(x)  \n}"},"is-lower":{"id":"is-lower","name":"is-lower","branch":"prg-compile","path":"prg-compile/level-c/is-lower.cs","sloc":8,"content":"fn is_lower x\n if not is_str x\n  ret false\n\n if is_empty x\n  ret false\n  \n let s to_lower x\n \n ret same s x\nend"},"is-mail":{"id":"is-mail","name":"is-mail","branch":"prg-compile","path":"prg-compile/level-c/is-mail.cs","sloc":25,"content":"fn is_mail x\n fn is_component x\n  if not is_str x\n   ret false\n  \n  if is_empty x\n   ret false\n   \n  forof delimit x \".\"\n   if is_alnum v\n   elseif is_lisp v\n   else\n    ret false\n  end\n  \n  ret true\n end\n \n if not is_str x\n  ret false\n    \n let a split x \"@\"\n \n if different a.length 2\n  ret false\n  \n forof a\n  if not is_component v\n   ret false\n end\n \n ret true\nend"},"is-many":{"id":"is-many","name":"is-many","branch":"prg-compile","path":"prg-compile/level-b/is-many.js","sloc":6,"content":"function is_many(x)\n{\n if(!is_vec(x))\n  return false\n  \n return gt(x.length,1)\n}"},"is-name":{"id":"is-name","name":"is-name","branch":"prg-compile","path":"prg-compile/level-b/is-name.js","sloc":8,"content":"function is_name(x)\n{\n if(is_identifier(x))\n  return true\n  \n if(is_access(x))\n  return true\n \n return false\n}"},"is-node":{"id":"is-node","name":"is-node","branch":"prg-compile","path":"prg-compile/level-a/is-node.js","sloc":4,"content":"function is_node(x)\n{\n return same(platform,\"node\")\n}"},"is-null":{"id":"is-null","name":"is-null","branch":"prg-compile","path":"prg-compile/level-a/is-null.js","sloc":4,"content":"function is_null(x)\n{\n return same(x,null)\n}"},"is-nullable":{"id":"is-nullable","name":"is-nullable","branch":"prg-compile","path":"prg-compile/level-c/is-nullable.cs","sloc":7,"content":"fn is_nullable x\n if is_null x\n  ret true\n \n if is_obj x\n  ret true\n \n ret false\nend"},"is-num":{"id":"is-num","name":"is-num","branch":"prg-compile","path":"prg-compile/level-a/is-num.js","sloc":11,"content":"function is_num(x)\n{\n const s=typeof(x)\n \n if(different(s,\"number\"))\n  return false  \n \n if(Number.isNaN(x))\n  return false\n \n if(!Number.isFinite(x))\n  return false\n\n return true\n}"},"is-numeric":{"id":"is-numeric","name":"is-numeric","branch":"prg-compile","path":"prg-compile/level-b/is-numeric.js","sloc":19,"content":"function is_numeric(x)\n{\n if(!is_str(x))\n  return false\n  \n if(is_empty(x))\n  return false\n\n const s=trim(x)\n\n if(different(s,x))\n  return false\n  \n let v=null\n \n try\n {\n  v=from_json(s)\n }\n catch\n {\n }\n \n return is_num(v)\n}"},"is-obj":{"id":"is-obj","name":"is-obj","branch":"prg-compile","path":"prg-compile/level-a/is-obj.js","sloc":11,"content":"function is_obj(x)\n{\n const s=typeof(x)\n \n if(!same(s,\"object\"))\n  return false\n  \n if(is_null(x))\n  return false\n \n if(is_arr(x))\n  return false\n  \n return true\n}"},"is-pair":{"id":"is-pair","name":"is-pair","branch":"prg-compile","path":"prg-compile/level-b/is-pair.js","sloc":6,"content":"function is_pair(x)\n{\n if(!is_vec(x))\n  return false\n  \n return same(x.length,2)\n}"},"is-parened":{"id":"is-parened","name":"is-parened","branch":"prg-compile","path":"prg-compile/level-b/is-parened.js","sloc":10,"content":"function is_parened(x)\n{\n if(!is_str(x))\n  return false\n  \n if(!match_l(x,\"(\"))\n  return false\n\n if(!match_r(x,\")\"))\n  return false\n    \n return true\n}"},"is-punct":{"id":"is-punct","name":"is-punct","branch":"prg-compile","path":"prg-compile/level-b/is-punct.js","sloc":13,"content":"function is_punct(x)\n{\n if(!is_str(x))\n  return false\n  \n if(is_empty(x))\n  return false\n\n for(const v of x)\n {\n  if(!contain(puncts,v))\n   return false\n }\n \n return true  \n}"},"is-readable":{"id":"is-readable","name":"is-readable","branch":"prg-compile","path":"prg-compile/level-c/is-readable.cs","sloc":30,"content":"fn is_readable x\n if is_file x\n  var fd null\n\n  try\n   assign fd fs.openSync x\n  catch\n   ret false\n  end\n  \n  let n file_size x\n  \n  if gt n 0\n   let buffer Buffer.alloc 1\n   \n   try\n    fs.readSync fd buffer\n   catch\n    fs.closeSync fd\n    \n    ret false\n   end\n  end\n    \n  fs.closeSync fd\n  \n  ret true \n elseif is_dir x\n  try\n   fs.readdirSync x\n  catch\n   ret false\n  end\n  \n  ret true\n else\n  ret false\nend"},"is-rvalue":{"id":"is-rvalue","name":"is-rvalue","branch":"prg-compile","path":"prg-compile/level-c/is-rvalue.cs","sloc":13,"content":"fn is_rvalue x\n if is_identifier x\n  ret true\n\n if is_access x\n  ret true\n\n if is_tuple x\n  ret true\n\n if is_numeric x\n  ret true\n  \n if is_lit x\n  ret true\n\n ret false\nend"},"is-sensible":{"id":"is-sensible","name":"is-sensible","branch":"prg-deploy-doc","path":"prg-deploy-doc/src/is-sensible.cs","sloc":9,"content":"fn is_sensible x\n if not is_str x\n  ret false\n  \n if is_dot_file x\n  ret true\n\n if contain x \"credential\"\n  ret true\n  \n ret false\nend"},"is-single":{"id":"is-single","name":"is-single","branch":"prg-compile","path":"prg-compile/level-b/is-single.js","sloc":6,"content":"function is_single(x)\n{\n if(!is_vec(x))\n  return false\n  \n return same(x.length,1)\n}"},"is-snake":{"id":"is-snake","name":"is-snake","branch":"prg-compile","path":"prg-compile/level-c/is-snake.cs","sloc":11,"content":"fn is_snake x\n if not is_str x\n  ret false\n\n if is_empty x\n  ret false\n \n if is_lower x\n  ret false\n\n if is_upper x\n  ret false\n \n ret true\nend"},"is-space":{"id":"is-space","name":"is-space","branch":"prg-compile","path":"prg-compile/level-b/is-space.js","sloc":9,"content":"function is_space(x)\n{\n if(!is_str(x))\n  return false\n  \n if(is_empty(x))\n  return false\n  \n const s=trim(x)\n  \n return is_empty(s)\n}"},"is-str":{"id":"is-str","name":"is-str","branch":"prg-compile","path":"prg-compile/level-a/is-str.js","sloc":5,"content":"function is_str(x)\n{\n const s=typeof(x)\n \n return same(s,\"string\")\n}"},"is-token":{"id":"is-token","name":"is-token","branch":"prg-compile","path":"prg-compile/level-b/is-token.js","sloc":16,"content":"function is_token(x)\n{\n if(is_alnum(x))\n  return true\n\n if(is_access(x))\n  return true\n\n if(is_tuple(x))\n  return true\n\n if(is_numeric(x))\n  return true\n  \n if(is_lit(x))\n  return true\n\n if(is_comment(x))\n  return true\n\n return false\n}"},"is-trivia":{"id":"is-trivia","name":"is-trivia","branch":"prg-compile","path":"prg-compile/level-b/is-trivia.js","sloc":10,"content":"function is_trivia(x)\n{\n if(!is_str(x))\n  return false\n\n if(is_space(x))\n  return true\n\n if(is_comment(x))\n  return true\n \n return false\n}"},"is-true":{"id":"is-true","name":"is-true","branch":"prg-compile","path":"prg-compile/level-a/is-true.js","sloc":4,"content":"function is_true(x)\n{\n return same(x,true)\n}"},"is-tuple":{"id":"is-tuple","name":"is-tuple","branch":"prg-compile","path":"prg-compile/level-b/is-tuple.js","sloc":11,"content":"function is_tuple(x)\n{\n if(!is_str(x))\n  return false\n  \n if(is_empty(x))\n  return false\n  \n const a=split(x,\":\")\n \n if(is_single(a))\n  return false\n \n return every(a,is_identifier)\n}"},"is-txt":{"id":"is-txt","name":"is-txt","branch":"prg-compile","path":"prg-compile/level-b/is-txt.js","sloc":6,"content":"function is_txt(x)\n{\n if(!is_str(x))\n  return false\n  \n return contain(x,\"\\n\")\n}"},"is-uint":{"id":"is-uint","name":"is-uint","branch":"prg-compile","path":"prg-compile/level-a/is-uint.js","sloc":6,"content":"function is_uint(x)\n{\n if(!is_int(x))\n  return false\n  \n return gte(x,0)\n}"},"is-undef":{"id":"is-undef","name":"is-undef","branch":"prg-compile","path":"prg-compile/level-a/is-undef.js","sloc":4,"content":"function is_undef(x)\n{\n return same(x,undefined)\n}"},"is-upper":{"id":"is-upper","name":"is-upper","branch":"prg-compile","path":"prg-compile/level-c/is-upper.cs","sloc":8,"content":"fn is_upper x\n if not is_str x\n  ret false\n\n if is_empty x\n  ret false\n  \n let s to_upper x\n \n ret same s x\nend"},"is-url":{"id":"is-url","name":"is-url","branch":"prg-compile","path":"prg-compile/level-c/is-url.cs","sloc":9,"content":"fn is_url x\n if not is_str x\n  ret false\n  \n if match_l x \"http://\"\n  ret true\n\n if match_l x \"https://\"\n  ret true\n \n ret false\nend"},"is-vec":{"id":"is-vec","name":"is-vec","branch":"prg-compile","path":"prg-compile/level-a/is-vec.js","sloc":8,"content":"function is_vec(x)\n{\n if(is_str(x))\n  return true\n \n if(is_arr(x))\n  return true\n\n return false\n}"},"is-xn":{"id":"is-xn","name":"is-xn","branch":"prg-compile","path":"prg-compile/level-a/is-xn.js","sloc":8,"content":"function is_xn(x)\n{\n if(is_fn(x))\n  return true\n  \n if(is_gn(x))\n  return true\n  \n return false\n}"},"join":{"id":"join","name":"join","branch":"prg-compile","path":"prg-compile/level-a/join.js","sloc":8,"content":"function join(x,y)\n{\n check(is_arr,x)\n \n if(is_undef(y))\n  return join(x,\"\\n\")\n \n check(is_str,y)\n \n return x.join(y)\n}"},"log":{"id":"log","name":"log","branch":"prg-compile","path":"prg-compile/level-a/log.js","sloc":14,"content":"function log(...x)\n{\n if(is_node())\n {\n  if(every(x,is_str))\n  {\n   const s=join(x,\" \")\n   const t=txt_left(s,terminal_width)\n   \n   console.log(t)\n   \n   return\n  }\n }\n \n console.log(...x)\n}"},"login-init":{"id":"login-init","name":"login-init","branch":"spa-vps-admin","path":"spa-vps-admin/src/login-init.cs","sloc":5,"content":"fn login_init\n let mail storage_get \"mail\"\n let password storage_get \"password\"\n \n ret obj mail password\nend"},"login-reset":{"id":"login-reset","name":"login-reset","branch":"spa-vps-admin","path":"spa-vps-admin/src/login-reset.cs","sloc":4,"content":"fn login_reset\n storage_set \"mail\" \"\"\n storage_set \"password\" \"\"\nend"},"login-update":{"id":"login-update","name":"login-update","branch":"spa-vps-admin","path":"spa-vps-admin/src/login-update.cs","sloc":6,"content":"fn login_update x y\n check is_str x\n check is_str y\n\n storage_set \"mail\" x\n storage_set \"password\" y\nend"},"lt":{"id":"lt","name":"lt","branch":"prg-compile","path":"prg-compile/level-a/lt.js","sloc":7,"content":"function lt(x,y)\n{\n check(is_def,x)\n check(is_def,y)\n \n const n=compare(x,y)\n \n return n<0\n}"},"lte":{"id":"lte","name":"lte","branch":"prg-compile","path":"prg-compile/level-a/lte.js","sloc":7,"content":"function lte(x,y)\n{\n check(is_def,x)\n check(is_def,y)\n \n const n=compare(x,y)\n \n return n<=0\n}"},"main":{"id":"main","name":"main","branch":"prg-baserow-test","path":"prg-baserow-test/src/main.cs","sloc":6,"content":"gn main\n let baserow run baserow_init\n //let baserow run baserow_init \"contact@mabynogy.org\" \"xxx\" \"https://br.mabynogy.org\"\n \n let tables run baserow_tables baserow\n\n inspect tables\n\n log \"ok\"\nend"},"main-1":{"id":"main-1","name":"main","branch":"prg-change-mod","path":"prg-change-mod/src/main.cs","sloc":33,"content":"fn main x y:spread\n check is_str x\n \n fn is_executable x\n  if not is_file x\n   ret false\n   \n  let s file_read x\n  \n  if match_l s \"#!\"\n   ret true\n  \n  if match_l s \"ELF\"\n   ret true\n   \n  ret false\n end\n \n fn change_mod x\n  let s to_lit x\n\n  log \"dir\" s\n  \n  os_system \"sudo\" \"chmod\" \"777\" x\n\n  forof dir_read x is_fs\n   let s to_lit v\n   \n   if is_file v\n    os_system \"sudo\" \"chmod\" \"777\" v\n    \n    if is_executable v\n     log \"executable\" s\n    else\n     os_system \"sudo\" \"chmod\" \"-x\" v\n     \n     log \"file\" s\n    end    \n   elseif is_dir v\n    change_mod v\n   end\n  end\n end\n \n change_mod x\nend"},"main-10":{"id":"main-10","name":"main","branch":"prg-find","path":"prg-find/src/main.cs","sloc":21,"content":"fn main x y:spread\n check is_str x\n \n fn find x y\n  check is_str x\n  check is_str y\n  \n  if contain x y\n   let s to_lit x\n   \n   log \"match\" s\n  end\n  \n  if is_dir x\n   if is_readable x\n    forof dir_read x is_fs\n     find v y\n    end\n   end\n  end\n end\n\n forof dir_read \"/\" is_fs\n  find v x\n end\nend"},"main-11":{"id":"main-11","name":"main","branch":"prg-generate-key","path":"prg-generate-key/src/main.cs","sloc":19,"content":"fn main x y:spread\n if is_undef x\n  ret main 9 y:spread\n \n if is_str x\n  let n to_uint x\n  \n  ret main n y:spread\n end\n  \n let parts arr\n  \n while true\n  let n rand 36\n  let n to_base36 n\n  \n  check same n.length 1\n  \n  push parts n\n  \n  if gte parts.length x\n   brk\n end\n \n let parts implode parts\n \n log parts\nend"},"main-12":{"id":"main-12","name":"main","branch":"prg-grep","path":"prg-grep/src/main.cs","sloc":32,"content":"fn main x y:spread\n check is_str x\n\n fn grep x y\n  let s os_execute \"grep\" y x\n  \n  if is_empty s\n   ret\n\n  let sx to_lit x\n  \n  log \"match\" sx\n   \n  forof split s\n   let s to_lit s\n   \n   log \"\" s\n  end\n end\n \n fn find x y\n  check is_str x\n  check is_str y\n  \n  if is_file x\n   if is_readable x\n    grep x y\n   end\n  elseif is_dir x\n   if is_readable x\n    forof dir_read x is_fs\n     find v y\n    end\n   end\n  end\n end\n\n forof dir_read \"/\" is_fs\n  find v x\n end\nend"},"main-13":{"id":"main-13","name":"main","branch":"prg-httpd","path":"prg-httpd/src/main.cs","sloc":11,"content":"gn main x:spread\n if not contain x \"--open-port\"\n  let binary call argv_binary\n  let script call argv_script\n  let arguments call argv_arguments\n  \n  sudo \"setcap\" \"cap_net_bind_service=+ep\" binary\n  script_system script arguments:spread \"--open-port\"\n  \n  ret\n end\n \n log \"ok\"\n\n //let httpd call httpd_init\n \n //httpd_launch httpd \"listen\"\n \n //ret run httpd_schedule httpd\nend"},"main-14":{"id":"main-14","name":"main","branch":"prg-install","path":"prg-install/src/main.cs","sloc":49,"content":"fn main x:spread\n fn install\n  os_execute \"sudo\" \"rm\" \"/usr/bin/prg-*\"\n  \n  let a dir_read \"/home/mabynogy/place-hdd/room-prg\" is_dir\n  \n  var n 0\n  \n  forof a\n   let base path_base v\n\n   if not match_l base \"prg-\"\n    cont\n\n   let path path_concat v base\n   \n   if not is_file path\n    cont\n   \n   check is_file path\n   \n   let target path_concat \"/usr/bin\" base\n   \n   os_system \"sudo\" \"cp\" path target\n   \n   assign n inc n\n  end\n  \n  log \"prg\" n\n  \n  beep\n end\n \n fn load x\n  if is_undef x\n   ret load \"/home/mabynogy/place-hdd/room-prg\"\n  \n  check is_str x\n  \n  var r \"\"\n  \n  forof dir_read_rec x\n   let s file_read v\n   \n   assign r concat r v\n   assign r concat r s\n  end\n  \n  ret r\n end\n\n if not contain x \"--watch\"\n  install\n  \n  ret\n end\n\n var data \"\"\n \n while true\n  let v call load\n  \n  if same v data\n   sleep 1\n  else\n   install\n   \n   assign data v\n\n   let a split v\n   \n   log \"sloc\" a.length   \n  end\n end\nend"},"main-15":{"id":"main-15","name":"main","branch":"prg-ip-list","path":"prg-ip-list/src/main.cs","sloc":10,"content":"fn main x:spread\n let t call ip_list\n let t tbl_init t\n \n forof t\n  assign v.host ip_host v.value\n end\n \n let t tbl_render t\n let t txt_left t terminal_width\n\n log t\nend"},"main-16":{"id":"main-16","name":"main","branch":"prg-login-coglab","path":"prg-login-coglab/src/main.cs","sloc":4,"content":"fn main x:spread\n let env call coglab_init\n \n ssh env.login\nend"},"main-17":{"id":"main-17","name":"main","branch":"prg-login-vps","path":"prg-login-vps/src/main.cs","sloc":4,"content":"fn main x:spread\n let env call vps_init\n \n ssh env.login\nend"},"main-18":{"id":"main-18","name":"main","branch":"prg-measure","path":"prg-measure/src/main.cs","sloc":67,"content":"fn main \n fn push_result x y z a\n  check is_arr x\n  check is_str y\n  check is_num z\n  check is_str a\n  \n  let label y\n  let value concat z a\n  let o obj label value\n  \n  push x o  \n end\n \n fn has_one_month x\n  check is_uint x\n  \n  let now call time_get\n  let period sub now x\n  let month mul 30 24 60 60\n  \n  ret lte period month  \n end\n\n fn has_one_week x\n  check is_uint x\n  \n  let now call time_get\n  let period sub now x\n  let week mul 7 24 60 60\n  \n  ret lte period week  \n end\n \n let result arr\n \n let t call weight_load\n let n measure_average t \"weight\"\n let s tbl_with_order t\n let s tbl_render s\n \n push_result result \"weight-period\" n \"kg\"\n\n //log s  \n\n let t call weight_load\n let t tbl_filter t \"date\" has_one_month\n let n measure_average t \"weight\"\n let s tbl_with_order t\n let s tbl_render s\n\n push_result result \"weight-month\" n \"kg\"\n\n //log s  \n\n let t call weight_load\n let t tbl_filter t \"date\" has_one_week\n let n measure_average t \"weight\"\n let s tbl_with_order t\n let s tbl_render s\n\n push_result result \"weight-week\" n \"kg\"\n \n //log s\n\n let t call food_load\n let n measure_average t \"energy\"\n let s tbl_with_order t\n let s tbl_render s\n\n push_result result \"energy-period\" n \"kcal\"\n \n// log s  \n\n let t call food_load\n let t tbl_filter t \"date\" has_one_month\n \n if is_full t\n  let n measure_average t \"energy\"\n  let s tbl_with_order t\n  let s tbl_render s\n\n  push_result result \"energy-month\" n \"kcal\"\n end\n \n// log s  \n\n let t call food_load\n let t tbl_filter t \"date\" has_one_week\n \n if is_full t\n  let n measure_average t \"energy\"\n  let s tbl_with_order t\n  let s tbl_render s\n  \n  push_result result \"energy-week\" n \"kcal\"\n end\n\n //log s  \n\n let s tbl_render result\n \n log s\nend"},"main-19":{"id":"main-19","name":"main","branch":"prg-mount","path":"prg-mount/src/main.cs","sloc":16,"content":"fn main x:spread\n let vps call vps_init\n let coglab call coglab_init\n let envs arr\n \n push envs vps\n push envs coglab\n\n forof envs\n  let login v.login\n  let target concat login \":/home\"\n  let mnt v.mnt\n  let credential call env_credential\n \n  mnt_clean mnt\n  dir_make mnt\n  ssh_pass os_detach \"sshfs\" \"-o\" \"sshfs_debug\" target mnt\n end\nend"},"main-2":{"id":"main-2","name":"main","branch":"prg-compile","path":"prg-compile/src/main.js","sloc":77,"content":"let target=\"cs\"\n\nfunction main(...x)\n{\n const arguments=arr()\n \n let path=null\n let interpreter=\"node\"\n \n for(const v of x)\n {\n  if(same(v,\"--cu\"))\n  {\n   target=\"cu\"\n   interpreter=\"luajit\"\n  }\n  else if(same(v,\"--lua\"))\n   interpreter=\"lua\"\n  else if(is_null(path))\n   path=v\n  else\n   push(arguments,v)\n }\n \n path=path_real(path)\n \n const app=app_name()\n const name=path_name(path)\n const dir=path_dir(path)\n const option=obj()\n const compile_time1=time_get()\n const compile_time=trunc(compile_time1)\n  \n let nodes=path\n \n nodes=pass_parse(nodes)\n nodes=pass_shebang(nodes,option)\n nodes=pass_preprocess(nodes,dir)\n nodes=pass_scope(nodes)\n nodes=pass_block(nodes)\n nodes=concat(\"const compile_time=\",compile_time,\"\\n\",nodes)\n nodes=concat(nodes,\"\\ninit()\")\n //nodes=concat(nodes,\"\\nsetTimeout(init)\")\n \n const sloc=count(nodes,\"\\n\")\n \n let duration=time_now()\n \n duration=to_fixed(duration)\n duration=concat(duration,\"s\")\n\n log(app,\"sloc\",sloc,duration)\n\n if(contain(x,\"--html\"))\n {\n  const page=page_render(name,nodes)\n  const html=concat(page,\"\\n\")\n  const base=concat(name,\".html\")\n  const tmp=path_concat(\"/home/mabynogy/tmp\",base)\n \n  file_write(tmp,html)\n\n  let size=tmp\n  \n  size=file_size(size)\n  size=to_bsize(size)\n  \n  log(\"path\",to_lit(tmp),size)\n  \n  return\n }\n\n let extension=null\n \n if(is_cs())\n  extension=\"js\"\n else if(is_cu())\n  extension=\"lua\"\n else\n  stop()\n \n const base=concat(name,\".\",extension)\n const tmp=path_concat(\"/home/mabynogy/tmp\",base)\n\n file_save(tmp,nodes)\n\n let size=tmp\n \n size=file_size(size)\n size=to_bsize(size)\n\n log(\"path\",to_lit(tmp),size)\n \n if(contain(x,\"--compile\"))\n  return\n \n if(option.shebang)\n {\n  if(same(interpreter,\"node\"))\n   os_system(interpreter,\"--trace-uncaught\",tmp,...arguments)\n  else\n   os_system(interpreter,tmp,...arguments)\n }\n}"},"main-20":{"id":"main-20","name":"main","branch":"prg-mount-list","path":"prg-mount-list/src/main.cs","sloc":5,"content":"fn main x:spread\n let t call mnt_list\n let t tbl_render t\n \n log t\nend"},"main-21":{"id":"main-21","name":"main","branch":"prg-open","path":"prg-open/src/main.cs","sloc":25,"content":"fn main x y \n var n null\n \n if is_numeric x\n  assign n to_num x\n  \n let a dir_read_rec \".\"\n\n if is_def y\n  let b dup a\n  \n  clear a\n  \n  forof b\n   if match v y\n    push a v\n  end\n end\n\n var a shuffle a\n \n if is_num n\n  assign a head a n\n \n forin a\n  let i to_i k\n  let v at a i\n  let n inc i\n  let s concat \"#\" n\n  \n  log s v\n  os_detach \"geany\" v\n end\nend"},"main-22":{"id":"main-22","name":"main","branch":"prg-salt","path":"prg-salt/src/main.cs","sloc":12,"content":"fn main x y z:spread\n check is_str x\n check is_str y\n \n if contain z \"--unsalt\"\n  log \"unsalt\"\n  \n  let s base36_unsalt x y\n \n  log s\n else\n  let s base36_salt x y\n \n  log s\n end\nend"},"main-23":{"id":"main-23","name":"main","branch":"prg-test","path":"prg-test/src/main.cs","sloc":8,"content":"fn main\n let a call dbg_callstack\n \n tbl_align_r a \"fn\"\n \n log a\n \n let s tbl_render a\n \n log s\n \n log \"ok\"\nend"},"main-24":{"id":"main-24","name":"main","branch":"prg-test-html","path":"prg-test-html/src/main.cs","sloc":4,"content":"fn main x:spread\n log \"ok\"\n \n stop\nend"},"main-25":{"id":"main-25","name":"main","branch":"prg-test-scan","path":"prg-test-scan/src/main.cs","sloc":18,"content":"fn main x:spread\n let begin call time_now\n \n forof dir_read_rec \".\"\n  log v\n  \n  let ext path_ext v\n  \n  if same ext \"cs\"\n  elseif same ext \"js\"\n  else\n   cont\n  \n  let s file_read v\n  let a scan s\n end\n \n let end call time_now\n let duration sub end begin\n let duration to_fixed duration\n let duration concat duration \"s\"\n \n log duration\nend"},"main-26":{"id":"main-26","name":"main","branch":"prg-unmount","path":"prg-unmount/src/main.cs","sloc":9,"content":"fn main x:spread\n let env call env_init\n \n forof dir_read env.mnt is_fs\n  if is_dir v\n   log \"unmount\" v\n   mnt_clean v\n  end\n end\nend"},"main-27":{"id":"main-27","name":"main","branch":"spa-coglab","path":"spa-coglab/src/main.cs","sloc":59,"content":"gn main\n css_init \"#003399\"\n \n assign global.loading call dlg_loading 20\n\n let header dom_table body\n let tr dom_tr header\n let logo dom_td tr\n let left dom_td tr \n let right dom_td tr \n let a dom_a logo \"\" \"/\"\n let img dom_img a \"/neurotechx-eu.png\"\n\n dom_class a \"image-link\"\n dom_valign left \"middle\"\n dom_width header \"100%\"\n\n let a dom_a left \"NeuroTechX\" \"/\"\n \n dom_br a \n dom_span a \"EU\"\n  \n let height call dom_line_height\n let height mul height 2\n let height to_vw height\n \n dom_width logo height\n dom_width img height\n \n dom_br body\n \n let params call argv_params\n var p params.get \"p\"\n let n params.get \"n\"\n\n if is_null p  \n  if is_null n\n   assign p \"ho\"\n  else\n   assign p \"tb\"\n end\n   \n if same p \"ho\"\n  run page_home\n elseif same p \"ti\"\n  run page_timeline\n elseif same p \"tb\"\n  let a split n \"_\"\n  \n  if same a.length 1\n   let n to_uint n\n  \n   run page_table n\n  else\n   let n shift a\n   let n to_uint n\n   let i shift a\n   let i to_uint i\n\n   run page_row n i\n  end   \n end\n \n run baserow_invalidate\n \n dom_remove loading\n \n dom_br body\n \n let footer dom_div body \n let duration call time_now\n let duration to_fixed duration\n let duration concat duration \"s\"\n \n dom_align footer \"center\"\n dom_span footer duration\n\n log \"ok\"\nend"},"main-28":{"id":"main-28","name":"main","branch":"spa-mabynogy","path":"spa-mabynogy/src/main.cs","sloc":29,"content":"gn main\n css_init\n \n let path location.pathname\n //let sitemap run xhr_load \"/sitemap.json\"\n let sitemap run fetch_url \"/sitemap.json\"\n \n if same path \"/\"\n  let params call argv_params\n  let b params.get \"b\"\n  let k params.get \"k\"\n  let bb is_null b\n  let bk is_null k\n  \n  if and bb bk\n   run page_home sitemap\n  elseif bk\n   run page_branch sitemap b\n  else\n   run page_keyword sitemap k\n else\n  let name strip_l path \"/\"\n  let name strip_r name \"/\"\n  \n  run page_file sitemap name\n end\n\n let duration call time_now\n let duration to_fixed duration\n let duration concat duration \"s\"\n\n dom_br body\n \n let div dom_div body duration\n \n dom_align div \"center\"\n\n log \"ok\"\nend"},"main-29":{"id":"main-29","name":"main","branch":"spa-vps","path":"spa-vps/src/main.cs","sloc":47,"content":"gn main x\n let pages run pms_pages\n \n let params call argv_params\n var n params.get \"n\"\n \n if is_null n\n  let o front pages\n  \n  assign n o.id\n else\n  check is_str n\n  \n  assign n from_json n\n end\n \n let agent call get_user_agent\n       \n if same agent \"unknown\"\n  let signature navigator.userAgent\n  let context obj signature\n  \n  run api_report \"signature\" context\n end\n    \n vps_init\n\n let page pms_pages_get pages n\n  \n dom_css \"a.menu\" \"color\" \"black\"\n dom_css \"a.menu:hover\" \"color\" \"white\" \"background-color\" \"indigo\"\n dom_css \"a.menu:hover img\" \"filter\" \"invert(100%)\"\n\n dom_css \".gray\" \"color\" \"gray\"\n\n assign document.title page.title\n\n if mobile\n  pms_page_mobile_header page\n  pms_page_mobile_content page\n  pms_page_mobile_footer page\n  pms_page_admin_links page\n else \n  pms_page_desktop_header page pages\n  \n  if same page.title \"Accueil\"\n   let slider run pms_desktop_slider\n   \n   dom_push body slider\n  end\n\n  pms_page_desktop_content page\n  pms_page_desktop_footer page\n  pms_page_admin_links page\n end\n \n if same n 20\n  pms_page_sitemap page pages\n \n let s to_lit page.title\n let n run api_table_count \"page\"\n \n log \"title\" s\n log \"count\" n\n log \"ok\"\nend"},"main-3":{"id":"main-3","name":"main","branch":"prg-deploy","path":"prg-deploy/src/main.cs","sloc":10,"content":"fn main x:spread\n os_system \"prg-deploy-node\"\n os_system \"prg-deploy-vps\"\n os_system \"prg-deploy-coglab\"\n os_system \"prg-deploy-doc\"\n\n let duration call time_now\n let duration to_fixed duration\n let duration concat duration \"s\"\n \n log duration\nend"},"main-30":{"id":"main-30","name":"main","branch":"spa-vps-admin","path":"spa-vps-admin/src/main.cs","sloc":32,"content":"gn main x\n let params call argv_params\n var q params.get \"q\"\n \n if is_null q\n  assign q \"h\"\n\n let argv split q \",\"\n let page shift argv\n   \n vps_init\n\n run api_db_init\n run pms_login\n \n if same page \"h\"\n  run pms_home_body\n elseif same page \"pl\"\n  run pms_page_list_body\n elseif same page \"p\"\n  if is_empty argv\n   run pms_page_body\n  else  \n   let n shift argv\n   let n to_uint n\n   \n   run pms_page_body n\n  end\n elseif same page \"pn\"\n  if is_empty argv\n   run pms_page_body\n  else\n   let n shift argv\n   let n to_uint n\n     \n   run pms_page_body -1 n\n  end\n end\nend"},"main-4":{"id":"main-4","name":"main","branch":"prg-deploy-coglab","path":"prg-deploy-coglab/src/main.cs","sloc":10,"content":"fn main x:spread\n php_lint \"data-coglab\"\n\n spa_compile \"spa-coglab\" \"data-coglab/mabynogy.org\"\n\n let env call coglab_init\n \n env_upload env \"data-coglab\"\n \n let duration call time_now\n let duration to_fixed duration\n let duration concat duration \"s\"\n \n log \"duration\" duration\nend"},"main-5":{"id":"main-5","name":"main","branch":"prg-deploy-doc","path":"prg-deploy-doc/src/main.cs","sloc":49,"content":"fn main x:spread\n let env call env_init\n let user env.user\n let mail \"marc@mabynogy.org\"\n let repo \"mabynogy.github.io\"\n let token call get_credential_github\n let url concat \"https://\" token \"@github.com/\" user \"/\" repo \".git\"\n let prg env.prg \n let tmp path_concat env.tmp repo\n\n os_system \"sudo\" \"rm\" \"--recursive\" \"--force\" tmp \n dir_make tmp\n dir_copy \"data-doc\" tmp\n \n let sitemap call sitemap_init tmp prg\n \n sitemap_load sitemap\n sitemap_html sitemap\n sitemap_save sitemap\n sitemap_index sitemap\n\n let page get_length sitemap.entries\n \n log \"page\" page\n \n let compile path_concat prg \"prg-compile/prg-compile\"\n let spa path_concat prg \"spa-mabynogy/spa-mabynogy.cs\"\n let js path_concat env.tmp \"spa-mabynogy.js\"\n\n os_system compile spa \"--compile\"\n file_copy js tmp\n \n let message call time_get\n let message time_string message\n\n git_system tmp \"config\" \"--global\" \"user.name\" user\n git_system tmp \"config\" \"--global\" \"user.email\" mail\n git_system tmp \"config\" \"--global\" \"init.defaultBranch\" \"main\"\n git_system tmp \"init\"\n git_system tmp \"add\" \".\"\n git_system tmp \"commit\" \"--message\" message \"--quiet\"\n git_system tmp \"push\" url \"main\" \"--force\"\n \n let duration call time_now\n let duration to_fixed duration\n let duration concat duration \"s\"\n let duration space \"github\" duration\n \n flower duration\n\n //doc.mabynogy.org\n \n let env call coglab_init\n let login env.login\n let local path_concat tmp \"*\"\n let remote \"/home/mabynogy/doc.mabynogy.org\"\n let login_remote concat login \":\" remote\n \n rsync \"--recursive\" \"--perms\" local login_remote\n \n //duration\n\n let duration call time_now\n let duration to_fixed duration\n let duration concat duration \"s\"\n \n log \"duration\" duration\nend"},"main-6":{"id":"main-6","name":"main","branch":"prg-deploy-node","path":"prg-deploy-node/src/main.cs","sloc":15,"content":"fn main x:spread\n let binary call node_binary\n \n os_system \"sudo\" \"cp\" \"--force\" binary \"/usr/bin\"\n \n let version os_execute \"node\" \"-v\"\n \n log \"version\" version\n \n let vps call vps_init\n let coglab call coglab_init\n\n rsync \"/usr/bin/node\" \"mabynogy@mabynogy.org:/home/mabynogy\"\n ssh coglab.login \"sudo\" \"cp\" \"--force\" \"/home/mabynogy/node\" \"/usr/bin\"\n ssh coglab.login \"sudo\" \"rm\" \"/home/mabynogy/node\"\n\n rsync \"/usr/bin/node\" \"mabynogy@pimaastore.com:/home/mabynogy\"\n ssh vps.login \"sudo\" \"cp\" \"--force\" \"/home/mabynogy/node\" \"/usr/bin\"\n ssh vps.login \"sudo\" \"rm\" \"/home/mabynogy/node\"\n \n fs_remove binary \nend"},"main-7":{"id":"main-7","name":"main","branch":"prg-deploy-vps","path":"prg-deploy-vps/src/main.cs","sloc":11,"content":"fn main x:spread\n php_lint \"data-vps\"\n \n spa_compile \"spa-vps\" \"data-vps/pimaastore.com\"\n spa_compile \"spa-vps-admin\" \"data-vps/admin.pimaastore.com\"\n\n let env call vps_init\n  \n env_upload env \"data-vps\"\n \n let duration call time_now\n let duration to_fixed duration\n let duration concat duration \"s\"\n \n log \"duration\" duration\nend"},"main-8":{"id":"main-8","name":"main","branch":"prg-edf","path":"prg-edf/src/main.cs","sloc":7,"content":"fn main\n forof call dataset_load\n  //let n file_size v\n  //let s file_read v \"binary\"\n  \n  //log n s.length\n  \n  let o edf_load v\n  \n  log o\n  \n  ret\n end\nend"},"main-9":{"id":"main-9","name":"main","branch":"prg-editor","path":"prg-editor/src/main.cs","sloc":34,"content":"fn main x:spread\n let style dom_style_tag body\n let s call get_css\n \n dom_text style s\n \n let table dom_table body\n\n let tr dom_tr table\n let td_id dom_td tr\n let td_parent dom_td tr\n let td_type dom_td tr\n let td_value dom_td tr\n \n dom_text td_id \"id\"\n dom_text td_parent \"parent\"\n dom_text td_type \"type\"\n dom_text td_value \"value\"\n \n let height 10\n \n fornum 10\n  let n inc i\n  let id pad_l n \"0\" 2\n  let tr dom_tr table\n  let td_id dom_td tr\n  let td_parent dom_td tr\n  let td_type dom_td tr\n  let td_value dom_td tr\n  \n  let parents arr\n  \n  fornum height\n   let parent inc i\n   let parent pad_l parent \"0\" 2\n      \n   if different parent id\n    push parents parent  \n  end\n  \n  dom_text td_id id\n  \n  let select dom_select parents td_parent\n end\nend"},"map":{"id":"map","name":"map","branch":"prg-compile","path":"prg-compile/level-b/map.js","sloc":13,"content":"function map(x,y)\n{\n check(is_arr,x)\n check(is_fn,y)\n \n const r=arr()\n \n for(const v of x)\n {\n  const value=y(v)\n  \n  check(is_def,value)\n  \n  push(r,value)\n }\n \n return r\n}"},"match":{"id":"match","name":"match","branch":"prg-compile","path":"prg-compile/level-c/match.cs","sloc":21,"content":"fn match x y\n check is_str x\n check is_str y\n \n let a arr\n \n forof y\n  if is_alnum v\n   push a v\n  elseif same v \"?\"\n   push a \"(.)\"\n  elseif same v \"*\"\n   push a \"(.*)\"\n  else\n   let s concat \"\\\\\" v\n   \n   push a s\n  end\n end\n \n let s implode a\n let pattern concat \"^\" s \"$\"\n let o new RegExp pattern\n \n ret o.test x\nend"},"match-l":{"id":"match-l","name":"match-l","branch":"prg-compile","path":"prg-compile/level-a/match-l.js","sloc":10,"content":"function match_l(x,y)\n{\n check(is_str,x)\n check(is_str,y)\n \n if(is_empty(x))\n  return false\n\n if(is_empty(y))\n  return false\n  \n return x.startsWith(y)\n}"},"match-r":{"id":"match-r","name":"match-r","branch":"prg-compile","path":"prg-compile/level-b/match-r.js","sloc":10,"content":"function match_r(x,y)\n{\n check(is_str,x)\n check(is_str,y)\n \n if(is_empty(x))\n  return false\n\n if(is_empty(y))\n  return false\n  \n return x.endsWith(y)\n}"},"max":{"id":"max","name":"max","branch":"prg-compile","path":"prg-compile/level-a/max.js","sloc":4,"content":"function max(...x)\n{\n return Math.max(...x)\n}"},"measure-average":{"id":"measure-average","name":"measure-average","branch":"prg-measure","path":"prg-measure/src/measure-average.cs","sloc":22,"content":"fn measure_average x y\n check is_arr x\n check is_str y\n \n let end call time_get\n let begin back x\n let begin begin.date\n let time sub end begin\n var sum 0\n \n forof x\n  let value get v y\n  \n  assign sum add sum value\n end\n \n let count x.length\n let r div sum count\n \n if gt r 1000\n  let r trunc r\n  \n  ret r\n end\n \n let r to_fixed r 1\n let r to_num r\n \n ret r\nend"},"merge":{"id":"merge","name":"merge","branch":"prg-compile","path":"prg-compile/level-c/merge.cs","sloc":8,"content":"fn merge x y\n check is_obj x\n check is_obj y\n \n forin y\n  let v get y k\n  \n  set x k v\n end\nend"},"min":{"id":"min","name":"min","branch":"prg-compile","path":"prg-compile/level-a/min.js","sloc":4,"content":"function min(...x)\n{\n return Math.min(...x)\n}"},"mnt-clean":{"id":"mnt-clean","name":"mnt-clean","branch":"lib-cli","path":"lib-cli/src/mnt-clean.cs","sloc":8,"content":"fn mnt_clean x\n check is_str x\n \n if is_readable x\n  mnt_unmount x\n  fs_remove x\n else\n  mnt_unmount x\nend"},"mnt-list":{"id":"mnt-list","name":"mnt-list","branch":"lib-cli","path":"lib-cli/src/mnt-list.cs","sloc":7,"content":"fn mnt_list\n let r arr\n let s os_execute \"findmnt\" \"-l\"\n \n tbl_parse r s\n tbl_rename r \"target\" \"path\"\n \n ret r\nend"},"mnt-unmount":{"id":"mnt-unmount","name":"mnt-unmount","branch":"lib-cli","path":"lib-cli/src/mnt-unmount.cs","sloc":4,"content":"fn mnt_unmount x\n check is_str x\n \n os_system \"fusermount3\" \"-u\" x\nend"},"mod":{"id":"mod","name":"mod","branch":"prg-compile","path":"prg-compile/level-c/mod.cs","sloc":7,"content":"fn mod x y z:spread\n check different y 0\n \n let n inline \"x%y\"\n \n if is_empty z\n  ret n\n \n ret mod n z:spread\nend"},"mul":{"id":"mul","name":"mul","branch":"prg-compile","path":"prg-compile/level-a/mul.js","sloc":7,"content":"function mul(x,y,...z)\n{\n const n=x*y\n \n if(is_empty(z))\n  return n\n \n return mul(n,...z)\n}"},"neq":{"id":"neq","name":"neq","branch":"prg-compile","path":"prg-compile/level-b/neq.js","sloc":7,"content":"function neq(x,y)\n{\n check(is_def,x)\n check(is_def,y)\n \n const n=compare(x,y)\n \n return different(n,0)\n}"},"node-binary":{"id":"node-binary","name":"node-binary","branch":"prg-deploy-node","path":"prg-deploy-node/src/node-binary.cs","sloc":23,"content":"fn node_binary\n let r \"/tmp/node\"\n let url call node_url\n let gz url_parse url\n let gz path_base gz.pathname\n let tar strip_r gz \".gz\"\n let dir strip_r tar \".tar\"\n let binary path_concat dir \"bin/node\"\n \n fs_remove r\n fs_remove gz\n fs_remove tar\n fs_remove dir\n fs_remove binary\n \n os_system \"wget\" \"--quiet\" url\n os_system \"gzip\" \"--decompress\" gz \n os_system \"tar\" \"--extract\" \"--file\" tar\n os_system \"mv\" binary r\n\n fs_remove gz\n fs_remove tar\n fs_remove dir\n fs_remove binary\n\n ret r\nend"},"node-url":{"id":"node-url","name":"node-url","branch":"prg-deploy-node","path":"prg-deploy-node/src/node-url.cs","sloc":12,"content":"fn node_url\n let latest \"https://nodejs.org/dist/latest/\"\n let urls elinks latest\n let urls urls.urls\n \n forof urls\n  let file split v \"/\"\n  let file back file\n  \n  if match_r file \"linux-x64.tar.gz\"\n   ret concat latest file\n end\n \n stop\nend"},"nop":{"id":"nop","name":"nop","branch":"prg-compile","path":"prg-compile/level-a/nop.js","sloc":3,"content":"function nop()\n{\n}"},"obj":{"id":"obj","name":"obj","branch":"prg-compile","path":"prg-compile/level-b/obj.js","sloc":4,"content":"function obj()\n{\n return {}\n}"},"obj-sort":{"id":"obj-sort","name":"obj-sort","branch":"prg-compile","path":"prg-compile/level-c/obj-sort.cs","sloc":21,"content":"fn obj_sort x y\n check is_obj x\n \n if is_undef y\n  ret obj_sort x compare\n \n check is_fn y\n \n let r obj\n let a arr\n\n forin x\n  let key k\n  let value get x k\n  let o obj key value\n  \n  push a o  \n end\n \n sort a y\n \n forof a\n  let key v.key\n  let value v.value\n  \n  put r key value\n end\n \n ret r\nend"},"or":{"id":"or","name":"or","branch":"prg-compile","path":"prg-compile/level-c/or.cs","sloc":6,"content":"fn or x y z:spread\n let r inline \"x||y\"\n \n if is_empty z\n  ret r\n \n ret or c z:spread\nend"},"os-detach":{"id":"os-detach","name":"os-detach","branch":"prg-compile","path":"prg-compile/level-c/os-detach.cs","sloc":8,"content":"fn os_detach x y:spread\n check is_str x\n\n let detached true\n let stdio \"ignore\"\n let option obj detached stdio\n let o cp.spawn x y option\n \n call o.unref\nend"},"os-execute":{"id":"os-execute","name":"os-execute","branch":"prg-compile","path":"prg-compile/level-c/os-execute.cs","sloc":13,"content":"fn os_execute x y:spread\n check is_str x\n\n let shell true\n let maxBuffer mul 1 1024 1024 1024\n let encoding \"utf8\"\n let option obj shell maxBuffer encoding\n let streams cp.spawnSync x y option\n let out to_str streams.stdout\n let err to_str streams.stderr\n let r concat out \"\\n\" err\n let r trim_r r\n\n ret r\nend"},"os-system":{"id":"os-system","name":"os-system","branch":"prg-compile","path":"prg-compile/level-a/os-system.js","sloc":8,"content":"function os_system(x,...y)\n{\n check(is_str,x)\n\n const stdio=\"inherit\"\n const maxBuffer=mul(1,1024,1024,1024)\n const option={stdio,maxBuffer}\n \n cp.spawnSync(x,y,option)\n}"},"pad-l":{"id":"pad-l","name":"pad-l","branch":"prg-compile","path":"prg-compile/level-b/pad-l.js","sloc":19,"content":"function pad_l(x,y,z)\n{\n check(is_cool,x)\n\n if(is_uint(x))\n {\n  const s=to_str(x)\n  \n  if(is_undef(y))\n  {\n   if(is_undef(z))\n    return pad_l(s,\"0\",3)\n\n   return pad_l(s,\"0\",z)\n  }\n\n  return pad_l(s,y,z)\n }\n\n check(is_str,x)\n check(is_str,y)\n check(is_uint,z)\n\n return x.padStart(z,y)\n}"},"pad-r":{"id":"pad-r","name":"pad-r","branch":"prg-compile","path":"prg-compile/level-b/pad-r.js","sloc":19,"content":"function pad_r(x,y,z)\n{\n check(is_cool,x)\n\n if(is_uint(x))\n {\n  const s=to_str(x)\n  \n  if(is_undef(y))\n  {\n   if(is_undef(z))\n    return pad_r(s,\"0\",3)\n\n   return pad_r(s,\"0\",z)\n  }\n  \n  return pad_r(s,y,z)\n }\n\n check(is_str,x)\n check(is_str,y)\n check(is_uint,z)\n\n return x.padEnd(z,y)\n}"},"page-branch":{"id":"page-branch","name":"page-branch","branch":"spa-mabynogy","path":"spa-mabynogy/src/page-branch.cs","sloc":11,"content":"gn page_branch x y\n check is_obj x\n check is_str y\n\n assign document.title y\n\n //breadcrumb\n \n let breadcrumb dom_div body\n\n dom_a breadcrumb \"Home\" \"/\"\n dom_separator breadcrumb \">\"\n dom_b breadcrumb y\n dom_br body\n \n unit_file_list x y\nend"},"page-file":{"id":"page-file","name":"page-file","branch":"spa-mabynogy","path":"spa-mabynogy/src/page-file.cs","sloc":66,"content":"gn page_file x y\n check is_obj x\n check is_str y\n \n fn on_click x\n  check is_str x\n  \n  assign location.hash x\n  \n  location.reload\n end\n \n let pre dom_by_tag body \"pre\"\n let pre front pre\n\n dom_remove pre\n\n let entry get x y\n let content entry.content\n \n //breadcrumb\n \n let table dom_table body\n let tr dom_tr table\n let breadcrumb dom_td tr\n let nav dom_td tr\n let url_branch concat \"/?b=\" entry.branch\n \n dom_width table \"100%\"\n dom_align nav \"right\"\n dom_a breadcrumb \"Home\" \"/\"\n dom_separator breadcrumb \">\"\n dom_a breadcrumb entry.branch url_branch\n dom_separator breadcrumb \">\"\n dom_b breadcrumb entry.name\n dom_br body\n \n //nav\n \n let url_previous sitemap_previous x y\n let url_previous concat \"/\" url_previous \"/\"\n let url_next sitemap_next x y\n let url_next concat \"/\" url_next \"/\"\n \n dom_a nav \"<<\" url_previous\n dom_separator nav \" | \"\n dom_a nav \">>\" url_next \n \n //code\n \n let lines split content\n let table dom_table body\n \n forin lines\n  let i to_i k\n  let v at lines i  \n  let n inc i\n  let tr dom_tr table\n  let line_number dom_td tr\n  let code dom_td tr\n\n  dom_over tr \"background-color\" \"whitesmoke\"  \n  dom_valign line_number \"top\"\n  dom_align line_number \"right\"\n\n  let anchor concat \"#\" n\n  let a dom_a line_number n anchor\n  \n  assign a.id n\n  assign a.onclick partial on_click anchor\n  \n  let tokens scan v\n  let div dom_div code\n  \n  dom_span div \" \"  \n  dom_white_space div \"pre-wrap\"\n  \n  forin tokens\n   let i to_i k\n   let v at tokens i\n   let node syntax_attribute v\n\n   dom_push div node\n  end\n  \n  if same location.hash anchor\n   line_number.scrollIntoView\n    \n   dom_color_background tr \"whitesmoke\"\n   dom_bold line_number\n  end\n end\nend"},"page-home":{"id":"page-home","name":"page-home","branch":"spa-coglab","path":"spa-coglab/src/page-home.cs","sloc":38,"content":"gn page_home\n dom_div body \"Welcome to project SciCog Graph.\"\n\n assign document.title \"SciCog Graph Database\" \n \n dom_br body\n\n let data run baserow_cache baserow_database_tables\n let grid grid_init body \"#\" \"Table\" \"Count\" \"Database\"\n let counts arr\n\n forin data\n  let i to_i k\n  let v at data i\n  let n inc i\n  let row grid_push grid\n  let name v.name\n  let id v.id\n  let url concat \"/?n=\" id\n  \n  dom_a row.table name url\n  dom_text row.sharp n\n  dom_text row.database v.database_name\n  push counts row.count\n end\n \n grid_align grid \"sharp\" \"right\"\n grid_align grid \"table\" \"right\"\n \n dom_br body\n\n let grid grid_init body \"#\" \"View\"\n let row grid_push grid\n \n dom_text row.sharp \"1\" \n dom_a row.view \"Timeline\" \"/?p=ti\"\n \n dom_remove loading\n \n forin data\n  let i to_i k\n  let v at data i\n  let id v.id\n  let td at counts i\n  let n run baserow_cache baserow_table_row_count id\n  let n to_str n\n  \n  dom_text td n\n end\n \nend"},"page-home-1":{"id":"page-home-1","name":"page-home","branch":"spa-mabynogy","path":"spa-mabynogy/src/page-home.cs","sloc":10,"content":"gn page_home x\n check is_obj x\n\n assign document.title \"Documentation of mabynogy's source code\"\n \n let time time_hn compile_time\n let div dom_div body\n \n dom_span div \"Compiled: \"\n dom_b div time\n dom_br body\n \n unit_file_list x\nend"},"page-keyword":{"id":"page-keyword","name":"page-keyword","branch":"spa-mabynogy","path":"spa-mabynogy/src/page-keyword.cs","sloc":121,"content":"gn page_keyword x y\n check is_obj x\n check is_str y\n \n let keyword y\n \n gn load_data x\n  check is_obj x\n  \n  let r arr\n\n  forin x\n   let v get x k\n   let file v  \n   let content get_content file.content\n   \n   if not contain content keyword\n    cont\n    \n   let a scan content\n   let a group_line a\n\n   forin a\n    let i to_i k\n    let v at a i\n    let n inc i\n    \n    if not match_word v keyword\n     cont\n    \n    let line v\n    let o obj file line n\n    \n    push r o\n   end\n   \n   yield\n  end\n  \n  ret r\n end\n \n fn push_row x y z a\n  check is_obj x\n  check is_obj y\n  check is_arr z\n  check is_uint a\n  \n  let url_line concat \"/\" y.id \"/\"\n  let url_line concat url_line \"#\" a\n  let url_branch concat \"/?b=\" y.branch\n  let lang path_ext y.path\n  \n  dom_a x.line a url_line true\n  dom_word_break x.code \"break-word\"\n  dom_white_space x.code \"pre-wrap\"\n  \n  forof z    \n   let node syntax_attribute v\n\n   if contain v keyword\n    let fore dom_color node\n    var back dom_color_background node\n    let bold dom_font_weight node\n    \n    if is_empty back\n     assign back \"transparent\"\n        \n    dom_color node \"white\"\n    dom_color_background node \"indigo\"\n    dom_bold_no node\n    \n    dom_over node \"color\" fore\n    dom_over node \"background-color\" back\n    dom_over node \"font-weight\" bold\n   end\n   \n   dom_push x.code node\n  end\n\n  dom_text x.lang lang\n  dom_text x.name y.name\n  dom_a x.branch y.branch url_branch true\n end\n \n fn match_word x y\n  check is_arr x\n  check is_str y\n  \n  forof x\n   if contain v y\n    ret true\n  end\n  \n  ret false\n end\n\n fn get_content x\n  check is_str x\n  \n  let a arr\n  \n  forof split x\n   let s trim v\n   \n   push a s\n  end\n  \n  ret join a\n end\n \n //title\n \n assign document.title keyword\n \n let loading call dlg_loading 30\n\n //breadcrumb\n \n let breadcrumb dom_div body\n \n dom_a breadcrumb \"Home\" \"/\"\n dom_separator breadcrumb \">\"\n dom_span breadcrumb \"Keywords\"\n dom_separator breadcrumb \">\"\n dom_b breadcrumb keyword\n dom_br body\n \n let grid grid_init body \"#\" \"line\" \"code\" \"lang\" \"name\" \"branch\"\n var n 1\n \n dom_display grid.table \"none\"\n \n let key y\n let key run digest key\n let key head key 16\n let key concat \"doc_cache_\" key\n \n var data storage_get key\n \n if is_empty data\n  assign data run load_data x\n  \n  let s to_json data\n  \n  try  \n   storage_set key s\n  catch\n  end\n else\n  assign data from_json data\n \n forin data\n  let i to_i k\n  let v at data i\n  let n inc i\n  let row grid_push grid\n  \n  push_row row v.file v.line v.n\n  dom_text row.sharp n\n  \n  yield\n end\n\n grid_align grid \"sharp\" \"right\"\n grid_align grid \"line\" \"right\"\n grid_ellipsis grid\n\n dom_display grid.table \"block\"\n \n dom_remove loading \nend"},"page-render":{"id":"page-render","name":"page-render","branch":"prg-compile","path":"prg-compile/src/page-render.js","sloc":20,"content":"function page_render(x,y)\n{\n check(is_str,x)\n check(is_str,y)\n\n const html=html_init(\"html\")\n const head=html_init(\"head\")\n const meta=html_init(\"meta\")\n const title=html_init(\"title\")\n const body=html_init(\"body\")\n const script=html_init(\"script\")\n\n html_attribute(meta,\"charset\",\"utf-8\")\n\n html_text(title,x)\n\n html_text(script,y)\n html_add(body,script) \n \n html_add(head,meta)\n html_add(head,title)\n \n html_add(html,head)\n html_add(html,body)\n \n return html_render(html)\n}"},"page-row":{"id":"page-row","name":"page-row","branch":"spa-coglab","path":"spa-coglab/src/page-row.cs","sloc":83,"content":"gn page_row x y\n check is_uint x\n check is_uint y\n\n fn on_enter x y\n  check is_obj x\n  check is_obj y\n  \n  dom_br body\n  \n  let pre call dom_pre\n  let s to_dump y\n  \n  dom_white_space pre \"pre-wrap\"\n  dom_word_break pre \"break-word\"\n  dom_text pre s\n  \n  dom_remove x\n end\n \n let table run baserow_cache baserow_database_table x\n let name table.name\n let data run baserow_cache baserow_table x\n let count data.length\n let data at data y\n let title get_values data\n let title at title 1\n let table dom_table body\n let tr dom_tr table\n let breadcrumb dom_td tr\n let nav dom_td tr\n let url concat \"/?n=\" x\n \n assign document.title paren name\n assign document.title concat title \" \" document.title\n \n dom_width table \"100%\"\n dom_padding_right nav padding\n dom_valign nav \"top\"\n dom_align nav \"right\"\n dom_width nav field_width_small\n\n //breadcrumb\n \n dom_a breadcrumb \"Home\" \"/\"\n dom_separator breadcrumb \">\"\n \n dom_a breadcrumb name url \n dom_separator breadcrumb \">\"\n\n let location to_str location\n let a dom_a breadcrumb title location\n\n dom_bold a\n dom_color a \"black\"\n \n //previous\n \n var n dec y\n \n if lt n 0\n  assign n dec count\n \n let n concat x \"_\" n\n let url concat \"/?n=\" n\n let a dom_a nav \"<<\" url\n \n dom_separator nav\n \n //next\n\n var n inc y\n \n if gte n count\n  assign n 0\n \n let n concat x \"_\" n\n let url concat \"/?n=\" n\n let a dom_a nav \">>\" url\n \n dom_br body\n \n //fields\n \n let grid grid_init body \"Field\" \"Value\"\n \n forin data\n  let v get data k\n  let row grid_push grid\n  \n  dom_text row.field k\n  \n  let cell cell_init v\n  \n  if is_str cell\n   if is_date cell\n    let span dom_span row.value cell\n    \n    let time time_parse cell\n    let time time_hn time\n    \n    assign row.value.on_tooltip time\n   else\n    let s to_html cell\n  \n    dom_html row.value s\n   end\n  elseif is_cell_image v\n   cell_image_resize cell field_width_small   \n\n   dom_push row.value cell   \n  else\n   dom_push row.value cell   \n end\n \n grid_align grid \"field\" \"right\"\n grid_valign grid \"top\"\n\n //dom_br body\n \n let div dom_div body\n \n dom_height div line\n \n assign div.onmouseenter partial on_enter div data\nend"},"page-table":{"id":"page-table","name":"page-table","branch":"spa-coglab","path":"spa-coglab/src/page-table.cs","sloc":80,"content":"gn page_table x\n check is_uint x\n\n let table run baserow_cache baserow_database_table x\n let name table.name\n let data run baserow_cache baserow_table x\n let breadcrumb dom_div body\n let url concat \"/?n=\" x\n \n assign document.title name\n \n dom_a breadcrumb \"Home\" \"/\"\n dom_separator breadcrumb \">\"\n \n let a dom_a breadcrumb name url\n \n dom_color a \"black\"\n dom_bold a\n \n dom_br body\n \n if is_empty data\n  dom_div body \"Empty\"\n  \n  ret\n end\n\n let columns front data \n let columns get_keys columns\n \n shift columns \n unshift columns \"#\"\n \n let grid grid_init body columns:spread\n \n let tweak from_vw padding\n let tweak mul tweak 2\n \n let width_image from_vw field_width_small\n let width_image add width_image tweak\n let width_image to_vw width_image\n\n let tweak from_vw \"0.5vw\"\n \n let line from_vw line\n let line add line tweak\n let line to_vw line\n \n let image_column tbl_find_image_column data\n \n forin data\n  let i to_i k\n  let v at data i\n  let n inc i\n  let row v\n  let divs grid_push grid\n  let divs get_values divs\n  \n  var column 0\n  \n  forin row\n   let v get row k\n   let cell cell_init v\n   let div at divs column\n   \n   if is_str cell\n    let s txt_excerpt cell    \n    let s to_html s\n    \n    if same column 1\n     let url concat \"/?n=\" x \"_\" i\n     let a dom_a div \"\" url\n\n     dom_html a s\n    else\n     dom_html div s\n\n    if is_date cell\n     let time time_parse cell\n     let time time_hn time  \n     \n     assign div.on_tooltip time\n    end\n   elseif is_cell_image v\n    cell_image_resize cell line\n\n    dom_push div cell\n\n    let cell dom_clone cell\n    \n    cell_image_resize cell field_width_small\n    \n    assign div.on_tooltip dom_html_outer cell\n   else\n    dom_push div cell\n\n   if same column 0\n    let div front divs\n    \n    dom_text div n\n   elseif same column image_column\n    dom_width div width_image\n   else\n    dom_width div field_width_medium\n   \n   //~ dom_height div line\n   //~ dom_overflow div \"hidden\"\n   //~ dom_white_space div \"nowrap\"\n   //~ dom_text_overflow div \"ellipsis\"\n\n   assign column inc column\n  end\n end \n\n grid_align grid \"sharp\" \"right\"\n grid_ellipsis grid\nend"},"page-timeline":{"id":"page-timeline","name":"page-timeline","branch":"spa-coglab","path":"spa-coglab/src/page-timeline.cs","sloc":60,"content":"gn page_timeline\n fn compare_date x y\n  check is_obj x\n  check is_obj y\n  \n  let left time_parse x.date\n  let right time_parse y.date\n  \n  ret compare left right\n end\n\n let breadcrumb dom_div body\n\n assign document.title \"Timeline\"\n\n dom_a breadcrumb \"Home\" \"/\"\n dom_separator breadcrumb \">\"\n \n let a dom_a breadcrumb \"Timeline\" \"/?p=ti\"\n \n dom_color a \"black\"\n dom_bold a\n dom_br body\n \n let div dom_div body \"Please, be patient. The query takes 20 seconds to execute the first time.\"\n let data run tbl_timeline\n \n sort data compare_date\n \n dom_remove div\n \n let grid grid_init body \"#\" \"Date\" \"Image\" \"Title\" \"Field\" \"Table\"\n\n forin data\n  let i to_i k\n  let n inc i\n  let record at data i\n  let row grid_push grid\n  //let order k\n  \n  forin row\n   let v get row k\n   \n   if same k \"sharp\"\n    dom_text v n\n    //dom_text v order\n   elseif same k \"date\"\n    let text get record k\n    let cell cell_init text\n\n    dom_text v cell\n\n    let time time_parse cell\n    let time time_hn time\n     \n    assign row.date.on_tooltip time\n   elseif same k \"image\"\n    let text get record k\n\n    if not is_null text\n     let cell cell_init text\n     \n     cell_image_resize cell line\n\n     dom_push v cell\n\n     let cell dom_clone cell\n\n     cell_image_resize cell field_width_small\n     \n     assign v.on_tooltip dom_html_outer cell\n    end\n   elseif same k \"title\"\n    let text get record k\n    let url concat \"/?n=\" record.table_id \"_\" record.row_id\n    \n    dom_a v text url true\n   elseif same k \"row_id\"\n   else\n    let text get record k\n    \n    dom_text v text \n   end\n  end  \n end\n \n grid_align grid \"sharp\" \"right\"\nend"},"paren":{"id":"paren","name":"paren","branch":"prg-compile","path":"prg-compile/level-b/paren.js","sloc":5,"content":"function paren(x)\n{\n check(is_str,x)\n \n return concat(\"(\",x,\")\")\n}"},"parse":{"id":"parse","name":"parse","branch":"prg-compile","path":"prg-compile/level-b/parse.js","sloc":83,"content":"function parse(x)\n{\n check(is_str,x)\n \n function inline(x)\n {\n  check(is_str,x)\n  \n  const s=trim_l(x)\n  const indent=sub(x.length,s.length)\n  const parameters=recognize(x)\n  \n  if(is_empty(parameters))\n   return null\n  \n  let operator=front(parameters)\n  \n  if(is_name(operator))\n   shift(parameters)\n  else\n   operator=\"data\"\n  \n  return {indent,operator,parameters}\n }\n \n function fold(x)\n {\n  check(is_arr,x)\n  \n  const parent=shift(x)\n  const indent=parent.indent\n  const descendants=arr()\n  \n  while(is_full(x))\n  {\n   const o=front(x)\n   \n   if(gt(o.indent,indent))\n   {\n    shift(x)\n    push(descendants,o)\n   }\n   else\n    break\n  }\n\n  const children=arr()\n  \n  while(is_full(descendants))\n  {\n   const o=fold(descendants)\n   \n   push(children,o)\n  }\n  \n  const operator=parent.operator\n  const parameters=parent.parameters\n  \n  return {operator,parameters,children}\n }\n \n function simplify(x)\n {\n  check(is_arr,x)\n  \n  const r=arr()\n  \n  for(const v of x)\n  {\n   const operator=v.operator\n   \n   let skip=false\n   \n   if(same(operator,\"begin\"))\n    skip=true\n   else if(same(operator,\"end\"))\n    skip=true\n    \n   if(is_full(v.children))\n    skip=false\n    \n   if(skip)\n    continue\n   \n   const parameters=v.parameters\n   const children=simplify(v.children)\n   const o={operator,parameters,children}\n   \n   push(r,o)\n  }\n  \n  return r\n }\n \n const lines=arr()\n \n for(const v of split(x))\n {\n  const o=inline(v)\n  \n  if(!is_null(o))\n   push(lines,o)\n }\n\n const nodes=arr()\n \n while(is_full(lines))\n {\n  const o=fold(lines)\n  \n  push(nodes,o)\n }\n \n return simplify(nodes)\n}"},"partial":{"id":"partial","name":"partial","branch":"prg-compile","path":"prg-compile/level-c/partial.cs","sloc":9,"content":"fn partial x y:spread\n check is_fn x\n \n let fn x\n let parameters y\n \n fn r x:spread\n  ret fn parameters:spread x:spread\n end\n \n ret r\nend"},"pass-block":{"id":"pass-block","name":"pass-block","branch":"prg-compile","path":"prg-compile/src/pass/pass-block.js","sloc":11,"content":"function pass_block(x)\n{\n check(is_arr,x)\n \n const a=arr()\n \n for(const v of x)\n {\n  const s=ast_translate(v)\n  \n  push(a,s)\n }\n \n return join(a)\n}"},"pass-parse":{"id":"pass-parse","name":"pass-parse","branch":"prg-compile","path":"prg-compile/src/pass/pass-parse.js","sloc":44,"content":"function pass_parse(x)\n{\n check(is_str,x)\n \n function process(x)\n {\n  check(is_str,x)\n  \n  if(is_file(x))\n  {\n   const ext=path_ext(x)\n   const source=file_read(x)\n   \n   if(same(ext,\"js\"))\n   {\n    const code=uncomment(source)\n    const nodes=arr()\n    \n    for(const v of split(code))\n    {\n     const s=to_lit(v)\n     const operator=\"inline\"\n     const parameters=arr(s)\n     const children=arr()\n     const node={operator,parameters,children}\n     \n     push(nodes,node)\n    }    \n    \n    return nodes\n   }\n   else   \n    return parse(source)\n  }\n  else if(is_dir(x))\n  {\n   const r=arr()\n   \n   for(const v of dir_read_rec(x))\n   {\n    const a=pass_parse(v)\n    \n    append(r,a)\n   }\n   \n   return r\n  }\n  else\n   stop()\n }\n \n const path=path_real(x)\n \n return process(path)\n}"},"pass-preprocess":{"id":"pass-preprocess","name":"pass-preprocess","branch":"prg-compile","path":"prg-compile/src/pass/pass-preprocess.js","sloc":20,"content":"function pass_preprocess(x,y)\n{\n check(is_arr,x)\n check(is_str,y)\n\n const r=arr()\n \n for(const v of x)\n {\n  const operator=v.operator\n  \n  if(same(operator,\"include\"))\n  {\n   let a=v\n   \n   a=ast_include(a,y)\n   a=pass_preprocess(a,y)\n   \n   append(r,a)\n  }\n  else\n   push(r,v)\n }\n\n return r\n}"},"pass-scope":{"id":"pass-scope","name":"pass-scope","branch":"prg-compile","path":"prg-compile/src/pass/pass-scope.js","sloc":60,"content":"function pass_scope(x)\n{\n check(is_arr,x)\n \n function is_declare(x)\n {\n  if(same(x,\"let\"))\n   return true\n\n  if(same(x,\"var\"))\n   return true\n  \n  return false\n }\n \n const r=arr()\n const a=dup(x)\n \n while(is_full(a))\n {\n  const node=shift(a)\n  const operator=node.operator\n  const parameters=node.parameters\n  const declare=operator\n  const name=front(parameters)\n  const rvalue=slice(parameters,1)\n  \n  if(is_declare(operator))\n  {   \n   let operator=null\n   \n   if(is_cs())\n    operator=\"let\"\n   else if(is_cu())\n    operator=\"var\"\n   else\n    stop()   \n   \n   let parameters=arr(\"_\",...rvalue)\n   let children=arr()\n   \n   const node2={operator,parameters,children}\n   \n   push(r,node2)\n   \n   operator=\"begin\"\n   parameters=arr()\n   children=arr()\n   \n   const node3={operator,parameters,children}\n\n   push(r,node3)\n    \n   operator=declare\n   parameters=arr(name,\"_\")\n   children=arr()\n     \n   const node4={operator,parameters,children}\n   \n   push(node3.children,node4)\n\n   operator=\"begin\"\n   parameters=arr()\n   children=pass_scope(a)\n   \n   const node5={operator,parameters,children}\n\n   push(node3.children,node5)\n   \n   clear(a)\n  }\n  else\n  {\n   const children=pass_scope(node.children)\n   const node2={operator,parameters,children}\n   \n   push(r,node2)\n  }\n }\n \n return r\n}"},"pass-shebang":{"id":"pass-shebang","name":"pass-shebang","branch":"prg-compile","path":"prg-compile/src/pass/pass-shebang.js","sloc":18,"content":"function pass_shebang(x,y)\n{\n check(is_arr,x)\n check(is_obj,y)\n\n y.shebang=false\n   \n const first=front(x)\n const operator=first.operator\n \n if(same(operator,\"data\"))\n {\n  const command=implode(first.parameters)\n  \n  if(match_l(command,\"#!\"))\n  {\n   y.shebang=true   \n   \n   return slice(x,1)\n  }\n }\n \n return x\n}"},"path-base":{"id":"path-base","name":"path-base","branch":"prg-compile","path":"prg-compile/level-a/path-base.js","sloc":6,"content":"function path_base(x)\n{\n check(is_str,x)\n \n const a=path_split(x)\n \n return back(a)\n}"},"path-concat":{"id":"path-concat","name":"path-concat","branch":"prg-compile","path":"prg-compile/level-a/path-concat.js","sloc":4,"content":"function path_concat(...x)\n{\n return join(x,\"/\")\n}"},"path-dir":{"id":"path-dir","name":"path-dir","branch":"prg-compile","path":"prg-compile/level-a/path-dir.js","sloc":5,"content":"function path_dir(x)\n{\n check(is_str,x)\n \n return path.dirname(x)\n}"},"path-drop":{"id":"path-drop","name":"path-drop","branch":"prg-compile","path":"prg-compile/level-c/path-drop.cs","sloc":6,"content":"fn path_drop x\n check is_str x\n \n let a path_split x\n \n drop a\n \n ret path_join a\nend"},"path-ext":{"id":"path-ext","name":"path-ext","branch":"prg-compile","path":"prg-compile/level-b/path-ext.js","sloc":11,"content":"function path_ext(x)\n{\n check(is_str,x)\n \n if(is_dot_file(x))\n  return \"\"\n \n const base=path_base(x)\n const a=split(base,\".\")\n \n if(is_single(a))\n  return \"\"\n \n return back(a)\n}"},"path-fix":{"id":"path-fix","name":"path-fix","branch":"prg-compile","path":"prg-compile/level-c/path-fix.cs","sloc":6,"content":"fn path_fix x\n check is_str x\n \n if not match_r x \"/\"\n  ret concat x \"/\"\n  \n ret x\nend"},"path-join":{"id":"path-join","name":"path-join","branch":"prg-compile","path":"prg-compile/level-c/path-join.cs","sloc":4,"content":"fn path_join x\n check is_arr x\n \n ret join x \"/\"\nend"},"path-name":{"id":"path-name","name":"path-name","branch":"prg-compile","path":"prg-compile/level-a/path-name.js","sloc":6,"content":"function path_name(x)\n{\n check(is_str,x)\n \n const o=path.parse(x)\n \n return o.name\n}"},"path-real":{"id":"path-real","name":"path-real","branch":"prg-compile","path":"prg-compile/level-a/path-real.js","sloc":5,"content":"function path_real(x)\n{\n check(is_str,x)\n \n return fs.realpathSync(x)\n}"},"path-split":{"id":"path-split","name":"path-split","branch":"prg-compile","path":"prg-compile/level-a/path-split.js","sloc":5,"content":"function path_split(x)\n{\n check(is_str,x)\n \n return split(x,\"/\")\n}"},"php-lint":{"id":"php-lint","name":"php-lint","branch":"lib-deploy","path":"lib-deploy/src/php-lint.cs","sloc":13,"content":"fn php_lint x\n check is_str x\n \n forof dir_read_rec x\n  let ext path_ext v\n  \n  if same ext \"php\"\n   let s os_execute \"php\" \"-l\" v\n   \n   if match_l s \"No syntax errors\"\n    cont\n   \n   log s\n   stop\n  end\n end\nend"},"pms-body":{"id":"pms-body","name":"pms-body","branch":"spa-vps-admin","path":"spa-vps-admin/src/pms-body.cs","sloc":42,"content":"fn pms_body\n fn on_logout\n  login_reset\n  location.reload\n end\n\n var sibling null\n var children null\n var content null\n\n if mobile\n  dom_padding body padding \n  \n  let table dom_table body\n  let tr dom_tr table\n\n  assign sibling dom_td tr\n  assign children dom_td tr\n  assign content dom_div body\n  \n  dom_width table \"100%\"\n  dom_valign sibling \"top\"\n  dom_valign children \"top\"  \n\n  dom_width sibling \"50%\"\n  dom_width children \"50%\"  \n else  \n  let table dom_table body\n  let tr dom_tr table\n  \n  assign sibling dom_td tr\n  assign content dom_td tr\n  assign children dom_td tr\n  \n  dom_width table \"100%\"\n  dom_width sibling \"20%\"\n  dom_width children \"20%\"\n  dom_valign sibling \"top\"\n  dom_valign content \"top\"\n  dom_valign children \"top\"\n end\n \n let div dom_div content\n \n dom_br div\n \n let breadcrumb dom_div content\n let a dom_a breadcrumb \"Home\" \"/\"\n\n dom_separator breadcrumb \">\"\n \n let a dom_a children \"Logout\"\n \n assign a.onclick on_logout\n \n ret obj content sibling children breadcrumb\nend"},"pms-desktop-slider":{"id":"pms-desktop-slider","name":"pms-desktop-slider","branch":"spa-vps","path":"spa-vps/src/pms-desktop-slider.cs","sloc":101,"content":"//https://stackoverflow.com/questions/2941189/how-to-overlay-one-div-over-another-div\n\ngn pms_desktop_slider\n let urls arr\n let imgs arr\n let spans arr\n var current_image 0\n var timer -1\n \n fn on_click x\n  check is_uint x\n  \n  forin urls\n   let i to_i k\n   let img at imgs i\n   let span at spans i\n   \n   dom_display img \"none\"\n   dom_color_background span \"indigo\"\n  end\n  \n  let img at imgs x\n  let span at spans x\n  \n  dom_display img \"inline\"\n  dom_color_background span \"violet\"\n  \n  assign current_image x\n\n  on_move\n end\n  \n fn on_move\n  let period 4\n  \n  if gt timer 0\n   timer_clear timer\n  \n  assign timer timer_timeout on_timer period\n end\n\n fn on_timer x\n  assign current_image inc current_image\n  \n  if gte current_image urls.length\n   assign current_image 0\n\n  on_click current_image\n end\n\n let r dom_div body\n\n push urls \"/palette1.png\"\n push urls \"/palette2.png\"\n push urls \"/palette3.png\"\n\n dom_align r \"center\"\n\n let tweak from_vw \"0.5vw\"\n\n let padding from_vw padding\n let padding mul padding 2\n let padding add padding tweak\n \n let width call dom_window_width\n let width sub width padding \n let vw_width to_vw width\n var height 0\n \n forin urls\n  let i to_i k\n  let v at urls i\n  let img dom_img r v\n  \n  dom_position img \"absolute\"\n  dom_top img 0\n  dom_left img 0\n  dom_width img vw_width\n  \n  while true\n   if img.complete\n    brk\n    \n   yield\n  end\n    \n  assign height max height img.offsetHeight\n  \n  push imgs img\n end\n \n let vw_height to_vw height\n \n dom_height r vw_height\n\n forof imgs\n  dom_height v vw_height\n end \n  \n let div dom_div r\n let size \"2.2mw\"\n let padding from_vw \"1mw\"\n \n dom_height div size\n dom_align div \"center\"\n \n forin urls\n  let i to_i k\n  let v at urls i\n  let span dom_span div\n  \n  assign span.onclick partial on_click i\n  \n  dom_display span \"inline-block\"\n  dom_width span size\n  dom_height span size   \n  dom_border_radius span border_radius_small\n  dom_over span \"cursor\" \"pointer\"\n  \n  let last dec urls.length\n  \n  if lt i last\n   dom_margin_right span padding\n\n  push spans span\n end\n\n dom_position r \"relative\"\n dom_width r vw_width\n dom_height r vw_height\n \n let y div.offsetHeight\n let y sub height y padding\n\n dom_position div \"absolute\" \n dom_left div 0\n dom_width div vw_width\n dom_top div y\n \n on_click current_image\n\n document.addEventListener \"mousemove\" on_move\n  \n ret r\nend"},"pms-home-body":{"id":"pms-home-body","name":"pms-home-body","branch":"spa-vps-admin","path":"spa-vps-admin/src/pms-home-body.cs","sloc":9,"content":"gn pms_home_body\n assign document.title \"Manage my account\"\n\n let body call pms_body\n let sibling body.sibling\n let breadcrumb body.breadcrumb\n \n dom_display breadcrumb \"none\"\n \n let div dom_div sibling\n let a dom_a div \"Pages\" \"/?q=pl\"\nend"},"pms-login":{"id":"pms-login","name":"pms-login","branch":"spa-vps-admin","path":"spa-vps-admin/src/pms-login.cs","sloc":59,"content":"gn pms_login\n var dlg null\n var mail null\n var password null\n \n gn on_enter x y z\n  check is_obj x\n  check is_obj y\n  check is_obj z\n  \n  run on_login x y z\n end\n \n gn on_login\n  let mail mail.value\n  \n  if is_empty mail\n   run dlg_alert \"Mail is required.\"\n   \n   ret\n  end\n  \n  if not is_mail mail\n   run dlg_alert \"Mail is invalid.\"\n   \n   ret\n  end\n\n  let password password.value\n\n  if is_empty password\n   run dlg_alert \"Password is required.\"\n   \n   ret\n  end\n      \n  let password base36_salt password \"mabynogy\"\n  \n  login_update mail password\n\n  if run api_login mail password\n   dlg_close dlg\n  else\n   run dlg_alert \"Connexion refused.\" \"Retry\"\n end\n \n fn on_cancel x\n  check is_obj x\n  \n  x.preventDefault\n end\n \n let login call login_init\n\n if run api_login login.mail login.password\n  ret\n\n assign dlg dlg_init \"Please, fill the form below to continue.\"\n \n dom_bold_no dlg.title\n \n //mail\n \n assign mail dlg_push dlg \"Mail\"\n\n dom_width mail field_width_medium\n \n assign mail.name \"email\"\n assign mail.type \"email\"\n assign mail.value login.mail\n \n //password\n\n assign password dlg_push dlg \"Password\"\n\n dom_width password field_width_medium\n\n assign password.name \"password\"\n assign password.type \"password\"\n assign password.value login.password\n assign password.value base36_unsalt password.value \"mabynogy\"\n \n //login\n \n let login dlg_button dlg \"Login\"\n let on_login gn_forward on_login\n\n assign dlg.dialog.onenter on_login\n assign login.onclick on_login\n dlg.dialog.addEventListener \"cancel\" on_cancel\n \n run dlg_modal dlg  \nend"},"pms-page-admin-links":{"id":"pms-page-admin-links","name":"pms-page-admin-links","branch":"spa-vps","path":"spa-vps/src/pms-page-admin-links.cs","sloc":35,"content":"fn pms_page_admin_links x\n check is_obj x\n\n fn on_enter x\n  check is_obj x\n  \n  forof x.children\n   dom_visible v \"visible\"\n  end\n end\n\n fn on_click x\n  check is_obj x\n  \n  on_enter x\n end\n \n fn on_link x y\n  check is_obj x\n  check is_obj y\n\n  let edit concat \"https://admin.pimaastore.com/?q=p,\" y.id\n  let mobile concat \"/?n=\" y.id \"&v=m\"\n  let desktop concat \"/?n=\" y.id \"&v=d\"\n  let o obj edit mobile desktop\n  let url get o x.value\n\n  open url \"_blank\"\n end\n\n let div dom_div body\n let choose \"<<choisir>>\"\n let edit \"Modifier\"\n let mobile \"Mobile\"\n let desktop \"Desktop\"\n let o obj choose edit mobile desktop\n let select dom_select div o\n\n dom_padding_top div padding\n dom_visible select \"hidden\"\n\n assign div.onmouseenter partial on_enter div\n assign div.onclick partial on_click div\n \n assign select.onchange partial on_link select x\nend"},"pms-page-body":{"id":"pms-page-body","name":"pms-page-body","branch":"spa-vps-admin","path":"spa-vps-admin/src/pms-page-body.cs","sloc":72,"content":"gn pms_page_body x y\n if is_undef x\n  ret run pms_page_body -1 y\n  \n check is_int x\n \n if is_undef y\n  ret run pms_page_body x -1\n\n check is_int y\n \n var page null\n var parent_a null\n var title null\n var content null\n\n if lt x 0\n  assign page call db_page_new  \n  assign page.parent y\n  assign page.title run ui_page_find_title\n  assign page.order run api_table_count \"page\"\n else\n  assign page run db_page_init x\n\n gn on_parent\n  let parent run pms_pick_page page.id page.parent\n  \n  if same parent page.parent\n   ret\n   \n  assign page.parent parent\n     \n  let title run ui_page_title page.parent\n\n  dom_text parent_a title\n end\n \n gn on_save\n  assign page.title trim_r title.value\n  assign page.content trim_r content.value\n  \n  var replace false\n  \n  if lt page.id 0\n   assign page run api_table_insert \"page\" page\n   assign replace true\n  else  \n   run api_table_update \"page\" page   \n\n  run dlg_alert \"Data saved.\"\n\n  if replace\n   let url concat \"/?q=p,\" page.id\n   \n   location.replace url\n  end\n end\n \n assign document.title \"Edit a page\"\n\n let body call pms_body\n let breadcrumb body.breadcrumb\n let content_body body.content\n let children body.children\n \n let node breadcrumb.children.item 0\n \n dom_remove node\n\n let node breadcrumb.children.item 0\n\n dom_remove node\n \n let a dom_a breadcrumb \"Page list\" \"/?q=pl\" \n\n dom_separator breadcrumb \">\"\n\n let b dom_b breadcrumb \"Edit a page\"\n \n dom_br content_body\n \n let form form_init content_body \n \n //parent\n \n let div form_push form \"Parent\" \"div\"\n let parent_title run ui_page_title page.parent\n \n assign parent_a dom_a div parent_title\n assign parent_a.onclick gn_forward on_parent\n \n //title\n\n assign title form_push form \"Title\"\n assign title.value page.title\n \n //content\n\n assign content form_push form \"Content\" \"textarea\"\n assign content.value page.content\n \n //save\n \n assign save form_button form \"Save\" \n assign save.onclick gn_forward on_save\n \n //view links\n \n let div dom_div children\n let url concat \"https://pimaastore.com/?n=\" x\n \n dom_a div \"View page\" url\n\n let div dom_div children\n let url concat \"/?q=p,\" x \"&v=m\"\n\n dom_a div \"Edit page mobile\" url\nend"},"pms-page-breadcrumb":{"id":"pms-page-breadcrumb","name":"pms-page-breadcrumb","branch":"spa-vps","path":"spa-vps/src/pms-page-breadcrumb.cs","sloc":23,"content":"fn pms_page_breadcrumb x y\n check is_obj x\n check is_uint y\n \n if same x.title \"Accueil\"\n  ret null\n\n let r dom_div body\n \n let ancestors x.ancestors\n let ancestors tail ancestors y\n\n dom_a r \"Accueil\" \"/\"\n\n let separator dom_span r \" > \"\n   \n dom_color separator \"gray\"\n  \n forin ancestors\n  let i to_i k\n  let v at ancestors i\n\n  if same v.title \"Accueil\"\n   cont\n   \n  dom_a r v.title v.url   \n   \n  let separator dom_span r \" > \"\n  \n  dom_color separator \"gray\"\n end\n\n dom_span r x.title\n \n ret r\nend"},"pms-page-cursor":{"id":"pms-page-cursor","name":"pms-page-cursor","branch":"spa-vps","path":"spa-vps/src/pms-page-cursor.cs","sloc":10,"content":"fn pms_page_cursor x\n check is_obj x\n \n if same x.title \"Accueil\"\n  ret null\n  \n let r dom_div body\n \n dom_a r \"<<\" x.previous.url\n dom_separator r \n dom_a r \">>\" x.next.url\n\n ret r\nend"},"pms-page-desktop-content":{"id":"pms-page-desktop-content","name":"pms-page-desktop-content","branch":"spa-vps","path":"spa-vps/src/pms-page-desktop-content.cs","sloc":80,"content":"fn pms_page_desktop_content x\n check is_obj x\n\n fn get_siblings x\n  check is_obj x\n  \n  let siblings x.siblings\n  \n  if is_empty siblings\n   ret null\n  \n  let r dom_div body\n  \n  dom_align r \"right\"\n  \n  forof siblings\n   let div dom_div r\n   let a dom_a div v.title v.url\n   \n   dom_class a \"menu\"\n  end\n  \n  ret r\n end\n\n fn get_children x\n  check is_obj x\n  \n  let children x.children\n  \n  if is_empty children\n   ret null\n  \n  let r dom_div body\n    \n  forof children\n   let div dom_div r\n   let a dom_a div v.title v.url\n\n   dom_class a \"menu\"\n  end\n  \n  ret r\n end\n \n dom_br body\n\n let table dom_table body\n let tr dom_tr table\n let left dom_td tr\n let middle dom_td tr\n let right dom_td tr\n\n dom_width table \"100%\"\n dom_width left \"20%\"\n dom_width right \"20%\"\n dom_valign left \"top\"\n dom_valign middle \"top\"\n dom_valign right \"top\"\n\n dom_padding_right left spacing\n dom_padding_right middle spacing\n dom_padding_left middle spacing\n dom_padding_left right spacing\n\n dom_border_right left border\n dom_border_left right border\n\n let siblings get_siblings x\n \n if not is_null siblings\n  dom_push left siblings\n  \n let children get_children x\n\n if not is_null children\n  dom_push right children \n  \n let breadcrumb pms_page_breadcrumb x 3\n \n if not is_null breadcrumb\n  let cursor pms_page_cursor x\n  let table dom_table body\n  let tr dom_tr table\n  let left dom_td tr\n  let right dom_td tr\n  \n  dom_width table \"100%\"\n  dom_width right \"12mw\"\n  dom_align right \"right\"\n \n  dom_push left breadcrumb\n  dom_push right cursor\n  dom_push middle table\n  dom_br middle\n end\n \n if is_empty x.ancestors\n  dom_remove left\n else\n  let div dom_div middle x.title\n\n  dom_bold div\n  dom_br middle\n end\n\n let content dom_div middle\n \n assign content.id \"content\"\n dom_html content x.content\n \n dom_br middle\nend"},"pms-page-desktop-footer":{"id":"pms-page-desktop-footer","name":"pms-page-desktop-footer","branch":"spa-vps","path":"spa-vps/src/pms-page-desktop-footer.cs","sloc":36,"content":"fn pms_page_desktop_footer x\n check is_obj x\n\n fn on_enter x\n  check is_obj x\n  \n  forof x.children\n   dom_visible v \"visible\"\n  end\n end\n\n let div dom_div body\n let table dom_table div\n let tr dom_tr table\n \n dom_padding div spacing\n dom_color_background div \"whitesmoke\"\n dom_width table \"100%\"\n \n forof x.footer\n  let td dom_td tr\n  let div dom_div td\n  let a dom_a div v.title v.url\n\n  dom_width td \"33%\"\n  dom_valign td \"top\"\n  dom_class a \"menu\"  \n  dom_bold a\n  \n  let node v\n  \n  forof node.children\n   let div dom_div td\n   let a dom_a div v.title v.url\n\n   dom_class a \"gray\"\n   dom_over a \"color\" \"white\"\n  end\n end\n\n let td dom_td tr\n let social call pms_social\n\n dom_align td \"right\"\n dom_valign td \"bottom\"   \n dom_push td social \nend"},"pms-page-desktop-header":{"id":"pms-page-desktop-header","name":"pms-page-desktop-header","branch":"spa-vps","path":"spa-vps/src/pms-page-desktop-header.cs","sloc":64,"content":"fn pms_page_desktop_header x y\n check is_obj x\n check is_arr y\n \n let table dom_table body\n let tr1 dom_tr table\n let tr2 dom_tr table\n let left1 dom_td tr1\n let middle dom_td tr1\n let right1 dom_td tr1\n let left2 dom_td tr2\n let right2 dom_td tr2\n let a dom_a middle \"\" \"/\"\n let img dom_img a \"/logo.png\"\n\n dom_class a \"image-link\"\n dom_width table \"100%\"\n dom_height left1 \"6mw\"\n dom_height right1 \"6mw\"\n \n dom_border_bottom left1 border\n dom_border_bottom right1 border\n \n dom_rowspan middle 2\n dom_align middle \"center\"\n dom_valign middle \"bottom\"\n \n dom_width left1 \"45%\"\n dom_align right1 \"right\"\n dom_width right1 \"45%\"\n \n dom_width img \"12mw\"\n \n dom_valign left1 \"top\"\n dom_valign left2 \"bottom\"\n dom_valign right2 \"bottom\"\n\n dom_align left2 \"right\"\n \n let social call pms_social\n \n dom_push left1 social\n \n //basket\n \n let a dom_a right1 \"\" \"/?n=1\" \n \n dom_class a \"menu\"\n\n let img dom_img a \"/basket-512x512.png\"\n\n dom_position img \"relative\"\n dom_top img \"0.2mw\"\n dom_width img \"1.8mw\"\n\n let span dom_span a \" Panier (0)\"\n\n forin y\n  let i to_i k\n  let v at y i\n  let url concat \"/?n=\" v.id\n  var td left2\n  let half div y.length 2\n  let half trunc half\n  var a null\n  \n  if gte i half\n   assign td right2\n   \n  if same v.title \"Recherche\"\n   assign a dom_a td \"\" url\n\n   dom_class a \"menu\"\n   \n   let img dom_img a \"/magnifying-glass-356x293.png\"\n\n   dom_width img \"1.4mw\"\n  else\n   assign a dom_a td v.title url  \n  \n  dom_margin_left a \"0.8mw\"\n  dom_margin_right a \"0.8mw\"\n  dom_padding_left a \"0.4mw\"\n  dom_padding_right a \"0.4mw\"\n  \n  dom_class a \"menu\"\n    \n  dom_small_caps a  \n end \nend"},"pms-page-list-body":{"id":"pms-page-list-body","name":"pms-page-list-body","branch":"spa-vps-admin","path":"spa-vps-admin/src/pms-page-list-body.cs","sloc":101,"content":"gn pms_page_list_body\n gn on_page_move x\n  check is_obj x\n\n  let page db_page_import x\n  let parent run pms_pick_page page.id page.parent\n  \n  if different parent page.parent\n   assign page.parent parent\n   \n   run api_table_update \"page\" page\n  end   \n end\n\n gn on_page_add_child x\n  check is_obj x\n\n  let url concat \"/?q=pn,\" x.id\n  \n  open url \"_blank\"\n end\n\n gn on_page_up x\n  check is_obj x\n  \n  run ui_page_up x\n end\n\n gn on_page_down x\n  check is_obj x\n  \n  run ui_page_down x\n end\n\n gn on_page_top x\n  check is_obj x\n  \n  run ui_page_top x\n end\n\n gn on_page_bottom x\n  check is_obj x\n  \n  run ui_page_bottom x\n end\n \n gn on_page_delete x\n  check is_obj x\n  \n  if run dlg_confirm\n   run ui_page_delete x\n end\n\n gn on_operation x y\n  check is_obj x\n  check is_obj y\n  \n  let up on_page_up\n  let down on_page_down\n  let top on_page_top\n  let bottom on_page_bottom\n  let move on_page_move\n  let add on_page_add_child\n  let delete_ on_page_delete\n  let o obj up down top bottom move add delete_\n  let gn get o x.value\n  \n  gn_run gn on_finish y\n end\n \n fn on_finish\n  location.reload\n end\n\n assign document.title \"View the page list\"\n\n let body call pms_body\n let breadcrumb body.breadcrumb\n let sibling body.sibling\n let content body.content\n let children body.children\n let a dom_a breadcrumb \"Page list\" \"/?q=pl\"\n \n dom_bold a\n dom_color a \"black\"\n \n let div dom_div children\n let a dom_a div \"Add a page\" \"/?q=pn\" true\n\n dom_br content\n \n let pages run ui_page_find\n let grid grid_init content \"Page\" \"Operations\"\n \n dom_width grid.table \"100%\"\n \n forof pages\n  let row grid_push grid\n  let td_page row.page\n  let td_operation row.operations\n  let depth v.ancestors.length\n  let indent repeat nbsp depth\n  let span dom_span td_page indent\n  var title v.title\n  \n  if is_empty title\n   assign title \"<<empty>>\"\n  \n  let url concat \"/?q=p,\" v.id\n  let a dom_a td_page title url true\n\n  let choose \"<<choose>>\"\n  let up \"Up\"\n  let down \"Down\"\n  let top \"Top\"\n  let bottom \"Bottom\"\n  let move \"Move\"\n  let add \"Add\"\n  let delete_ \"Delete\"\n  let o obj choose up down top bottom move add delete_\n  let select dom_select td_operation o\n  \n  assign select.onchange gn_forward on_operation select v\n end \n \n if is_empty pages\n  let cells grid_push grid\n  let td front cells\n  \n  dom_text td \"<<empty>>\"\n  dom_color td \"gray\"\n end\n \n let width from_mw \"9mw\"\n \n grid_column_width grid 1 width\nend"},"pms-page-mobile-content":{"id":"pms-page-mobile-content","name":"pms-page-mobile-content","branch":"spa-vps","path":"spa-vps/src/pms-page-mobile-content.cs","sloc":9,"content":"fn pms_page_mobile_content x\n check is_obj x\n \n let content dom_div body\n \n assign content.id \"content\"\n dom_padding_right content spacing\n dom_padding_left content spacing\n dom_html content x.content\n \n dom_br body\nend"},"pms-page-mobile-footer":{"id":"pms-page-mobile-footer","name":"pms-page-mobile-footer","branch":"spa-vps","path":"spa-vps/src/pms-page-mobile-footer.cs","sloc":9,"content":"fn pms_page_mobile_footer x\n check is_obj x\n \n pms_pages_mobile_menu x.children\n \n let social call pms_social\n let div dom_div body\n \n dom_display social \"inline-block\"\n dom_align div \"right\"\n dom_push div social\nend"},"pms-page-mobile-header":{"id":"pms-page-mobile-header","name":"pms-page-mobile-header","branch":"spa-vps","path":"spa-vps/src/pms-page-mobile-header.cs","sloc":22,"content":"fn pms_page_mobile_header x\n check is_obj x\n \n let container dom_div body\n let div dom_div container\n let a dom_a div \"\" \"/\"\n let img dom_img a \"/logo.png\"\n\n dom_align container \"center\"\n dom_display div \"inline-block\"\n dom_class a \"image-link\"\n dom_br body\n \n let siblings x.siblings\n \n pms_pages_mobile_menu siblings\n \n if is_full siblings\n  dom_br body\n  \n let breadcrumb pms_page_breadcrumb x 2\n \n if not is_null breadcrumb\n  dom_padding_left breadcrumb spacing\n  dom_padding_right breadcrumb spacing\n  dom_push body breadcrumb\n  dom_br body\n end\nend"},"pms-page-sitemap":{"id":"pms-page-sitemap","name":"pms-page-sitemap","branch":"spa-vps","path":"spa-vps/src/pms-page-sitemap.cs","sloc":22,"content":"fn pms_page_sitemap x y\n check is_obj x\n check is_arr y\n \n fn add_node x y z\n  check is_obj x\n  check is_obj y\n  check is_arr z\n\n  let li dom_li x\n  let url concat \"/?n=\" y.id\n  let a dom_a li y.title url  \n  let ul dom_ul x\n  \n  forof z\n   let li dom_li ul\n   \n   add_node li v v.children\n  end\n end\n \n let dom_by_id \"content\"\n let ul dom_ul content\n \n forof y\n  add_node ul v v.children\n end\nend"},"pms-pages":{"id":"pms-pages","name":"pms-pages","branch":"spa-vps","path":"spa-vps/src/pms-pages.cs","sloc":21,"content":"gn pms_pages\n fn get_footer x\n  check is_arr x\n  \n  let r arr\n  let ids arr 10 18 28\n  \n  forof x\n   if contain ids v.id\n    push r v\n  end\n  \n  ret r\n end\n\n let r run ui_page_list\n let r to_flat r\n \n forof r\n  assign v.content to_html v.content\n  assign v.url concat \"/?n=\" v.id\n  assign v.footer get_footer r\n end\n \n let r to_tree r\n \n ret r\nend"},"pms-pages-get":{"id":"pms-pages-get","name":"pms-pages-get","branch":"spa-vps","path":"spa-vps/src/pms-pages-get.cs","sloc":17,"content":"fn pms_pages_get x y\n check is_arr x\n check is_int y\n \n fn get_child x y\n  check is_arr x\n  check is_int y\n  \n  forof x\n   if same v.id y\n    ret v\n    \n   let r get_child v.children y\n  \n   if is_obj r\n    ret r\n  end\n  \n  ret null\n end\n \n ret get_child x y\nend"},"pms-pages-mobile-menu":{"id":"pms-pages-mobile-menu","name":"pms-pages-mobile-menu","branch":"spa-vps","path":"spa-vps/src/pms-pages-mobile-menu.cs","sloc":28,"content":"fn pms_pages_mobile_menu x\n check is_arr x\n \n if is_empty x\n  ret\n  \n let table dom_table body\n let tr dom_tr table\n let td1 dom_td tr\n let td2 dom_td tr\n \n dom_width table \"100%\"\n dom_align td1 \"right\"\n dom_valign td1 \"top\"\n dom_valign td2 \"top\"\n dom_width td1 \"50%\"\n dom_width td2 \"50%\"\n dom_padding_right td1 spacing\n dom_padding_left td2 spacing\n dom_border_right td1 border\n \n forin x\n  let i to_i k\n  let v at x i\n  let half div x.length 2\n  var cell td1\n  \n  if gt i half\n   assign cell td2\n  \n  let div2 dom_div cell\n  \n  dom_a div2 v.title v.url  \n end\nend"},"pms-pick-page":{"id":"pms-pick-page","name":"pms-pick-page","branch":"spa-vps-admin","path":"spa-vps-admin/src/pms-pick-page.cs","sloc":61,"content":"gn pms_pick_page x y\n check is_int x\n check is_int y\n\n var r y\n var dlg null\n let parent y\n \n fn on_click x\n  check is_int x\n  \n  assign r x\n  \n  dlg_close dlg\n end\n\n fn on_cancel\n  assign r parent\n  \n  dlg_close dlg\n end\n \n fn is_descendant x y\n  check is_obj x\n  check is_int y\n  \n  if lt y 0\n   ret false\n  \n  forof x.ancestors\n   if same v.id y\n    ret true\n  end\n  \n  ret false\n end\n\n assign dlg dlg_init \"Select a page\"\n \n let pages run ui_page_find\n \n let div dom_div dlg.container\n let a dom_a div \"<<none>>\"\n \n if same y -1\n  dom_color a \"gray\"\n\n dom_align div \"left\"\n\n assign a.onclick partial on_click -1\n \n forof pages\n  let div dom_div dlg.container\n  let depth v.ancestors.length\n  let indent repeat nbsp depth\n  \n  dom_span div indent  \n  dom_align div \"left\"\n  \n  if same v.id x\n   dom_span div v.title\n   dom_color div \"gray\"\n  elseif is_descendant v x\n   dom_span div v.title\n   dom_color div \"gray\"\n  else\n   let a dom_a div v.title\n   \n   if same v.id y\n    dom_bold a\n    dom_color a \"black\"\n   end\n   \n   assign a.onclick partial on_click v.id\n  end\n end\n \n dom_br dlg.container\n \n //cancel\n \n let cancel dlg_button dlg \"Cancel\"\n \n assign cancel.onclick partial on_cancel\n \n //modal\n\n run dlg_modal dlg\n \n ret r\nend"},"pms-social":{"id":"pms-social","name":"pms-social","branch":"spa-vps","path":"spa-vps/src/pms-social.cs","sloc":27,"content":"fn pms_social\n let r dom_table body\n let tr dom_tr r\n\n dom_color_background r \"whitesmoke\"\n \n //instagram\n\n let td dom_td tr\n let a dom_a td \"\" \"https://www.instagram.com/pimanails\" \n let img dom_img a \"/instagram-1850x1850.png\"\n\n dom_padding td padding\n dom_class a \"image-link\"\n dom_width img \"2.2mw\"\n dom_filter img \"grayscale(100%)\"\n \n //youtube\n\n let td dom_td tr\n let a dom_a td \"\" \"https://www.youtube.com/\" \n let img dom_img a \"/youtube-5000x5000.png\"\n\n dom_padding td padding\n dom_class a \"image-link\" \n dom_width img \"2.5mw\"\n dom_filter img \"grayscale(100%)\"\n \n //tiktok\n\n let td dom_td tr\n let a dom_a td \"\" \"https://www.tiktok.com/@pimanailsontiktok\" \n let img dom_img a \"/tiktok-512x512.png\"\n\n dom_padding td padding\n dom_class a \"image-link\" \n dom_width img \"2.3mw\"\n dom_filter img \"grayscale(100%)\"\n \n ret r\nend"},"pop":{"id":"pop","name":"pop","branch":"prg-compile","path":"prg-compile/level-b/pop.js","sloc":11,"content":"function pop(x,y)\n{\n check(is_arr,x)\n \n if(is_undef(y))\n  return x.pop()\n  \n check(is_uint,y)\n  \n const r=slice_r(x,y) \n const n=sub(x.length,y)\n \n remove(x,n,y)\n \n return r\n}"},"prg-editor":{"id":"prg-editor","name":"prg-editor","branch":"prg-editor","path":"prg-editor/prg-editor.cs","sloc":4,"content":"include \"/home/mabynogy/place-hdd/room-prg/prg-compile/level-a\"\ninclude \"/home/mabynogy/place-hdd/room-prg/prg-compile/level-b\"\ninclude \"/home/mabynogy/place-hdd/room-prg/prg-compile/level-c\"\ninclude \"/home/mabynogy/place-hdd/room-prg/prg-editor/src\""},"push":{"id":"push","name":"push","branch":"prg-compile","path":"prg-compile/level-a/push.js","sloc":6,"content":"function push(x,y)\n{\n check(is_arr,x)\n check(is_def,y)\n \n x.push(y)\n}"},"put":{"id":"put","name":"put","branch":"prg-compile","path":"prg-compile/level-b/put.js","sloc":9,"content":"function put(x,y,z)\n{\n check(is_def,x)\n check(is_str,y)\n check(is_def,z)\n \n if(has(x,y))\n  stop()\n\n x[y]=z\n}"},"rand":{"id":"rand","name":"rand","branch":"prg-compile","path":"prg-compile/level-c/rand.cs","sloc":7,"content":"fn rand x\n check is_uint x\n\n let r call Math.random\n let r mul r x\n let r trunc r\n\n ret r\nend"},"range":{"id":"range","name":"range","branch":"prg-compile","path":"prg-compile/level-c/range.cs","sloc":8,"content":"fn range x\n check is_uint x\n \n let r arr\n\n fornum x\n  push r i\n end\n \n ret r\nend"},"recognize":{"id":"recognize","name":"recognize","branch":"prg-compile","path":"prg-compile/level-b/recognize.js","sloc":23,"content":"function recognize(x)\n{\n check(is_str,x)\n \n function deep(x)\n {\n  check(is_str,x)\n  \n  let r=x\n  \n  r=scan(r)\n  r=reject(r,is_trivia)\n  \n  return r\n }\n\n function shallow(x)\n {\n  check(is_str,x)\n  \n  return tokenize(x)  \n }\n \n if(contain(x,\"\\\"\"))\n  return deep(x)\n\n const comment=repeat(\"/\",2)\n\n if(contain(x,comment))\n  return deep(x)\n \n return shallow(x)\n}"},"reject":{"id":"reject","name":"reject","branch":"prg-compile","path":"prg-compile/level-b/reject.js","sloc":15,"content":"function reject(x,y)\n{\n check(is_arr,x)\n check(is_fn,y)\n \n const r=arr()\n \n for(const v of x)\n {\n  const b=y(v)\n\n  if(is_true(b))\n   continue\n\n  check(is_false,b)\n\n  push(r,v)\n }\n \n return r\n}"},"remove":{"id":"remove","name":"remove","branch":"prg-compile","path":"prg-compile/level-a/remove.js","sloc":12,"content":"function remove(x,y,z)\n{\n check(is_arr,x)\n check(is_uint,y)\n\n if(is_undef(z))\n  return remove(x,y,1)\n \n check(is_uint,z)\n\n let n=add(y,z)\n\n check(lt,y,x.length)\n check(lte,n,x.length)\n\n x.splice(y,z)\n}"},"repeat":{"id":"repeat","name":"repeat","branch":"prg-compile","path":"prg-compile/level-b/repeat.js","sloc":6,"content":"function repeat(x,y)\n{\n check(is_str,x)\n check(is_uint,y)\n \n return x.repeat(y)\n}"},"replace":{"id":"replace","name":"replace","branch":"prg-compile","path":"prg-compile/level-a/replace.js","sloc":23,"content":"function replace(x,y,z)\n{\n check(is_vec,x)\n check(is_def,x)\n check(is_def,x)\n \n if(is_str(x))\n {\n  check(is_str,y)\n  check(is_str,z)\n  \n  const a=split(x,y)\n  \n  return join(a,z)\n }\n \n check(is_arr,x)\n \n const r=arr()\n \n for(const v of x)\n {\n  if(same(v,y))\n   push(r,z)\n  else\n   push(r,v)\n }\n \n return r\n}"},"replace-rec":{"id":"replace-rec","name":"replace-rec","branch":"prg-compile","path":"prg-compile/level-c/replace-rec.cs","sloc":10,"content":"fn replace_rec x y z\n check is_vec x\n check is_vec y\n check is_vec z\n \n var r x\n \n while contain r y\n  assign r replace r y z\n end\n \n ret r\nend"},"reverse":{"id":"reverse","name":"reverse","branch":"prg-compile","path":"prg-compile/level-c/reverse.cs","sloc":18,"content":"fn reverse x\n check is_container x\n \n if is_arr x\n  x.reverse\n  \n  ret x\n end\n \n if is_obj x\n  let r obj\n  let keys get_keys x\n  \n  reverse keys\n  \n  forof keys\n   let value get x v\n   \n   put r v value\n  end\n  \n  ret r\n end\n \n stop\nend"},"rsync":{"id":"rsync","name":"rsync","branch":"lib-deploy","path":"lib-deploy/src/rsync.cs","sloc":19,"content":"fn rsync x:spread\n let credential call env_credential \n \n while true\n  log \"rsync\" x:spread\n  \n  let r os_execute \"sshpass\" \"-p\" credential \"rsync\" x:spread\n  let r trim_r r\n  \n  if is_full r\n   forof split r\n    log \"rsync>\" v\n   end\n  end\n\n  if contain r \"error\"\n   let n rand 4\n   \n   sleep n\n   cont\n  end\n  \n  ret r\n end\nend"},"salt":{"id":"salt","name":"salt","branch":"prg-compile","path":"prg-compile/level-c/salt.cs","sloc":18,"content":"fn salt x y\n check is_str x\n check is_str y\n check is_full y\n \n let a arr\n \n forin explode x\n  let i to_i k\n  let v at x i\n  let n asc v\n  let i mod i y.length\n  let v at y i\n  let c asc v\n  let n xor n c\n  let c chr n\n  \n  push a c\n end\n \n ret implode a\nend"},"same":{"id":"same","name":"same","branch":"prg-compile","path":"prg-compile/level-a/same.js","sloc":4,"content":"function same(x,y)\n{\n return x===y\n}"},"scan":{"id":"scan","name":"scan","branch":"prg-compile","path":"prg-compile/level-b/scan.js","sloc":86,"content":"function scan(x,y)\n{\n check(is_str,x)\n\n if(is_undef(y))\n  return scan(x,is_token) \n\n check(is_fn,y)\n \n const fn=y\n \n function delimit(x)\n {\n  check(is_str,x)\n  \n  const r=arr()\n  \n  for(const v of x)\n  {\n   if(is_empty(r))\n   {\n    push(r,v)\n    \n    continue\n   }\n   \n   const left=back(r)\n   const right=v\n   const fragment=concat(left,right)\n   \n   if(is_fragment(fragment))\n   {\n    drop(r)\n    push(r,fragment)\n   } \n   else\n    push(r,right)\n  }\n  \n  return r\n }\n \n function group(x)\n {\n  check(is_arr,x)\n  \n  const r=arr()\n  const a=dup(x)\n  \n  while(is_full(a))\n  {\n   const b=reduce(a)\n   \n   if(is_full(b))\n   {\n    const s=join(b,\"\")\n    \n    push(r,s)\n    shift(a,b.length)\n   }\n   else\n   {\n    const s=shift(a)\n    \n    push(r,s)\n   }   \n  }\n  \n  return r\n }\n \n function reduce(x)\n {\n  check(is_arr,x)\n  check(is_full,x)\n  \n  const r=dup(x)  \n  \n  while(is_full(r))\n  {\n   const s=join(r,\"\")\n   const b=fn(s)\n   \n   if(is_true(b))\n    break\n   \n   check(is_false,b)\n   \n   drop(r)\n  }\n  \n  return r\n }\n\n const r=arr()\n let a=x\n \n a=str_normalize(a)\n a=split(a)\n a=map(a,delimit)\n a=map(a,group)\n \n for(const k in a)\n {\n  const i=to_i(k)\n  const v=at(a,i)\n  const last=dec(a.length)\n  \n  append(r,v)\n  \n  if(different(i,last))\n   push(r,\"\\n\")\n }\n\n return r\n}"},"script-define":{"id":"script-define","name":"script-define","branch":"prg-compile","path":"prg-compile/level-b/script-define.js","sloc":16,"content":"function* script_define(x,y)\n{\n check(is_str,x) \n check(is_str,y)\n\n const inputs=split(y)\n const outputs=arr()\n\n for(const k in inputs)\n {\n  const i=to_i(k)\n  const v=at(inputs,i)\n  const output=decompile(v)\n\n  push(outputs,output)\n  \n  yield\n }\n\n put(scripts,x,outputs)\n}"},"script-system":{"id":"script-system","name":"script-system","branch":"lib-cli","path":"lib-cli/src/script-system.cs","sloc":6,"content":"fn script_system x y:spread\n check is_str x\n check is_file x\n\n let binary call argv_binary\n \n os_system binary \"--trace-uncaught\" x y:spread\nend"},"set":{"id":"set","name":"set","branch":"prg-compile","path":"prg-compile/level-b/set.js","sloc":7,"content":"function set(x,y,z)\n{\n check(is_def,x)\n check(is_str,y)\n check(is_def,z)\n \n x[y]=z\n}"},"shift":{"id":"shift","name":"shift","branch":"prg-compile","path":"prg-compile/level-b/shift.js","sloc":10,"content":"function shift(x,y)\n{\n check(is_arr,x)\n \n if(is_undef(y))\n  return x.shift()\n\n check(is_uint,y)\n \n const r=slice_l(x,y)\n \n remove(x,0,y)\n \n return r\n}"},"shuffle":{"id":"shuffle","name":"shuffle","branch":"prg-compile","path":"prg-compile/level-c/shuffle.cs","sloc":12,"content":"fn shuffle x\n check is_arr x\n \n let r arr\n let a dup x\n\n while is_full a\n  let n rand a.length\n  let v at a n\n\n  remove a n\n  push r v\n end\n\n ret r\nend"},"sitemap-add":{"id":"sitemap-add","name":"sitemap-add","branch":"prg-deploy-doc","path":"prg-deploy-doc/src/sitemap-add.cs","sloc":21,"content":"fn sitemap_add x y\n check is_obj x\n check is_str y\n\n let path strip_l y x.prg\n let path strip_l path \"/\"\n let name path_name path\n let branch path_split path \n let branch front branch path  \n var id name\n var i 1\n \n while has x.entries id\n  assign id name\n  assign id concat id \"-\" i\n  assign i inc i\n end\n \n let content file_read path\n let content trim_r content\n let sloc count_sloc content\n let o obj id name branch path sloc content\n \n put x.entries id o\nend"},"sitemap-html":{"id":"sitemap-html","name":"sitemap-html","branch":"prg-deploy-doc","path":"prg-deploy-doc/src/sitemap-html.cs","sloc":28,"content":"fn sitemap_html x\n check is_obj x\n \n let entries x.entries\n\n forin entries\n  let v get entries k\n  \n  let html html_init \"html\"\n  let head html_init \"head\"\n  let meta html_init \"meta\"\n  let title html_init \"title\"\n  let body html_init \"body\"\n  let script html_init \"script\"\n  let pre html_init \"pre\"\n\n  html_attribute meta \"charset\" \"utf-8\"\n\n  html_text title v.name\n  html_text pre v.content\n\n  html_attribute script \"src\" \"/spa-mabynogy.js\"\n  \n  html_add body script\n  html_add body pre\n  \n  html_add head meta\n  html_add head title\n  \n  html_add html head\n  html_add html body\n  \n  let s html_render html\n  let path concat v.id \"/index.html\"\n  let path path_concat x.tmp path\n  \n  file_save path s\n end\nend"},"sitemap-index":{"id":"sitemap-index","name":"sitemap-index","branch":"prg-deploy-doc","path":"prg-deploy-doc/src/sitemap-index.cs","sloc":20,"content":"fn sitemap_index x\n check is_obj x\n \n let html html_init \"html\"\n let head html_init \"head\"\n let meta html_init \"meta\"\n let title html_init \"title\"\n let body html_init \"body\"\n let script html_init \"script\"\n\n html_attribute meta \"charset\" \"utf-8\"\n\n html_text title \"doc\"\n\n html_attribute script \"src\" \"/spa-mabynogy.js\"\n \n html_add body script\n \n html_add head meta\n html_add head title\n \n html_add html head\n html_add html body\n \n let s html_render html\n let path path_concat x.tmp \"/index.html\"\n \n file_save path s\nend"},"sitemap-init":{"id":"sitemap-init","name":"sitemap-init","branch":"prg-deploy-doc","path":"prg-deploy-doc/src/sitemap-init.cs","sloc":8,"content":"fn sitemap_init x y\n check is_str x\n check is_str y\n \n let tmp x\n let prg y\n let entries obj\n \n ret obj tmp prg entries\nend"},"sitemap-load":{"id":"sitemap-load","name":"sitemap-load","branch":"prg-deploy-doc","path":"prg-deploy-doc/src/sitemap-load.cs","sloc":16,"content":"fn sitemap_load x\n check is_obj x\n\n forof dir_read_rec x.prg\n  if is_sensible v\n   cont\n  \n  let ext path_ext v\n  \n  var add false\n  \n  if same ext \"js\"\n   assign add true\n  elseif same ext \"cs\"\n   assign add true\n\n  if add  \n   sitemap_add x v\n end\n \n assign x.entries obj_sort x.entries\nend"},"sitemap-next":{"id":"sitemap-next","name":"sitemap-next","branch":"spa-mabynogy","path":"spa-mabynogy/src/sitemap-next.cs","sloc":6,"content":"fn sitemap_next x y\n check is_obj x\n check is_str y\n \n let o reverse x\n \n ret sitemap_previous o y\nend"},"sitemap-previous":{"id":"sitemap-previous","name":"sitemap-previous","branch":"spa-mabynogy","path":"spa-mabynogy/src/sitemap-previous.cs","sloc":12,"content":"fn sitemap_previous x y\n check is_obj x\n check is_str y\n \n let keys get_keys x\n var r back keys\n \n forin x\n  if same k y\n   ret r\n   \n  assign r k\n end\n \n ret r\nend"},"sitemap-save":{"id":"sitemap-save","name":"sitemap-save","branch":"prg-deploy-doc","path":"prg-deploy-doc/src/sitemap-save.cs","sloc":6,"content":"fn sitemap_save x\n check is_obj x\n \n let path path_concat x.tmp \"sitemap.json\"\n let data to_json x.entries\n \n file_save path data\nend"},"sleep":{"id":"sleep","name":"sleep","branch":"prg-compile","path":"prg-compile/level-c/sleep.cs","sloc":7,"content":"fn sleep x\n if is_undef x\n  ret sleep 1\n  \n check is_num x\n check gte x 0\n\n os_system \"sleep\" x\nend"},"slice":{"id":"slice","name":"slice","branch":"prg-compile","path":"prg-compile/level-a/slice.js","sloc":13,"content":"function slice(x,y,z)\n{\n check(is_vec,x)\n check(is_num,y)\n \n if(is_undef(z))\n {\n  const n=sub(x.length,y)\n  \n  return slice(x,y,n)\n }\n\n check(is_num,z)\n \n const n=add(y,z)\n \n return x.slice(y,n)\n}"},"slice-l":{"id":"slice-l","name":"slice-l","branch":"prg-compile","path":"prg-compile/level-a/slice-l.js","sloc":6,"content":"function slice_l(x,y)\n{\n check(is_vec,x)\n check(is_uint,y)\n \n return slice(x,0,y)\n}"},"slice-r":{"id":"slice-r","name":"slice-r","branch":"prg-compile","path":"prg-compile/level-a/slice-r.js","sloc":7,"content":"function slice_r(x,y)\n{\n check(is_vec,x)\n check(is_uint,y)\n \n const n=sub(x.length,y)\n \n return slice(x,n,y)\n}"},"sort":{"id":"sort","name":"sort","branch":"prg-compile","path":"prg-compile/level-a/sort.js","sloc":11,"content":"function sort(x,y)\n{\n check(is_arr,x)\n \n if(is_def(y))\n {\n  check(is_fn,y)\n  \n  x.sort(y)\n }\n else\n  x.sort(y)\n}"},"spa-coglab":{"id":"spa-coglab","name":"spa-coglab","branch":"spa-coglab","path":"spa-coglab/spa-coglab.cs","sloc":6,"content":"include \"/home/mabynogy/place-hdd/room-prg/prg-compile/level-a\"\ninclude \"/home/mabynogy/place-hdd/room-prg/prg-compile/level-b\"\ninclude \"/home/mabynogy/place-hdd/room-prg/prg-compile/level-c\"\ninclude \"/home/mabynogy/place-hdd/room-prg/lib-gui\"\ninclude \"/home/mabynogy/place-hdd/room-prg/lib-baserow\"\ninclude \"/home/mabynogy/place-hdd/room-prg/spa-coglab/src\""},"spa-compile":{"id":"spa-compile","name":"spa-compile","branch":"lib-deploy","path":"lib-deploy/src/spa-compile.cs","sloc":14,"content":"fn spa_compile x y\n check is_str x\n check is_str y\n \n let env call env_init\n let index path_concat env.prg x x\n let index concat index \".cs\"\n let html path_concat env.tmp x\n let html concat html \".html\"\n let home path_concat y \"index.html\"\n \n os_system \"prg-compile\" index \"--html\"\n \n if not is_file html\n  ret\n \n os_system \"mv\" \"--force\" html home\nend"},"spa-mabynogy":{"id":"spa-mabynogy","name":"spa-mabynogy","branch":"spa-mabynogy","path":"spa-mabynogy/spa-mabynogy.cs","sloc":5,"content":"include \"/home/mabynogy/place-hdd/room-prg/prg-compile/level-a\"\ninclude \"/home/mabynogy/place-hdd/room-prg/prg-compile/level-b\"\ninclude \"/home/mabynogy/place-hdd/room-prg/prg-compile/level-c\"\ninclude \"/home/mabynogy/place-hdd/room-prg/lib-gui\"\ninclude \"/home/mabynogy/place-hdd/room-prg/spa-mabynogy/src\""},"spa-vps":{"id":"spa-vps","name":"spa-vps","branch":"spa-vps","path":"spa-vps/spa-vps.cs","sloc":6,"content":"include \"/home/mabynogy/place-hdd/room-prg/prg-compile/level-a\"\ninclude \"/home/mabynogy/place-hdd/room-prg/prg-compile/level-b\"\ninclude \"/home/mabynogy/place-hdd/room-prg/prg-compile/level-c\"\ninclude \"/home/mabynogy/place-hdd/room-prg/lib-gui\"\ninclude \"/home/mabynogy/place-hdd/room-prg/lib-vps\"\ninclude \"/home/mabynogy/place-hdd/room-prg/spa-vps/src\""},"spa-vps-admin":{"id":"spa-vps-admin","name":"spa-vps-admin","branch":"spa-vps-admin","path":"spa-vps-admin/spa-vps-admin.cs","sloc":6,"content":"include \"/home/mabynogy/place-hdd/room-prg/prg-compile/level-a\"\ninclude \"/home/mabynogy/place-hdd/room-prg/prg-compile/level-b\"\ninclude \"/home/mabynogy/place-hdd/room-prg/prg-compile/level-c\"\ninclude \"/home/mabynogy/place-hdd/room-prg/lib-gui\"\ninclude \"/home/mabynogy/place-hdd/room-prg/lib-vps\"\ninclude \"/home/mabynogy/place-hdd/room-prg/spa-vps-admin/src\""},"space":{"id":"space","name":"space","branch":"prg-compile","path":"prg-compile/level-b/space.js","sloc":4,"content":"function space(...x)\n{\n return join(x,\" \")\n}"},"split":{"id":"split","name":"split","branch":"prg-compile","path":"prg-compile/level-a/split.js","sloc":8,"content":"function split(x,y)\n{\n check(is_str,x)\n \n if(is_undef(y))\n  return split(x,\"\\n\")\n  \n check(is_str,y)\n \n return x.split(y)\n}"},"ssh":{"id":"ssh","name":"ssh","branch":"lib-deploy","path":"lib-deploy/src/ssh.cs","sloc":4,"content":"fn ssh x:spread\n log \"ssh\" x:spread\n \n ssh_pass \"ssh\" x:spread\nend"},"ssh-pass":{"id":"ssh-pass","name":"ssh-pass","branch":"lib-deploy","path":"lib-deploy/src/ssh-pass.cs","sloc":7,"content":"fn ssh_pass x y:spread\n if not is_fn x\n  ret ssh_pass os_system x y:spread\n  \n log \"ssh-pass\" x.name y:spread\n \n let credential call env_credential\n \n ret x \"sshpass\" \"-p\" credential y:spread\nend"},"stop":{"id":"stop","name":"stop","branch":"prg-compile","path":"prg-compile/level-a/stop.js","sloc":7,"content":"function stop(x)\n{\n if(is_undef(x))\n  return stop(\"stop\")\n  \n const e=new Error(x)\n \n throw e\n}"},"storage-get":{"id":"storage-get","name":"storage-get","branch":"lib-gui","path":"lib-gui/storage-get.cs","sloc":7,"content":"fn storage_get x\n check is_str x\n \n let r localStorage.getItem x\n \n if is_null r\n  ret \"\"\n \n ret r\nend"},"storage-keys":{"id":"storage-keys","name":"storage-keys","branch":"lib-gui","path":"lib-gui/storage-keys.cs","sloc":8,"content":"fn storage_keys\n let r arr\n \n fornum localStorage.length\n  let s localStorage.key i\n  \n  push r s\n end\n \n ret r\nend"},"storage-remove":{"id":"storage-remove","name":"storage-remove","branch":"lib-gui","path":"lib-gui/storage-remove.cs","sloc":4,"content":"fn storage_remove x\n check is_str x\n\n localStorage.removeItem x\nend"},"storage-set":{"id":"storage-set","name":"storage-set","branch":"lib-gui","path":"lib-gui/storage-set.cs","sloc":20,"content":"fn storage_set x y\n check is_str x\n check is_str y\n \n while true\n  try\n   localStorage.setItem x y\n  catch e\n   let keys call storage_keys\n   \n   if is_empty keys\n    throw e\n   \n   let keys shuffle keys\n   let keys head keys 32\n   \n   forof keys\n    storage_remove v\n   end\n   \n   cont\n  end\n  \n  brk\n end\nend"},"str-normalize":{"id":"str-normalize","name":"str-normalize","branch":"prg-compile","path":"prg-compile/level-b/str-normalize.js","sloc":21,"content":"function str_normalize(x)\n{\n check(is_str,x)\n \n function normalize(x)\n {\n  check(is_str,x)\n  \n  let r=replace(x,nbsp,\" \")\n\n  if(contain(r,\"\\r\\n\"))\n   r=replace(r,\"\\r\\n\",\"\\n\")\n  else if(contain(r,\"\\r\"))\n   r=replace(r,\"\\r\",\"\\n\")\n  \n  return r\n }\n \n let r=x\n \n r=normalize(r)\n r=split(r)\n r=map(r,trim_r)\n r=join(r)\n r=trim_r(r)\n \n return r\n}"},"strip-l":{"id":"strip-l","name":"strip-l","branch":"prg-compile","path":"prg-compile/level-b/strip-l.js","sloc":11,"content":"function strip_l(x,y)\n{\n check(is_str,x)\n check(is_str,y)\n\n if(match_l(x,y))\n {\n  const n=sub(x.length,y.length)\n  \n  return slice_r(x,n)\n }\n \n return x\n}"},"strip-r":{"id":"strip-r","name":"strip-r","branch":"prg-compile","path":"prg-compile/level-b/strip-r.js","sloc":11,"content":"function strip_r(x,y)\n{\n check(is_str,x)\n check(is_str,y)\n\n if(match_r(x,y))\n {\n  const n=sub(x.length,y.length)\n  \n  return slice_l(x,n)\n }\n \n return x\n}"},"sub":{"id":"sub","name":"sub","branch":"prg-compile","path":"prg-compile/level-a/sub.js","sloc":7,"content":"function sub(x,y,...z)\n{\n const n=x-y\n \n if(is_empty(z))\n  return n\n \n return sub(n,...z)\n}"},"sudo":{"id":"sudo","name":"sudo","branch":"lib-cli","path":"lib-cli/src/sudo.cs","sloc":3,"content":"fn sudo x:spread\n os_system \"sudo\" x:spread\nend"},"syntax-attribute":{"id":"syntax-attribute","name":"syntax-attribute","branch":"spa-mabynogy","path":"spa-mabynogy/src/syntax-attribute.cs","sloc":36,"content":"fn syntax_attribute x\n check is_str x\n \n var r null\n \n if is_lit x\n  let s from_json x\n  let url concat \"/?k=\" s\n  \n  assign r dom_a body x url true\n elseif is_rvalue x\n  let url concat \"/?k=\" x\n  \n  assign r dom_a body x url true\n elseif is_comment x\n  let s strip_l x \"//\"\n  let url concat \"/?k=\" s\n  \n  assign r dom_a body x url true\n else\n  assign r dom_span body\n  \n  dom_text r x\n end\n \n let keywords arr \"assign\" \"if\" \"elseif\" \"else\" \"while\" \"forin\" \"forof\" \"fornum\" \"for\" \"cont\" \"continue\" \"brk\" \"break\" \"ret\" \"return\" \"null\" \"run\" \"not\" \"end\"\n let declarations arr \"fn\" \"function\" \"gn\" \"let\" \"var\" \"const\" \n\n if is_comment x\n  dom_color r \"darkred\"\n elseif is_lit x\n  dom_color r \"darkorange\"\n elseif is_numeric x\n  dom_color r \"green\"\n elseif contain keywords x\n  dom_color r \"darkblue\"\n  dom_bold r\n elseif contain declarations x\n  dom_color r \"darkred\"\n  dom_bold r\n else\n  dom_color r \"black\"\n  \n ret r\nend"},"tail":{"id":"tail","name":"tail","branch":"prg-compile","path":"prg-compile/level-a/tail.js","sloc":12,"content":"function tail(x,y)\n{\n check(is_vec,x)\n check(is_uint,y)\n \n if(lte(x.length,y))\n {\n  if(is_arr(x))\n   return dup(x)\n  \n  return x\n }\n \n return slice_r(x,y)\n}"},"tbl-align-l":{"id":"tbl-align-l","name":"tbl-align-l","branch":"prg-compile","path":"prg-compile/level-b/tbl-align-l.js","sloc":14,"content":"function tbl_align_l(x,y)\n{\n check(is_arr,x)\n check(is_str,y)\n\n const width=tbl_column_width(x,y)\n \n for(const v of x)\n {\n  let s=v\n  \n  s=get(s,y)\n  s=to_cell(s)\n  s=pad_r(s,\" \",width)\n    \n  set(v,y,s)\n }\n}"},"tbl-align-r":{"id":"tbl-align-r","name":"tbl-align-r","branch":"prg-compile","path":"prg-compile/level-b/tbl-align-r.js","sloc":14,"content":"function tbl_align_r(x,y)\n{\n check(is_arr,x)\n check(is_str,y)\n\n const width=tbl_column_width(x,y)\n\n for(const v of x)\n {\n  let s=v\n  \n  s=get(s,y)\n  s=to_cell(s)\n  s=pad_l(s,\" \",width)\n\n  set(v,y,s)\n }\n}"},"tbl-column":{"id":"tbl-column","name":"tbl-column","branch":"prg-compile","path":"prg-compile/level-b/tbl-column.js","sloc":12,"content":"function tbl_column(x,y)\n{\n check(is_arr,x)\n check(is_str,y)\n\n const r=arr()\n\n for(const v of x)\n {\n  const s=get(v,y)\n\n  push(r,s)\n }\n\n return r\n}"},"tbl-column-numeric":{"id":"tbl-column-numeric","name":"tbl-column-numeric","branch":"prg-compile","path":"prg-compile/level-b/tbl-column-numeric.js","sloc":14,"content":"function tbl_column_numeric(x,y)\n{\n check(is_arr,x)\n check(is_str,y)\n \n if(is_empty(x))\n  return false\n \n for(const v of x)\n {  \n  const s=get(v,y)\n  \n  if(!is_num(s))\n   return false\n }\n \n return true\n}"},"tbl-column-remove":{"id":"tbl-column-remove","name":"tbl-column-remove","branch":"prg-compile","path":"prg-compile/level-c/tbl-column-remove.cs","sloc":10,"content":"fn tbl_column_remove x y\n check is_arr x\n check is_str y\n\n forin x\n  let i to_i k\n  let v at x i\n  let o unset v y\n  \n  at x i o\n end\nend"},"tbl-column-width":{"id":"tbl-column-width","name":"tbl-column-width","branch":"prg-compile","path":"prg-compile/level-b/tbl-column-width.js","sloc":14,"content":"function tbl_column_width(x,y)\n{\n check(is_arr,x)\n check(is_str,y)\n\n let r=y.length\n\n for(const v of x)\n {\n  let s=v\n  \n  s=get(s,y)\n  s=to_cell(s)\n\n  r=max(r,s.length)\n }\n \n return r\n}"},"tbl-columns":{"id":"tbl-columns","name":"tbl-columns","branch":"prg-compile","path":"prg-compile/level-b/tbl-columns.js","sloc":8,"content":"function tbl_columns(x)\n{\n check(is_arr,x)\n \n if(is_empty(x))\n  return arr()\n\n const first=front(x)\n\n return get_keys(first)\n}"},"tbl-filter":{"id":"tbl-filter","name":"tbl-filter","branch":"prg-compile","path":"prg-compile/level-c/tbl-filter.cs","sloc":15,"content":"fn tbl_filter x y z\n check is_arr x\n check is_str y\n check is_fn z\n \n let r arr\n \n forof x\n  let value get v y\n  let b z value\n  \n  if is_true b\n   push r v\n  else\n   check is_false b  \n end\n\n ret r \nend"},"tbl-find-image-column":{"id":"tbl-find-image-column","name":"tbl-find-image-column","branch":"spa-coglab","path":"spa-coglab/src/tbl-find-image-column.cs","sloc":16,"content":"fn tbl_find_image_column x\n check is_arr x\n \n if is_empty x\n  ret -1\n \n let columns tbl_columns x\n \n forin columns\n  let i to_i k\n  let v at columns i\n  let value v\n  \n  forof tbl_column x value\n   if is_cell_image v\n    ret i\n  end\n  \n end\n \n ret -1\nend"},"tbl-import-wsl":{"id":"tbl-import-wsl","name":"tbl-import-wsl","branch":"prg-compile","path":"prg-compile/level-c/tbl-import-wsl.cs","sloc":41,"content":"fn tbl_import_wsl x y\n check is_arr x\n check is_str y\n \n clear x\n \n let s trim_r y\n let lines split s\n let header shift lines\n let columns arr\n let widths arr\n \n forof split header \" \"\n  if is_empty v\n   var width back widths\n    \n   assign width inc width\n   back widths 0 width\n  else\n   let width inc v.length\n   \n   push columns v\n   push widths width\n  end\n end\n\n forof lines\n  var n 0\n  let line trim v\n  let o obj\n  \n  forin columns\n   let i to_i k\n   let last dec columns.length\n   let column at columns i\n   let width at widths i\n   var s line\n   \n   if same i last\n    assign s slice s n   \n   else   \n    assign s slice line n width\n    \n   let s trim_r s\n   \n   put o column s   \n   assign n add n width   \n  end\n  \n  push x o\n end \nend"},"tbl-init":{"id":"tbl-init","name":"tbl-init","branch":"prg-compile","path":"prg-compile/level-c/tbl-init.cs","sloc":45,"content":"fn tbl_init x\n if is_undef x\n  let r arr\n  \n  ret r\n end\n\n fn convert_arr x\n  check is_arr x\n  \n  let r arr\n  \n  forin x\n   let i to_i k\n   let v at x i\n   let key i\n   let value v\n   let o obj key value\n   \n   push r o\n  end\n  \n  ret r\n end\n \n fn convert_obj x\n  check is_obj x\n  \n  let r arr\n  \n  forin x\n   let v get x k\n   let key k\n   let value v\n   \n   if is_txt value\n    let lines split value\n    \n    forof lines\n     let value v\n     let o obj key value\n\n     push r o\n    end\n   \n   else\n    let o obj key value\n\n    push r o\n   end\n  end\n\n  ret r\n end\n \n if is_arr x\n  ret convert_arr x\n \n if is_obj x\n  ret convert_obj x\n  \n stop\nend"},"tbl-parse":{"id":"tbl-parse","name":"tbl-parse","branch":"prg-compile","path":"prg-compile/level-c/tbl-parse.cs","sloc":37,"content":"fn tbl_parse x y\n check is_arr x\n check is_str y\n \n fn to_column x\n  check is_str x\n  \n  let a arr\n  \n  forof to_lower x\n   if is_alnum v\n    push a v\n   else\n    push a \" \"\n  end\n  \n  let r implode a\n  let r replace_rec r \"  \" \" \"\n  let r trim r  \n  let r replace r \" \" \"-\"\n  \n  ret r\n end\n\n clear x\n\n let lines split y\n let header shift lines\n let columns split header \" \"\n let columns reject columns is_empty\n let columns map columns to_column\n \n forof lines\n  let cells split v \" \"\n  let cells reject cells is_empty\n  \n  while gt cells.length columns.length\n   let s1 pop cells\n   let s2 pop cells\n   let s3 space s2 s1\n   \n   push cells s3\n  end\n  \n  let o zip columns cells\n  \n  push x o\n end\nend"},"tbl-rename":{"id":"tbl-rename","name":"tbl-rename","branch":"prg-compile","path":"prg-compile/level-c/tbl-rename.cs","sloc":18,"content":"fn tbl_rename x y z\n check is_arr x\n check is_str y\n check is_str z\n\n forin x\n  let i to_i k\n  let row at x i\n  let o obj\n\n  forin row\n   let value get row k\n   \n   if same k y\n    put o z value\n   else\n    put o k value\n  end\n\n  at x i o\n end\nend"},"tbl-render":{"id":"tbl-render","name":"tbl-render","branch":"prg-compile","path":"prg-compile/level-b/tbl-render.js","sloc":75,"content":"function tbl_render(x)\n{\n check(is_arr,x)\n \n function is_column_align_r(x)\n {\n  check(is_arr,x)\n\n  if(is_empty(x))\n   return false\n  \n  const first=front(x)\n  const n=first.length\n  \n  for(const v of x)\n  {\n   if(different(v.length,n))\n    return false\n  }\n\n  for(const v of x)\n  {\n   const c=front(v)\n   \n   if(is_space(c))\n    return true\n  }\n  \n  return false\n }\n\n const tbl=clone(x)\n const labels=tbl_columns(tbl)\n const header=obj()\n const columns=arr()\n \n for(const v of labels)\n {\n  put(header,v,v)\n }\n\n unshift(tbl,header)\n \n for(const v of labels)\n {\n  if(tbl_column_numeric(x,v))\n   tbl_align_r(tbl,v)\n  else\n   tbl_align_l(tbl,v)\n   \n  const column=tbl_column(tbl,v)\n\n  if(is_column_align_r(column))\n  {\n   const title1=shift(column)\n   const n=title1.length\n   const title2=trim(title1)\n   const title3=pad_l(title2,\" \",n)\n   \n   unshift(column,title3)\n  }\n\n  push(columns,column)\n }\n \n const lines=arr()\n let width=0\n\n for(const k in front(columns))\n {\n  const i=to_i(k)\n  const row=arr()\n  const i1=i\n\n  for(const k in labels)\n  {\n   const i=to_i(k)\n   const column=at(columns,i)\n   const cell=at(column,i1)\n\n   push(row,cell)\n  }\n  \n  let line=row\n  \n  line=join(line,\" \")\n  line=trim_r(line)\n\n  width=max(width,line.length)\n\n  push(lines,line)\n }\n \n const separator=repeat(\"-\",width)\n\n unshift(lines,separator)\n insert(lines,1,separator)\n push(lines,separator)\n\n return join(lines)\n}"},"tbl-timeline":{"id":"tbl-timeline","name":"tbl-timeline","branch":"spa-coglab","path":"spa-coglab/src/tbl-timeline.cs","sloc":63,"content":"gn tbl_timeline\n\n fn find_table_id x y\n  check is_arr x\n  check is_str y\n  \n  forof x\n   if same v.name y\n    ret v.id\n  end\n  \n  stop\n end\n \n fn find_image x\n  check is_obj x\n  \n  forin x\n   let v get x k\n   \n   if is_cell_image v\n    ret v\n  end\n  \n  ret null\n end\n \n fn has_record x y\n  check is_arr x\n  check is_obj y\n  \n  forof x\n   if same v.table_id y.table_id\n    if same v.row_id y.row_id\n     ret true\n  end\n  \n  ret false\n end\n \n let r arr\n let tables run baserow_cache baserow_database_tables\n let data run baserow_cache baserow_tables\n \n forin data\n  let name k\n  let table_id find_table_id tables name\n  let table get data name\n  \n  forin table\n   let i to_i k\n   let v at table i\n   let row_id i\n   let row v\n   \n   forin row\n    let field k\n    let cell get row field\n    \n    if is_date cell\n     let date cell     \n     let table name\n     let columns get_keys v\n     let title at columns 1\n     let title get v title\n     let image find_image v\n     \n     if is_null title\n      cont\n      \n     let o obj date title image field table table_id row_id\n\n     if has_record r o\n      cont\n      \n     push r o\n    end\n   end\n  end\n end \n \n ret r\nend"},"tbl-with-order":{"id":"tbl-with-order","name":"tbl-with-order","branch":"prg-compile","path":"prg-compile/level-c/tbl-with-order.cs","sloc":14,"content":"fn tbl_with_order x\n check is_arr x\n \n let r arr\n\n forin x\n  let i to_i k\n  let v at x i\n  let n inc i\n  let o obj\n  \n  assign o.order n\n  dup o v\n  push r o\n end\n\n ret r \nend"},"test-1-let":{"id":"test-1-let","name":"test-1-let","branch":"prg-compile","path":"prg-compile/test/test-1-let.cs","sloc":3,"content":"let n 42\n\nlog n\nlog \"ok\""},"test-2-log":{"id":"test-2-log","name":"test-2-log","branch":"prg-compile","path":"prg-compile/test/test-2-log.cs","sloc":3,"content":"console.log \"a\" \"b\" \"c\"\nlog a b c\nlog \"kind\" kind"},"time-get":{"id":"time-get","name":"time-get","branch":"prg-compile","path":"prg-compile/level-a/time-get.js","sloc":6,"content":"function time_get()\n{\n let r=Date.now()\n \n r=div(r,1000)\n \n return r\n}"},"time-hn":{"id":"time-hn","name":"time-hn","branch":"prg-compile","path":"prg-compile/level-c/time-hn.cs","sloc":53,"content":"fn time_hn x\n check is_int x\n \n fn get_unit x\n  check is_num x\n  \n  let minute 60\n  let hour mul 60 minute\n  let day mul 24 hour\n  let month mul 30 day\n  let year mul 12 month\n\n  if lt x 10\n   let n to_fixed x\n   \n   ret concat n \"s\"\n  end\n\n  if lt x minute\n   let n trunc x\n   \n   ret concat n \"s\"\n  end\n  \n  if lt x hour\n   let n div x minute\n   let n trunc n\n   \n   ret concat n \"m\"\n  end \n  \n  if lt x day\n   let n div x hour\n   let n trunc n\n\n   ret concat n \"h\"\n  end\n\n  if lt x month\n   let n div x day\n   let n trunc n\n   \n   ret concat n \"d\"\n  end\n\n  if lt x year\n   let n div x month\n   let n trunc n\n   \n   ret concat n \"m\"\n  end\n\n  let n div x year\n  let n trunc n\n   \n  ret concat n \"y\"\n end\n \n let now call time_get\n \n if same x now\n  ret \"now\"\n \n if gt x now\n  let n sub x now\n  let s get_unit n\n  \n  ret concat \"in \" s\n end\n \n let n sub now x\n let s get_unit n\n  \n ret concat s \" ago\"\nend"},"time-locale":{"id":"time-locale","name":"time-locale","branch":"prg-compile","path":"prg-compile/level-c/time-locale.cs","sloc":7,"content":"fn time_locale x\n check is_uint x\n\n let d new Date\n let n mul x 1000\n \n d.setTime n\n \n ret call d.toLocaleString \nend"},"time-now":{"id":"time-now","name":"time-now","branch":"prg-compile","path":"prg-compile/level-a/time-now.js","sloc":6,"content":"function time_now()\n{\n let r=time_get()\n \n r=sub(r,startup)\n \n return r\n}"},"time-parse":{"id":"time-parse","name":"time-parse","branch":"prg-compile","path":"prg-compile/level-c/time-parse.cs","sloc":108,"content":"fn time_parse x\n check is_str x\n\n fn parse_year x\n  check is_str x\n  \n  if not is_numeric x\n   ret false\n  \n  let n to_uint x\n  let d new Date\n  \n  d.setUTCFullYear n\n  d.setUTCMonth 0\n  d.setUTCDate 1\n  d.setUTCHours 0 0 0 0\n  \n  ret d.getTime\n end\n\n fn parse_date x y\n  check is_str x\n  check is_str y\n  \n  let a split x y\n\n  if different a.length 3\n   ret false\n   \n  if not every a is_digit\n   ret false\n\n  let day shift a\n  var day to_uint day\n  let month shift a\n  let month to_uint month\n  let month dec month\n  let year shift a\n  var year to_uint year\n  \n  if gt day 31\n   let n day\n   \n   assign day year\n   assign year n\n  end\n  \n  check lte day 31\n  check lte month 11\n  \n  let d new Date\n  \n  d.setUTCFullYear year\n  d.setUTCMonth month\n  d.setUTCDate day\n  d.setUTCHours 0 0 0 0\n  \n  let r call d.getTime\n\n  if not is_num r\n   ret r\n   \n  let r div r 1000\n\n  ret r\n end\n\n fn parse_date_time x y\n  check is_str x\n  check is_str y\n  \n  let a delimit x y\n  let a delimit a \":\"\n  let a delimit a \" \"\n  \n  if different a.length 5\n   ret false\n   \n  if not every a is_digit\n   ret false\n\n  let day shift a\n  var day to_uint day\n  let month shift a\n  let month to_uint month\n  let month dec month\n  let year shift a\n  var year to_uint year\n  \n  if gt day 31\n   let n day\n   \n   assign day year\n   assign year n\n  end\n  \n  check lte day 31\n  check lte month 11\n  \n  let hour shift a\n  let hour to_uint hour\n  let minute shift a\n  let minute to_uint minute\n  \n  check lte hour 24\n  check lte minute 60\n  \n  let d new Date\n  \n  d.setUTCFullYear year\n  d.setUTCMonth month\n  d.setUTCDate day\n  d.setUTCHours hour minute 0 0\n  \n  let r call d.getTime\n\n  if not is_num r\n   ret r\n   \n  let r div r 1000\n\n  ret r\n end\n\n let n parse_year x\n\n if is_num n\n  ret n\n\n let n parse_date x \"/\"\n\n if is_num n\n  ret n\n\n let n parse_date x \"-\"\n\n if is_num n\n  ret n\n\n let n parse_date_time x \"/\"\n\n if is_num n\n  ret n\n\n let n parse_date_time x \"-\"\n\n if is_num n\n  ret n\n   \n let n Date.parse x\n \n if is_num n\n  ret div n 1000\n  \n ret false\nend"},"time-string":{"id":"time-string","name":"time-string","branch":"prg-compile","path":"prg-compile/level-c/time-string.cs","sloc":38,"content":"fn time_string x\n check is_num x\n \n let d new Date\n let n mul x 1000\n \n d.setTime n\n \n let year call d.getUTCFullYear\n let month call d.getUTCMonth\n let month inc month\n let day call d.getUTCDate\n let hour call  d.getUTCHours\n let minute call d.getUTCMinutes\n\n var format \"date-time\"\n \n if same hour 0\n  if same minute 0\n   assign format \"date\"\n   \n   if same month 1\n    if same day 1\n     assign format \"year\"\n    end\n   end\n    \n  end\n end\n\n let month pad_l month \"0\" 2\n let day pad_l day \"0\" 2\n let hour pad_l hour \"0\" 2  \n let minute pad_l minute \"0\" 2  \n \n if same format \"date-time\"\n  let r concat year \"/\" month \"/\" day\n  let r concat r \" \" hour \":\" minute\n  \n  ret r\n elseif same format \"date\"  \n  ret concat year \"/\" month \"/\" day\n elseif same format \"year\"\n  ret to_str year\n else\n  stop\n end\nend"},"timer-clear":{"id":"timer-clear","name":"timer-clear","branch":"prg-compile","path":"prg-compile/level-b/timer-clear.js","sloc":5,"content":"function timer_clear(x)\n{\n check(is_uint,x)\n \n clearTimeout(x)\n}"},"timer-timeout":{"id":"timer-timeout","name":"timer-timeout","branch":"prg-compile","path":"prg-compile/level-b/timer-timeout.js","sloc":9,"content":"function timer_timeout(x,y,...z)\n{\n check(is_fn,x)\n check(is_num,y) \n check(gte,y,0)\n check(alive)\n \n const delay=mul(y,1000)\n \n return setTimeout(x,delay,...z)\n}"},"to-arr":{"id":"to-arr","name":"to-arr","branch":"prg-compile","path":"prg-compile/level-c/to-arr.cs","sloc":10,"content":"fn to_arr x\n check is_def x\n \n let r arr\n let length x.length\n \n check is_uint length\n \n forof x\n  push r v\n end\n \n ret r\nend"},"to-base36":{"id":"to-base36","name":"to-base36","branch":"prg-compile","path":"prg-compile/level-c/to-base36.cs","sloc":24,"content":"fn to_base36 x\n check is_cool x\n\n if is_uint x\n  ret x.toString 36\n elseif is_str x\n  var r \"\"\n  \n  forof x\n   if is_single v\n    let n asc v\n    let s to_base36 n\n    \n    assign r concat r s \n   elseif is_pair v\n    let n1 v.charCodeAt 0\n    let n2 v.charCodeAt 1\n    let s1 to_base36 n1\n    let s2 to_base36 n2\n\n    assign r concat r s1 s2 \n   else\n    stop\n  end\n  \n  ret r\n else\n  stop\nend"},"to-bsize":{"id":"to-bsize","name":"to-bsize","branch":"prg-compile","path":"prg-compile/level-b/to-bsize.js","sloc":35,"content":"function to_bsize(x)\n{\n check(is_uint,x)\n check(gte,x,0)\n\n const kb=1024\n const mb=mul(1024,kb)\n const gb=mul(1024,mb)\n const tb=mul(1024,gb)\n\n if(lt(x,kb))\n {\n  const s=to_fixed(x)\n\n  return concat(s,\"b\")\n }\n\n if(lt(x,mb))\n {\n  const n=div(x,kb)\n  const s=to_fixed(n)\n\n  return concat(s,\"Kb\")\n }\n\n if(lt(x,gb))\n {\n  const n=div(x,mb)\n  const s=to_fixed(n)\n\n  return concat(s,\"Mb\")\n }\n\n if(lt(x,tb))\n {\n  const n=div(x,gb)\n  const s=to_fixed(n)\n\n  return concat(s,\"Gb\")\n }\n\n const n=div(x,tb)\n const s=to_fixed(n)\n\n return concat(s,\"Tb\")\n}"},"to-cell":{"id":"to-cell","name":"to-cell","branch":"prg-compile","path":"prg-compile/level-b/to-cell.js","sloc":10,"content":"function to_cell(x)\n{\n check(is_def,x)\n \n let r=x\n \n r=to_str(r)\n r=split(r)\n r=front(r)\n r=trim_r(r)\n \n return r\n}"},"to-dump":{"id":"to-dump","name":"to-dump","branch":"prg-compile","path":"prg-compile/level-c/to-dump.cs","sloc":4,"content":"fn to_dump x\n check is_def x\n \n ret JSON.stringify x null 1\nend"},"to-fixed":{"id":"to-fixed","name":"to-fixed","branch":"prg-compile","path":"prg-compile/level-b/to-fixed.js","sloc":27,"content":"function to_fixed(x,y)\n{\n check(is_num,x)\n\n if(is_undef(y))\n  return to_fixed(x,2)\n \n check(is_uint,y)\n \n let s=y\n \n s=x.toFixed(y)\n \n let a=s\n \n a=split(s,\".\")\n \n if(is_single(a))\n  return s\n \n const integer=front(a)\n const float=back(a)\n \n a=explode(float)\n \n while(is_full(a))\n {\n  const c=back(a)\n  \n  if(different(c,\"0\"))\n   break\n  \n  pop(a)\n }\n \n if(is_empty(a))\n  return integer\n  \n s=implode(a)\n \n return concat(integer,\".\",s) \n}"},"to-flat":{"id":"to-flat","name":"to-flat","branch":"prg-compile","path":"prg-compile/level-c/to-flat.cs","sloc":10,"content":"fn to_flat x\n check is_arr x\n \n let r arr\n \n forof x\n  push r v\n  \n  let a to_flat v.children\n  \n  append r a\n end\n \n ret r\nend"},"to-html":{"id":"to-html","name":"to-html","branch":"prg-compile","path":"prg-compile/level-c/to-html.cs","sloc":20,"content":"fn to_html x\n check is_str x\n \n let s trim_r x\n \n if is_empty s\n  ret \"\"\n\n let lines split s\n \n if same lines.length 1\n  ret s\n \n let a arr\n \n forof lines\n  let s trim_r v\n  \n  if is_empty s\n   push a \"<br>\"\n  else\n   let s concat \"<div>\" s \"</div>\"\n   \n   push a s\n  end   \n end\n \n ret implode a \nend"},"to-i":{"id":"to-i","name":"to-i","branch":"prg-compile","path":"prg-compile/level-b/to-i.js","sloc":4,"content":"function to_i(x)\n{\n return Number.parseInt(x)\n}"},"to-int":{"id":"to-int","name":"to-int","branch":"prg-compile","path":"prg-compile/level-b/to-int.js","sloc":7,"content":"function to_int(x)\n{\n check(is_str,x)\n \n const r=Number.parseInt(x)\n \n check(is_num,r)\n \n return r\n}"},"to-json":{"id":"to-json","name":"to-json","branch":"prg-compile","path":"prg-compile/level-a/to-json.js","sloc":5,"content":"function to_json(x)\n{\n check(is_def,x)\n \n return JSON.stringify(x)\n}"},"to-lit":{"id":"to-lit","name":"to-lit","branch":"prg-compile","path":"prg-compile/level-a/to-lit.js","sloc":5,"content":"function to_lit(x)\n{\n check(is_str,x)\n \n return to_json(x)\n}"},"to-lower":{"id":"to-lower","name":"to-lower","branch":"prg-compile","path":"prg-compile/level-c/to-lower.cs","sloc":4,"content":"fn to_lower x\n check is_str x\n \n ret call x.toLowerCase\nend"},"to-num":{"id":"to-num","name":"to-num","branch":"prg-compile","path":"prg-compile/level-c/to-num.cs","sloc":6,"content":"fn to_num x\n check is_str x\n \n let r from_json x\n\n check is_num r\n  \n ret r\nend"},"to-px":{"id":"to-px","name":"to-px","branch":"lib-gui","path":"lib-gui/to-px.cs","sloc":7,"content":"fn to_px x\n check is_num x\n\n let r trunc x\n let r to_json r\n let r concat r \"px\"\n \n ret r\nend"},"to-str":{"id":"to-str","name":"to-str","branch":"prg-compile","path":"prg-compile/level-a/to-str.js","sloc":7,"content":"function to_str(x)\n{\n check(is_def,x)\n \n if(is_null(x))\n  return \"null\"\n \n return x.toString()\n}"},"to-tree":{"id":"to-tree","name":"to-tree","branch":"prg-compile","path":"prg-compile/level-c/to-tree.cs","sloc":28,"content":"fn to_tree x\n check is_arr x\n \n fn get_children x y\n  check is_obj x\n  check is_arr y\n  \n  let r arr\n  let id x.id\n  \n  forof y\n   if is_null v.parent\n    cont\n    \n   if different v.parent.id id\n    cont\n    \n   let children get_children v y\n   \n   assign v.children children      \n   push r v\n  end\n  \n  ret r\n end\n \n let r arr\n \n forof x\n  if not is_null v.parent\n   cont\n  \n  let children get_children v x\n  \n  assign v.children children\n  push r v\n end \n \n ret r\nend"},"to-uint":{"id":"to-uint","name":"to-uint","branch":"prg-compile","path":"prg-compile/level-b/to-uint.js","sloc":7,"content":"function to_uint(x)\n{\n check(is_str,x)\n\n const r=to_int(x)\n \n check(gte,r,0)\n \n return r \n}"},"to-upper":{"id":"to-upper","name":"to-upper","branch":"prg-compile","path":"prg-compile/level-c/to-upper.cs","sloc":4,"content":"fn to_upper x\n check is_str x\n \n ret call x.toUpperCase\nend"},"to-vw":{"id":"to-vw","name":"to-vw","branch":"lib-gui","path":"lib-gui/to-vw.cs","sloc":9,"content":"fn to_vw x\n check is_num x\n\n let r call dom_window_width\n let r div x r\n let r mul r 100\n let r to_fixed r\n let r concat r \"vw\"\n \n ret r\nend"},"tokenize":{"id":"tokenize","name":"tokenize","branch":"prg-compile","path":"prg-compile/level-a/tokenize.js","sloc":12,"content":"function tokenize(x)\n{\n check(is_vec,x)\n \n let r=x\n \n if(is_str(r))\n  r=arr(r)\n \n r=delimit(r,\" \")\n r=delimit(r,\"\\r\")\n r=delimit(r,\"\\n\")\n r=delimit(r,\"\\t\")\n \n return r\n}"},"trim":{"id":"trim","name":"trim","branch":"prg-compile","path":"prg-compile/level-b/trim.js","sloc":8,"content":"function trim(x)\n{\n check(is_str,x)\n \n let r=x\n \n r=trim_l(r)\n r=trim_r(r)\n \n return r\n}"},"trim-l":{"id":"trim-l","name":"trim-l","branch":"prg-compile","path":"prg-compile/level-b/trim-l.js","sloc":5,"content":"function trim_l(x)\n{\n check(is_str,x)\n \n return x.trimLeft()\n}"},"trim-r":{"id":"trim-r","name":"trim-r","branch":"prg-compile","path":"prg-compile/level-a/trim-r.js","sloc":5,"content":"function trim_r(x)\n{\n check(is_str,x)\n \n return x.trimRight()\n}"},"trunc":{"id":"trunc","name":"trunc","branch":"prg-compile","path":"prg-compile/level-b/trunc.js","sloc":5,"content":"function trunc(x)\n{\n check(is_num,x)\n \n return Math.trunc(x)\n}"},"txt-excerpt":{"id":"txt-excerpt","name":"txt-excerpt","branch":"prg-compile","path":"prg-compile/level-c/txt-excerpt.cs","sloc":26,"content":"fn txt_excerpt x y\n check is_str x\n \n if is_undef y\n  ret txt_excerpt x 512\n \n let r x\n let r trim_r r\n let r split r\n let r head r 4\n var r join r\n let s r\n \n while gt r.length y\n  assign r split r \" \"\n  \n  pop r\n  \n  assign r join r \" \"\n  assign r trim_r r\n end\n \n if is_empty r\n  assign r s\n  \n assign r head r y\n \n if same r x\n  ret x\n \n assign r unpunct_r r\n \n if different r x\n  assign r concat r \" ...\"\n \n ret r\nend"},"txt-left":{"id":"txt-left","name":"txt-left","branch":"prg-compile","path":"prg-compile/level-a/txt-left.js","sloc":12,"content":"function txt_left(x,y)\n{\n check(is_str,x)\n check(is_uint,y)\n \n const a=arr()\n \n for(const v of split(x))\n {\n  const s=head(v,y)\n  \n  push(a,s)\n }\n \n return join(a)\n}"},"ui-page-bottom":{"id":"ui-page-bottom","name":"ui-page-bottom","branch":"lib-vps","path":"lib-vps/ui-page-bottom.cs","sloc":12,"content":"gn ui_page_bottom x\n check is_obj x\n\n let pages run ui_page_find\n let a arr\n \n while is_full pages\n  let page shift pages\n  \n  if different page.id x.id\n   push a page\n end\n\n push a x\n  \n run ui_page_reorder a\nend"},"ui-page-delete":{"id":"ui-page-delete","name":"ui-page-delete","branch":"lib-vps","path":"lib-vps/ui-page-delete.cs","sloc":7,"content":"gn ui_page_delete x\n check is_obj x\n \n run api_table_delete \"page\" x.id\n\n forof x.children\n  run ui_page_delete v\n end\nend"},"ui-page-down":{"id":"ui-page-down","name":"ui-page-down","branch":"lib-vps","path":"lib-vps/ui-page-down.cs","sloc":31,"content":"gn ui_page_down x\n check is_obj x\n \n gn get_after x\n  check is_obj x\n  \n  let siblings run ui_page_siblings x\n  \n  while is_full siblings\n   let page shift siblings\n   \n   if same page.id x.id\n    if is_empty siblings\n     ret null\n    \n    ret front siblings\n   end\n  end\n  \n  stop\n end\n\n let after run get_after x\n \n if is_null after\n  ret\n\n let pages run ui_page_find\n let a arr\n \n while is_full pages\n  let page shift pages\n\n  if same page.id x.id\n  elseif same page.id after.id\n   push a after\n   push a x\n  else\n   push a page\n end\n\n run ui_page_reorder a \nend"},"ui-page-find":{"id":"ui-page-find","name":"ui-page-find","branch":"lib-vps","path":"lib-vps/ui-page-find.cs","sloc":5,"content":"gn ui_page_find\n let r run ui_page_list\n let r to_flat r\n \n ret r\nend"},"ui-page-find-title":{"id":"ui-page-find-title","name":"ui-page-find-title","branch":"lib-vps","path":"lib-vps/ui-page-find-title.cs","sloc":17,"content":"gn ui_page_find_title\n var n 1\n let pages run ui_page_find\n \n while true\n  var found true\n  \n  forof pages  \n   var title concat \"Page \" n\n   \n   if same v.title title\n    assign n inc n    \n    assign found false\n    \n    brk\n   end\n  end\n  \n  if found\n   ret concat \"Page \" n\n end\nend"},"ui-page-init":{"id":"ui-page-init","name":"ui-page-init","branch":"lib-vps","path":"lib-vps/ui-page-init.cs","sloc":9,"content":"gn ui_page_init x\n check is_int x\n  \n let pages run ui_page_find\n \n forof pages\n  if same v.id x\n   ret v\n end\n \n ret null\nend"},"ui-page-list":{"id":"ui-page-list","name":"ui-page-list","branch":"lib-vps","path":"lib-vps/ui-page-list.cs","sloc":96,"content":"gn ui_page_list\n fn get_page x y\n  check is_arr x\n  check is_int y\n  \n  forof x\n   if same v.id y\n    ret v\n  end\n  \n  ret null\n end\n \n fn get_ancestors x y\n  check is_obj x\n  check is_arr y\n  \n  let r arr\n  var v x\n  \n  while true\n   let o get_ancestor v y\n   \n   if is_null o\n    brk\n    \n   unshift r o\n   assign v o  \n  end\n  \n  ret r\n end\n\n fn get_ancestor x y\n  check is_obj x\n  check is_arr y\n  \n  if is_null x.parent\n   ret null\n  \n  forof y\n   if same v.id x.parent.id\n    ret v\n  end\n  \n  stop\n end\n \n fn get_siblings x y\n  check is_obj x\n  check is_arr y\n  \n  let r arr\n  let a arr\n  \n  if is_null x.parent\n   append a y\n  else\n   append a x.parent.children\n   \n  forof a\n   if same v.id x.id\n    cont\n    \n   push r v\n  end\n  \n  ret r\n end\n\n fn apply_siblings x y\n  check is_obj x\n  check is_arr y\n  \n  assign x.siblings get_siblings x y\n  \n  forof x.children   \n   apply_siblings v x.children\n  end\n end\n\n fn compare_order x y\n  check is_obj x\n  check is_obj y\n  \n  ret compare x.order y.order\n end\n \n let r run api_table_select \"page\"\n \n forof r\n  assign v.parent get_page r v.parent\n end\n \n sort r compare_order \n \n let r to_tree r\n let r to_flat r\n\n var previous null\n \n if is_full r\n  assign previous back r\n \n forin r\n  let i to_i k\n  let v at r i\n  \n  assign v.ancestors get_ancestors v r\n  \n  var next null\n  let last dec r.length\n  \n  if same i last\n   assign next front r\n  else\n   let n inc i\n   \n   assign next at r n\n  end\n  \n  assign v.previous previous\n  assign v.next next\n  \n  assign previous v\n end\n \n let r to_tree r\n \n forof r\n  apply_siblings v r\n end\n\n ret r\nend"},"ui-page-reorder":{"id":"ui-page-reorder","name":"ui-page-reorder","branch":"lib-vps","path":"lib-vps/ui-page-reorder.cs","sloc":11,"content":"gn ui_page_reorder x\n check is_arr x\n\n forin x\n  let i to_i k\n  let v at x i\n  let id v.id\n  let order i\n  let o obj id order\n  \n  run api_table_update \"page\" o\n end\nend"},"ui-page-siblings":{"id":"ui-page-siblings","name":"ui-page-siblings","branch":"lib-vps","path":"lib-vps/ui-page-siblings.cs","sloc":7,"content":"gn ui_page_siblings x\n check is_obj x\n \n let parent x.parent\n \n if is_null parent\n  ret run ui_page_list\n    \n ret parent.children\nend"},"ui-page-title":{"id":"ui-page-title","name":"ui-page-title","branch":"lib-vps","path":"lib-vps/ui-page-title.cs","sloc":7,"content":"gn ui_page_title x\n check is_int x\n  \n let page run ui_page_init x\n  \n if is_null page\n  ret \"<<none>>\"\n  \n ret page.title\nend"},"ui-page-top":{"id":"ui-page-top","name":"ui-page-top","branch":"lib-vps","path":"lib-vps/ui-page-top.cs","sloc":12,"content":"gn ui_page_top x\n check is_obj x\n\n let pages run ui_page_find\n let a arr\n \n push a x\n \n while is_full pages\n  let page shift pages\n  \n  if different page.id x.id\n   push a page\n end\n \n run ui_page_reorder a\nend"},"ui-page-up":{"id":"ui-page-up","name":"ui-page-up","branch":"lib-vps","path":"lib-vps/ui-page-up.cs","sloc":30,"content":"gn ui_page_up x\n check is_obj x\n \n gn get_before x\n  check is_obj x\n  \n  var r null\n  let siblings run ui_page_siblings x\n  \n  while is_full siblings\n   let page shift siblings\n   \n   if same page.id x.id\n    brk\n    \n   assign r page\n  end\n  \n  ret r\n end\n\n let before run get_before x\n \n if is_null before\n  ret\n\n let pages run ui_page_find\n let a arr\n \n while is_full pages\n  let page shift pages\n\n  if same page.id x.id\n  elseif same page.id before.id\n   push a x\n   push a before\n  else\n   push a page\n end\n \n run ui_page_reorder a\nend"},"uncomment":{"id":"uncomment","name":"uncomment","branch":"prg-compile","path":"prg-compile/level-b/uncomment.js","sloc":21,"content":"function uncomment(x)\n{\n check(is_str,x)\n\n const output=arr()\n \n for(const v of split(x))\n {\n  const s1=trim_r(v)\n  \n  if(is_empty(s1))\n   continue\n \n  const s2=trim_l(s1)\n  const indent=sub(s1.length,s2.length)   \n  const tokens=recognize(s2)\n\n  if(is_empty(tokens))\n   continue\n   \n  const s3=collate(tokens)\n  const s4=repeat(\" \",indent)\n  const s5=concat(s4,s3)\n  \n  push(output,s5)\n } \n \n return join(output)\n}"},"unit-file-list":{"id":"unit-file-list","name":"unit-file-list","branch":"spa-mabynogy","path":"spa-mabynogy/src/unit-file-list.cs","sloc":68,"content":"fn unit_file_list x y\n check is_obj x\n \n if is_undef y\n  ret unit_file_list x \"\"\n  \n check is_str y\n\n let columns arr \"#\" \"name\" \"branch\" \"lang\" \"size\" \"sloc\"\n \n if is_full y\n  let n find columns \"branch\"\n  \n  remove columns n\n end\n \n let grid grid_init body columns:spread\n let a get_values x\n let lang_slocs obj\n let lang_sizes obj\n var n 1\n var total_sloc 0\n var total_size 0\n \n forin a\n  let i to_i k\n  let v at a i\n\n  if is_full y\n   if different y v.branch\n    cont\n\n  let row grid_push grid\n  let ext path_ext v.path\n  let sloc v.sloc\n  let size v.content.length\n  let bsize to_bsize size\n  let url_name concat \"/\" v.id \"/\"\n  let url_branch concat \"/?b=\" v.branch\n  \n  dom_a row.name v.name url_name true\n  \n  if is_empty y\n   dom_a row.branch v.branch url_branch true\n  \n  dom_text row.sharp n\n  dom_text row.lang ext\n  dom_text row.size bsize\n  dom_text row.sloc sloc\n  \n  let lang_sloc get lang_slocs ext 0\n  let lang_sloc add lang_sloc sloc\n  \n  set lang_slocs ext lang_sloc\n\n  let lang_size get lang_sizes ext 0\n  let lang_size add lang_size size\n  \n  set lang_sizes ext lang_size\n  \n  assign n inc n\n  assign total_sloc add total_sloc v.sloc\n  assign total_size add total_size v.content.length\n end\n \n forin lang_slocs\n  let row grid_push grid\n  let sloc get lang_slocs k\n  let size get lang_sizes k\n  let bsize to_bsize size\n  \n  dom_text row.name k\n  dom_align row.name \"right\"\n  dom_text row.size bsize\n  dom_text row.sloc sloc\n end\n \n let row grid_push grid\n let size to_bsize total_size\n \n dom_text row.name \"Total\"\n dom_align row.name \"right\"\n dom_text row.size size\n dom_text row.sloc total_sloc\n \n grid_align grid \"sharp\" \"right\"\n grid_align grid \"size\" \"right\"\n grid_align grid \"sloc\" \"right\"  \n grid_ellipsis grid\nend"},"unparen":{"id":"unparen","name":"unparen","branch":"prg-compile","path":"prg-compile/level-b/unparen.js","sloc":10,"content":"function unparen(x)\n{\n check(is_str,x)\n \n if(is_parened(x))\n {\n  const n=sub(x.length,2)\n  \n  return slice(x,1,n)\n }\n \n return x\n}"},"unpunct-r":{"id":"unpunct-r","name":"unpunct-r","branch":"prg-compile","path":"prg-compile/level-c/unpunct-r.cs","sloc":12,"content":"fn unpunct_r x\n check is_str x\n \n var r x\n \n while is_full r\n  let c back r\n  \n  if not is_punct c\n   brk\n    \n  assign r strip_r r c\n  assign r trim_r r\n end\n\n ret r\nend"},"unset":{"id":"unset","name":"unset","branch":"prg-compile","path":"prg-compile/level-c/unset.cs","sloc":12,"content":"fn unset x y\n check is_obj x\n check is_str y\n \n let r obj\n \n forin x\n  let v get x k\n  \n  if same k y\n   cont\n  \n  put r k v\n end\n \n ret r\nend"},"unshift":{"id":"unshift","name":"unshift","branch":"prg-compile","path":"prg-compile/level-a/unshift.js","sloc":6,"content":"function unshift(x,y)\n{\n check(is_arr,x)\n check(is_def,y)\n \n x.unshift(y)\n}"},"untrivia":{"id":"untrivia","name":"untrivia","branch":"prg-compile","path":"prg-compile/level-b/untrivia.js","sloc":17,"content":"function untrivia(x)\n{\n check(is_str,x)\n\n const output=arr()\n \n for(const v of split(x))\n {\n  const s1=trim_r(v)\n  \n  if(is_empty(s1))\n   continue\n   \n  const tokens=recognize(s1)\n   \n  if(is_empty(tokens))\n   continue\n   \n  const s2=join(tokens,\" \")\n  \n  push(output,s2)\n } \n \n return join(output)\n}"},"unwrap":{"id":"unwrap","name":"unwrap","branch":"prg-compile","path":"prg-compile/level-b/unwrap.js","sloc":11,"content":"function unwrap(x)\n{\n check(is_str,x)\n\n if(is_lit(x))\n  return from_json(x)\n\n if(is_access(x))\n  return split(x,\".\")\n\n if(is_tuple(x))\n  return split(x,\":\")\n  \n stop()\n}"},"url-excerpt":{"id":"url-excerpt","name":"url-excerpt","branch":"prg-compile","path":"prg-compile/level-c/url-excerpt.cs","sloc":13,"content":"fn url_excerpt x y\n check is_str x\n \n if is_undef y\n  ret url_excerpt x 128\n \n check is_uint y\n\n let r x\n let r strip_l r \"http://\"\n let r strip_l r \"https://\"\n let r strip_l r \"www.\"\n let r unpunct_r r\n let r txt_excerpt r y\n \n ret r\nend"},"url-parse":{"id":"url-parse","name":"url-parse","branch":"prg-compile","path":"prg-compile/level-c/url-parse.cs","sloc":4,"content":"fn url_parse x\n check is_str x\n \n ret new URL x\nend"},"vps-init":{"id":"vps-init","name":"vps-init","branch":"lib-vps","path":"lib-vps/vps-init.cs","sloc":17,"content":"fn vps_init\n let params new URLSearchParams location.search\n var v params.get \"v\"\n\n if is_null v\n  if mobile\n   assign v \"m\"\n  else\n   assign v \"d\"\n end\n  \n if same v \"m\"\n  assign mobile true\n elseif same v \"d\"\n  assign mobile false\n else\n  stop\n\n css_init\nend"},"vps-init-1":{"id":"vps-init-1","name":"vps-init","branch":"lib-deploy","path":"lib-deploy/src/vps-init.cs","sloc":7,"content":"fn vps_init\n let r call env_init\n\n assign r.server \"pimaastore.com\"\n assign r.login concat r.user \"@\" r.server\n assign r.mnt path_concat r.mnt \"vps\"\n \n ret r\nend"},"weight-load":{"id":"weight-load","name":"weight-load","branch":"prg-measure","path":"prg-measure/src/weight-load.cs","sloc":12,"content":"fn weight_load\n let r arr\n let path \"/home/mabynogy/place-hdd/room-personal/case-log/health-weight.txt\"\n let content file_read path\n \n tbl_import_wsl r content\n \n forof r\n  assign v.date time_parse v.date\n  assign v.weight strip_r v.weight \"kg\"\n  assign v.weight to_num v.weight\n end\n\n ret r\nend"},"xhr-load":{"id":"xhr-load","name":"xhr-load","branch":"lib-gui","path":"lib-gui/xhr-load.cs","sloc":27,"content":"gn xhr_load x\n check is_str x\n \n var result null\n let timeout 8\n let xhr new XMLHttpRequest\n \n fn on_ready_state_change x\n  if same xhr.readyState xhr.DONE\n   assign result xhr.response\n  end\n end\n \n xhr.open \"get\" x\n\n assign xhr.onreadystatechange on_ready_state_change\n \n xhr.send\n  \n let begin call time_now\n \n while true\n  if is_str result\n   brk\n   \n  let end call time_now\n  let time sub end begin\n  \n  if gt time timeout\n   stop\n  \n  yield\n end\n \n if is_json result\n  ret from_json result\n \n ret result\nend"},"xhr-post":{"id":"xhr-post","name":"xhr-post","branch":"lib-gui","path":"lib-gui/xhr-post.cs","sloc":29,"content":"gn xhr_post x y\n check is_str x\n check is_str y\n \n var result null\n let timeout 4\n let xhr new XMLHttpRequest\n \n fn on_ready_state_change x\n  if same xhr.readyState xhr.DONE\n   assign result xhr.response\n  end\n end\n \n xhr.open \"post\" x\n\n assign xhr.onreadystatechange on_ready_state_change\n \n xhr.setRequestHeader \"content-type\" \"application/x-www-form-urlencoded\"\n \n let u encodeURIComponent y\n let u concat \"u=\" u\n \n xhr.send u\n  \n let begin call time_now\n \n while true\n  if is_str result\n   brk\n   \n  let end call time_now\n  let time sub end begin\n  \n  if gt time timeout\n   stop\n  \n  yield\n end\n \n ret result\nend"},"xn-call":{"id":"xn-call","name":"xn-call","branch":"prg-compile","path":"prg-compile/level-c/xn-call.cs","sloc":9,"content":"gn xn_call x y:spread\n check is_xn x\n \n if is_fn x\n  ret x y:spread\n elseif is_gn x\n  ret run x y:spread\n else\n  stop\nend"},"xor":{"id":"xor","name":"xor","branch":"prg-compile","path":"prg-compile/level-c/xor.cs","sloc":7,"content":"fn xor x y z:spread\n check different y 0\n \n let n inline \"x^y\"\n \n if is_empty z\n  ret n\n \n ret xor n z:spread\nend"},"zip":{"id":"zip","name":"zip","branch":"prg-compile","path":"prg-compile/level-c/zip.cs","sloc":13,"content":"fn zip x y\n check is_arr x\n check is_arr y\n check same x.length y.length\n \n let r obj\n \n forin x\n  let i to_i k\n  let key at x i\n  let value at y i\n  \n  put r key value\n end\n \n ret r\nend"}}